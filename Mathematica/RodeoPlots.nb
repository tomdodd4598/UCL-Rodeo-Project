(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    918239,      17330]
NotebookOptionsPosition[    915066,      17232]
NotebookOutlinePosition[    915460,      17249]
CellTagsIndexPosition[    915417,      17246]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"assumptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", 
      StyleBox["\[Element]", "OperatorCharacter"], 
      StyleBox["Reals", "OperatorCharacter"]}], 
     StyleBox[",", "OperatorCharacter"], 
     RowBox[{"\[Beta]", 
      StyleBox["\[Element]", "OperatorCharacter"], 
      StyleBox["Reals", "OperatorCharacter"]}], 
     StyleBox[",", "OperatorCharacter"], 
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "^", "2"}], "+", 
       RowBox[{"\[Beta]", "^", "2"}]}], "\[Equal]", "1"}], ",", 
     RowBox[{"\[Omega]", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[ScriptCapitalE]", "\[Element]", "Reals"}], ",", 
     RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalS]", "[", "x_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"x", ",", "assumptions"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalF]\[ScriptCapitalS]", "[", "x_", "]"}], ":=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"x", ",", "assumptions"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalN]Dist", "[", "\[Sigma]_", "]"}], ":=", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "\[Sigma]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalU]Dist", "[", "\[Sigma]_", "]"}], ":=", 
   RowBox[{"UniformDistribution", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sqrt", "[", "3", "]"}]}], "\[Sigma]"}], ",", 
      RowBox[{
       RowBox[{"Sqrt", "[", "3", "]"}], "\[Sigma]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalA]Dist", "[", "\[Sigma]_", "]"}], ":=", 
   RowBox[{"ArcSinDistribution", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sqrt", "[", "2", "]"}]}], "\[Sigma]"}], ",", 
      RowBox[{
       RowBox[{"Sqrt", "[", "2", "]"}], "\[Sigma]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbAllZero\[ScriptCapitalN]", "[", 
    RowBox[{"\[Sigma]_", ",", "\[Omega]_", ",", "\[ScriptCapitalE]_"}], "]"}],
    ":=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], 
        SuperscriptBox["\[Sigma]", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}], "2"]}]]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbAllZero\[ScriptCapitalU]", "[", 
    RowBox[{"\[Sigma]_", ",", "\[Omega]_", ",", "\[ScriptCapitalE]_"}], "]"}],
    ":=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Sinc", "[", 
       RowBox[{
        SqrtBox["3"], "\[Sigma]", 
        RowBox[{"(", 
         RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], "]"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbAllZero\[ScriptCapitalA]", "[", 
    RowBox[{"\[Sigma]_", ",", "\[Omega]_", ",", "\[ScriptCapitalE]_"}], "]"}],
    ":=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         SqrtBox["2"], "\[Sigma]", 
         RowBox[{"(", 
          RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}]}], "]"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probAllZeroDict", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "\[ScriptCapitalN]Dist", "\[Rule]", "ProbAllZero\[ScriptCapitalN]"}], 
      ",", 
      RowBox[{
      "\[ScriptCapitalU]Dist", "\[Rule]", "ProbAllZero\[ScriptCapitalU]"}], 
      ",", 
      RowBox[{
      "\[ScriptCapitalA]Dist", "\[Rule]", "ProbAllZero\[ScriptCapitalA]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbAllZeroGM", "[", 
    RowBox[{
    "dist_", ",", "\[Sigma]_", ",", "\[Omega]_", ",", "\[ScriptCapitalE]_"}], 
    "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"dist", "[", "\[Sigma]", "]"}], ",", "t"}], "]"}], 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", 
             RowBox[{"(", 
              RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], 
            "]"}]}], ")"}], "/", "2"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SymbolicDomainDecomposition\>\"", ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<LocalAdaptive\>\"", ",", 
            RowBox[{"MinRecursion", "\[Rule]", "10"}]}], "}"}]}]}], "}"}]}]}],
      "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbAllZeroGM\[ScriptCapitalN]", "[", 
    RowBox[{"\[Sigma]_", ",", "\[Omega]_", ",", "\[ScriptCapitalE]_"}], "]"}],
    ":=", 
   RowBox[{"ProbAllZeroGM", "[", 
    RowBox[{
    "\[ScriptCapitalN]Dist", ",", "\[Sigma]", ",", "\[Omega]", ",", 
     "\[ScriptCapitalE]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbAllZeroGM\[ScriptCapitalU]", "[", 
    RowBox[{"\[Sigma]_", ",", "\[Omega]_", ",", "\[ScriptCapitalE]_"}], "]"}],
    ":=", 
   RowBox[{"ProbAllZeroGM", "[", 
    RowBox[{
    "\[ScriptCapitalU]Dist", ",", "\[Sigma]", ",", "\[Omega]", ",", 
     "\[ScriptCapitalE]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbAllZeroGM\[ScriptCapitalA]", "[", 
    RowBox[{"\[Sigma]_", ",", "\[Omega]_", ",", "\[ScriptCapitalE]_"}], "]"}],
    ":=", 
   RowBox[{"ProbAllZeroGM", "[", 
    RowBox[{
    "\[ScriptCapitalA]Dist", ",", "\[Sigma]", ",", "\[Omega]", ",", 
     "\[ScriptCapitalE]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probAllZeroGMDict", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "\[ScriptCapitalN]Dist", "\[Rule]", "ProbAllZeroGM\[ScriptCapitalN]"}], 
      ",", 
      RowBox[{
      "\[ScriptCapitalU]Dist", "\[Rule]", "ProbAllZeroGM\[ScriptCapitalU]"}], 
      ",", 
      RowBox[{
      "\[ScriptCapitalA]Dist", "\[Rule]", 
       "ProbAllZeroGM\[ScriptCapitalA]"}]}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8674056902399797`*^9, 3.8674056906811333`*^9}, {
   3.8674060984226294`*^9, 3.8674060990290017`*^9}, {3.8674061934536247`*^9, 
   3.8674062358691096`*^9}, {3.867406371379346*^9, 3.8674063720382915`*^9}, {
   3.8674064102040987`*^9, 3.867406420244894*^9}, {3.8674064560441694`*^9, 
   3.867406508925808*^9}, {3.8674066194898715`*^9, 3.8674066983136997`*^9}, {
   3.86740716567064*^9, 3.8674071737577844`*^9}, {3.867407741834201*^9, 
   3.8674077420255213`*^9}, {3.8674078494249325`*^9, 
   3.8674078548957844`*^9}, {3.867407912568247*^9, 3.867407917134519*^9}, {
   3.867408409115526*^9, 3.8674084119564924`*^9}, 3.8674086806407576`*^9, {
   3.8674087471767697`*^9, 3.8674087486739964`*^9}, {3.8674088476002083`*^9, 
   3.8674088489031324`*^9}, {3.8674090123598404`*^9, 3.867409030614986*^9}, 
   3.8674092780912504`*^9, {3.8674099609098463`*^9, 3.867409972769809*^9}, {
   3.867415181466546*^9, 3.867415196680786*^9}, {3.8674152292979774`*^9, 
   3.8674152545381327`*^9}, {3.8674153424276123`*^9, 
   3.8674154067772465`*^9}, {3.867415590526519*^9, 3.867415618669819*^9}, {
   3.867415679079647*^9, 3.867415776995679*^9}, {3.86741582142083*^9, 
   3.867415838520516*^9}, {3.8674158687215686`*^9, 3.8674158701415005`*^9}, {
   3.8674159918581886`*^9, 3.8674159923303022`*^9}, {3.8674160719081435`*^9, 
   3.8674160984236655`*^9}, {3.8674162003164735`*^9, 
   3.8674162489103737`*^9}, {3.867416281093704*^9, 3.8674163506300116`*^9}, {
   3.8674164137684097`*^9, 3.8674164208153887`*^9}, {3.8674164829136343`*^9, 
   3.86741670906637*^9}, {3.867417222389857*^9, 3.8674172472716255`*^9}, {
   3.8674179032033234`*^9, 3.86741790498975*^9}, {3.867418230693155*^9, 
   3.867418264015353*^9}, {3.8674196730158887`*^9, 3.8674196736299477`*^9}, {
   3.867419745140596*^9, 3.867419782493043*^9}, {3.8674198252371387`*^9, 
   3.8674198961341715`*^9}, {3.867419929445873*^9, 3.8674199508696885`*^9}, 
   3.867420114470048*^9, {3.867422505531223*^9, 3.867422513266271*^9}, {
   3.867422890873809*^9, 3.8674229292614045`*^9}, {3.8674230094618998`*^9, 
   3.867423010412922*^9}, {3.867423057395547*^9, 3.867423065020999*^9}, {
   3.867834024703211*^9, 3.8678340247681446`*^9}, {3.867837567952894*^9, 
   3.8678375868565426`*^9}, {3.867837718327952*^9, 3.8678377570551214`*^9}, {
   3.86783818606131*^9, 3.867838230901574*^9}, {3.8678760606306257`*^9, 
   3.867876069704303*^9}, 3.8678761061030655`*^9, {3.867877542398746*^9, 
   3.867877550566368*^9}, {3.868362665561059*^9, 3.8683626759934797`*^9}, {
   3.8683629961987104`*^9, 3.868363000749409*^9}, {3.868363136437268*^9, 
   3.868363157181234*^9}, {3.868363505410878*^9, 3.86836351674625*^9}, {
   3.8683637635438848`*^9, 3.8683637919686055`*^9}, {3.868363883314834*^9, 
   3.868363894575719*^9}, {3.8684728737144537`*^9, 3.8684728753896656`*^9}, {
   3.86848092903648*^9, 3.8684809722801933`*^9}, {3.86968164220292*^9, 
   3.869681708680298*^9}, 3.8696842932374983`*^9, {3.870297184026555*^9, 
   3.8702973844329567`*^9}, {3.8703691187465553`*^9, 3.8703691604276714`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorData", "[", 
  RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.368417, 0.506779, 0.709798]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.368417, 0.506779, 0.709798]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.368417, 0.506779, 0.709798],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.587148, 0.40736066666666665`, 0.09470066666666668],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.880722, 0.611041, 0.142051]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.880722, 0.611041, 0.142051]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.880722, 0.611041, 0.142051],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.37345400000000006`, 0.461046, 0.12992333333333334`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.560181, 0.691569, 0.194885]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.560181, 0.691569, 0.194885]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.560181, 0.691569, 0.194885],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6150173333333333, 0.25708400000000003`, 0.13945266666666667`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.922526, 0.385626, 0.209179]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.922526, 0.385626, 0.209179]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.922526, 0.385626, 0.209179],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3523253333333333, 0.3137493333333333, 0.46756733333333333`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.528488, 0.470624, 0.701351]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.528488, 0.470624, 0.701351]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.528488, 0.470624, 0.701351],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.772079, 0.431554, 0.102387], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5147193333333333, 0.28770266666666666`, 0.06825800000000001],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.772079, 0.431554, 0.102387]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.772079, 0.431554, 0.102387]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.772079, 0.431554, 0.102387],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.363898, 0.618501, 0.782349], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.24259866666666668`, 0.412334, 0.521566],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.363898, 0.618501, 0.782349]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.363898, 0.618501, 0.782349]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.363898, 0.618501, 0.782349],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[1, 0.75, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.75, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.75, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.647624, 0.37816, 0.614037], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.4317493333333333, 0.2521066666666667, 0.40935800000000006`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.647624, 0.37816, 0.614037]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.647624, 0.37816, 0.614037]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.647624, 0.37816, 0.614037],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.571589, 0.586483, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.571589, 0.586483, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.571589, 0.586483, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.571589, 0.586483, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.915, 0.3325, 0.2125], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6100000000000001, 0.22166666666666668`, 0.14166666666666666`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.915, 0.3325, 0.2125]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.915, 0.3325, 0.2125]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.915, 0.3325, 0.2125],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.2672148173956843, 0.34800444289592275`, 0.5666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.40082222609352647, 0.5220066643438841, 0.85]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6485525936249404, 0.4144296347913687, 0.048907997212660946`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.4911884484706007, 0.23866666666666667`, 0.3353511049170246],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.736782672705901, 0.358, 0.5030266573755369],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.18684294025131137`, 0.4766666666666667, 0.2861392881649977],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      "RGBColor[0.28026441037696703, 0.715, 0.4292089322474965]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.8684595690105886`*^9, 3.8702405797993736`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RodeoPlotStyleSequence", "[", "ylabel_", "]"}], ":=", 
    RowBox[{"Sequence", "[", 
     RowBox[{
      RowBox[{"Filling", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[ScriptCapitalE]\>\"", ",", "ylabel"}], "}"}]}], ",", 
      RowBox[{"TicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
         RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbAllZeroExpectation", "[", 
    RowBox[{
    "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", 
     "\[ScriptCapitalE]_", ",", "\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Alpha]", "2"], 
     RowBox[{
      RowBox[{
       RowBox[{"probAllZeroDict", "[", "dist", "]"}], "[", 
       RowBox[{"\[Sigma]", ",", "\[Omega]", ",", "\[ScriptCapitalE]"}], "]"}],
       "^", "n"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], 
     RowBox[{
      RowBox[{
       RowBox[{"probAllZeroDict", "[", "dist", "]"}], "[", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"-", "\[Omega]"}], ",", "\[ScriptCapitalE]"}], "]"}], "^", 
      "n"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProbAllZeroExpectationGM", "[", 
     RowBox[{
     "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", 
      "\[ScriptCapitalE]_", ",", "\[Alpha]_", ",", "\[Beta]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], 
      RowBox[{
       RowBox[{
        RowBox[{"probAllZeroGMDict", "[", "dist", "]"}], "[", 
        RowBox[{"\[Sigma]", ",", "\[Omega]", ",", "\[ScriptCapitalE]"}], 
        "]"}], "^", "n"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Beta]", "2"], 
      RowBox[{
       RowBox[{
        RowBox[{"probAllZeroGMDict", "[", "dist", "]"}], "[", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"-", "\[Omega]"}], ",", "\[ScriptCapitalE]"}], "]"}], "^", 
       "n"}]}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SingleRunAllZero", "[", 
    RowBox[{
    "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", 
     "\[ScriptCapitalE]_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "shots_"}],
     "]"}], ":=", 
   RowBox[{
    RowBox[{"RandomVariate", "[", 
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"shots", ",", 
       RowBox[{"ProbAllZeroExpectation", "[", 
        RowBox[{
        "dist", ",", "\[Sigma]", ",", "n", ",", "\[Omega]", ",", 
         "\[ScriptCapitalE]", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}]}], 
      "]"}], "]"}], "/", "shots"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RodeoAllZeroExpectationPlot", "[", 
     RowBox[{
     "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", "\[Alpha]_",
       ",", "\[Beta]_", ",", "min_", ",", "max_", ",", "join_", ",", 
      "color_"}], "]"}], ":=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"ProbAllZeroExpectation", "[", 
       RowBox[{
       "dist", ",", "\[Sigma]", ",", "n", ",", "\[Omega]", ",", 
        "\[ScriptCapitalE]", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], " ", 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[ScriptCapitalE]", ",", "min", ",", "max"}], "}"}], ",", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
       "RodeoPlotStyleSequence", "[", 
        "\"\<\!\(\*SubscriptBox[OverscriptBox[\(P\), \(_\)], \(n\)]\)\>\"", 
        "]"}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thin", ",", "color"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TimeArray", "[", 
    RowBox[{"dist_", ",", "\[Sigma]_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{"dist", "[", "\[Sigma]", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbPlus", "[", 
    RowBox[{
    "n_", ",", "\[Omega]_", ",", "\[ScriptCapitalE]_", ",", "\[Alpha]_", ",", 
     "\[Beta]_", ",", "timearray_"}], "]"}], ":=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Beta]", "/", "\[Alpha]"}], ")"}], "2"], 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"timearray", "[", 
               RowBox[{"[", "k", "]"}], "]"}], 
              RowBox[{"(", 
               RowBox[{"\[ScriptCapitalE]", "+", "\[Omega]"}], ")"}]}], 
             "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"timearray", "[", 
               RowBox[{"[", "k", "]"}], "]"}], 
              RowBox[{"(", 
               RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], 
             "]"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbMinus", "[", 
    RowBox[{
    "n_", ",", "\[Omega]_", ",", "\[ScriptCapitalE]_", ",", "\[Alpha]_", ",", 
     "\[Beta]_", ",", "timearray_"}], "]"}], ":=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "/", "\[Beta]"}], ")"}], "2"], 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"timearray", "[", 
               RowBox[{"[", "k", "]"}], "]"}], 
              RowBox[{"(", 
               RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], 
             "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"timearray", "[", 
               RowBox[{"[", "k", "]"}], "]"}], 
              RowBox[{"(", 
               RowBox[{"\[ScriptCapitalE]", "+", "\[Omega]"}], ")"}]}], 
             "]"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SingleRunPlusOverlap", "[", 
     RowBox[{"probability_", ",", "shots_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"shots", ",", "probability"}], "]"}], "]"}], "/", "shots"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RodeoPlusOverlapPoint", "[", 
   RowBox[{
   "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", 
    "\[ScriptCapitalE]_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "evalreps_",
     ",", "errorbars_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ProbPlus", "[", 
         RowBox[{
         "n", ",", "\[Omega]", ",", "\[ScriptCapitalE]", ",", "\[Alpha]", ",",
           "\[Beta]", ",", 
          RowBox[{"TimeArray", "[", 
           RowBox[{"dist", ",", "\[Sigma]", ",", "n"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "evalreps"}], "}"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mean", "=", 
        RowBox[{"Mean", "[", "data", "]"}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{"errorbars", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[ScriptCapitalE]", ",", "mean"}], "}"}], ",", 
          RowBox[{"ErrorBar", "[", 
           RowBox[{
            RowBox[{"Quantile", "[", 
             RowBox[{"data", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "/", "4"}], ",", 
                RowBox[{"3", "/", "4"}]}], "}"}]}], "]"}], "-", 
            RowBox[{"{", 
             RowBox[{"mean", ",", "mean"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[ScriptCapitalE]", ",", "mean"}], "}"}]}], "]"}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RodeoPlusOverlapPlot", "[", 
    RowBox[{
    "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", "\[Alpha]_", 
     ",", "\[Beta]_", ",", "evalreps_", ",", "min_", ",", "max_", ",", 
     "diff_", ",", "join_", ",", "color_", ",", "errorbars_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"points", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RodeoPlusOverlapPoint", "[", 
          RowBox[{
          "dist", ",", "\[Sigma]", ",", "n", ",", "\[Omega]", ",", 
           "\[ScriptCapitalE]", ",", "\[Alpha]", ",", "\[Beta]", ",", 
           "evalreps", ",", "errorbars"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[ScriptCapitalE]", ",", "min", ",", "max", ",", "diff"}], 
          "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"errorbars", ",", "ErrorListPlot", ",", "ListPlot"}], "]"}], 
      "[", 
      RowBox[{"points", ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
        "RodeoPlotStyleSequence", "[", 
         "\"\<\!\(\*OverscriptBox[SqrtBox[\(1 - \*SuperscriptBox[\(\
\[CapitalDelta]\), \(2\)]\)], \(_\)]\)\>\"", "]"}], "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "join"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thin", ",", "color"}], "}"}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RodeoPlusLogResidualPoint", "[", 
   RowBox[{
   "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", 
    "\[ScriptCapitalE]_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", 
    "evalreps_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"ProbMinus", "[", 
           RowBox[{
           "n", ",", "\[Omega]", ",", "\[ScriptCapitalE]", ",", "\[Alpha]", 
            ",", "\[Beta]", ",", 
            RowBox[{"TimeArray", "[", 
             RowBox[{"dist", ",", "\[Sigma]", ",", "n"}], "]"}]}], "]"}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "evalreps"}], "}"}]}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mean", "=", 
        RowBox[{"Mean", "[", "data", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[ScriptCapitalE]", ",", "mean"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RodeoPlusLogResidualPlot", "[", 
     RowBox[{
     "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", "\[Alpha]_",
       ",", "\[Beta]_", ",", "evalreps_", ",", "min_", ",", "max_", ",", 
      "diff_", ",", "join_", ",", "color_"}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"points", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RodeoPlusLogResidualPoint", "[", 
           RowBox[{
           "dist", ",", "\[Sigma]", ",", "n", ",", "\[Omega]", ",", 
            "\[ScriptCapitalE]", ",", "\[Alpha]", ",", "\[Beta]", ",", 
            "evalreps"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[ScriptCapitalE]", ",", "min", ",", "max", ",", "diff"}],
            "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"points", ",", 
        RowBox[{"Filling", "\[Rule]", "None"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\[ScriptCapitalE]\>\"", ",", 
           "\"\<ln[\!\(\*OverscriptBox[\(\[CapitalDelta]\), \(_\)]\)]\>\""}], 
          "}"}]}], ",", 
        RowBox[{"TicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
           RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "join"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thin", ",", "color"}], "}"}]}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProbPlusExpectation", "[", 
     RowBox[{
     "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", 
      "\[ScriptCapitalE]_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "mr_", 
      ",", "pg_"}], "]"}], ":=", 
    RowBox[{"Re", "[", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Product", "[", 
         RowBox[{
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"dist", "[", "\[Sigma]", "]"}], ",", 
            SubscriptBox["t", "k"]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"\[Beta]", "/", "\[Alpha]"}], ")"}], "2"], 
           RowBox[{"Product", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["t", "k"], 
                  RowBox[{"(", 
                   RowBox[{"\[ScriptCapitalE]", "+", "\[Omega]"}], ")"}]}], 
                 "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  SubscriptBox["t", "k"], 
                  RowBox[{"(", 
                   RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], 
                 "]"}]}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["t", "k"], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[Element]", 
        RowBox[{"FullRegion", "[", "n", "]"}]}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "mr"}], ",", 
       RowBox[{"PrecisionGoal", "\[Rule]", "pg"}], ",", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<SymbolicDomainDecomposition\>\"", ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<LocalAdaptive\>\"", ",", 
             RowBox[{"MinRecursion", "\[Rule]", 
              RowBox[{"Quotient", "[", 
               RowBox[{"mr", ",", "2"}], "]"}]}]}], "}"}]}]}], "}"}]}]}], 
      "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProbMinusExpectation", "[", 
    RowBox[{
    "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", 
     "\[ScriptCapitalE]_", ",", "\[Alpha]_", ",", "\[Beta]_", ",", "mr_", ",",
      "pg_"}], "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"ProbPlusExpectation", "[", 
     RowBox[{
     "dist", ",", "\[Sigma]", ",", "n", ",", "\[Omega]", ",", 
      "\[ScriptCapitalE]", ",", "\[Alpha]", ",", "\[Beta]", ",", "mr", ",", 
      "pg"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RodeoPlusOverlapExpectationPlot", "[", 
    RowBox[{
    "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", "\[Alpha]_", 
     ",", "\[Beta]_", ",", "min_", ",", "max_", ",", "diff_", ",", "join_", 
     ",", "color_", ",", "mr_", ",", "pg_"}], "]"}], ":=", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"ProbPlusExpectation", "[", 
      RowBox[{
      "dist", ",", "\[Sigma]", ",", "n", ",", "\[Omega]", ",", 
       "\[ScriptCapitalE]", ",", "\[Alpha]", ",", "\[Beta]", ",", "mr", ",", 
       "pg"}], "]"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"\[ScriptCapitalE]", ",", "min", ",", "max", ",", "diff"}], 
      "}"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
      "RodeoPlotStyleSequence", "[", 
       "\"\<\!\(\*SubscriptBox[OverscriptBox[\(P\), \(_\)], \(n\)]\)\>\"", 
       "]"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "join"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thin", ",", "color"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RodeoCombinedExpectationPlot", "[", 
    RowBox[{
    "dist_", ",", "\[Sigma]_", ",", "n_", ",", "\[Omega]_", ",", "\[Alpha]_", 
     ",", "\[Beta]_", ",", "min_", ",", "max_", ",", "diff_", ",", "join_", 
     ",", "color1_", ",", "color2_", ",", "mr_", ",", "pg_"}], "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"ProbAllZeroExpectation", "[", 
        RowBox[{
        "dist", ",", "\[Sigma]", ",", "n", ",", "\[Omega]", ",", 
         "\[ScriptCapitalE]", ",", "\[Alpha]", ",", "\[Beta]"}], "]"}], " ", 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[ScriptCapitalE]", ",", "min", ",", "max"}], "}"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"RodeoPlotStyleSequence", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[OverscriptBox[\(P\), \(_\)], \(n\)]\)\>\"", 
          ",", "\"\<\!\(\*OverscriptBox[SqrtBox[\(1 - \*SuperscriptBox[\(\
\[CapitalDelta]\), \(2\)]\)], \(_\)]\)\>\""}], "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thin", ",", "color1"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<n=\>\"", "<>", 
         RowBox[{"ToString", "[", "n", "]"}]}]}]}], "]"}], ",", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"ProbPlusExpectation", "[", 
        RowBox[{
        "dist", ",", "\[Sigma]", ",", "n", ",", "\[Omega]", ",", 
         "\[ScriptCapitalE]", ",", "\[Alpha]", ",", "\[Beta]", ",", "mr", ",",
          "pg"}], "]"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"\[ScriptCapitalE]", ",", "min", ",", "max", ",", "diff"}], 
        "}"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"RodeoPlotStyleSequence", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[OverscriptBox[\(P\), \(_\)], \(n\)]\)\>\"", 
          ",", 
          "\"\<\!\(\*OverscriptBox[SqrtBox[\(1 - \*SuperscriptBox[\(\
\[CapitalDelta]\), \(2\)]\)], \(_\)]\)\>\""}], "]"}], "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "join"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thin", ",", "color2"}], "}"}]}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.867433252876994*^9, 3.867433346756562*^9}, {
   3.86743338457065*^9, 3.867433612210425*^9}, {3.867434095651802*^9, 
   3.8674340962771616`*^9}, 3.8674341973491383`*^9, {3.867434231955516*^9, 
   3.867434238850418*^9}, {3.8674361739141555`*^9, 3.86743619658303*^9}, {
   3.8674403174158287`*^9, 3.867440318123103*^9}, {3.8674403703673086`*^9, 
   3.867440371138514*^9}, {3.867440410425126*^9, 3.8674404121763244`*^9}, {
   3.867440447841612*^9, 3.867440479049517*^9}, {3.8674405234638*^9, 
   3.867440529825251*^9}, {3.867440579986061*^9, 3.867440645742382*^9}, {
   3.8674406764947243`*^9, 3.867440685310672*^9}, {3.8674409119334517`*^9, 
   3.867440931389838*^9}, {3.8674409840586205`*^9, 3.867440999715522*^9}, {
   3.8674414087541494`*^9, 3.8674414099463854`*^9}, 3.867444140312435*^9, {
   3.8674441834864073`*^9, 3.8674441932425137`*^9}, {3.8674442311175303`*^9, 
   3.8674442347680593`*^9}, {3.867444281564603*^9, 3.8674443269085116`*^9}, {
   3.8674443712004223`*^9, 3.8674443925451336`*^9}, {3.867837764248766*^9, 
   3.8678377657592535`*^9}, {3.8678378733053885`*^9, 
   3.8678379108704567`*^9}, {3.8678382612284093`*^9, 3.8678382951965046`*^9}, 
   3.867841252392576*^9, {3.8678662005524764`*^9, 3.8678662375798903`*^9}, {
   3.868364702228567*^9, 3.8683647378989334`*^9}, {3.868457861689251*^9, 
   3.86845786219226*^9}, {3.8684589164485745`*^9, 3.868459017319585*^9}, {
   3.8684590915793*^9, 3.8684590937926435`*^9}, {3.8684591334949045`*^9, 
   3.868459153990328*^9}, {3.8684593112125425`*^9, 3.8684593587667847`*^9}, 
   3.8684597128901124`*^9, {3.868461464429901*^9, 3.868461618334906*^9}, {
   3.8684617728196898`*^9, 3.8684617818117914`*^9}, {3.8684618165238066`*^9, 
   3.868461840140543*^9}, {3.86846204858855*^9, 3.868462125592781*^9}, {
   3.868462176579604*^9, 3.8684621877206736`*^9}, 3.8684625360332017`*^9, {
   3.868462774887088*^9, 3.8684627753522253`*^9}, {3.868463176154052*^9, 
   3.8684631762975473`*^9}, {3.8684693239492683`*^9, 
   3.8684693538201046`*^9}, {3.8684694381244154`*^9, 
   3.8684694397743473`*^9}, {3.8684694729005613`*^9, 3.868469474563631*^9}, {
   3.868469710883047*^9, 3.868469739601679*^9}, {3.8684700536265078`*^9, 
   3.868470060079774*^9}, {3.868470093496768*^9, 3.868470095706148*^9}, {
   3.868470186614338*^9, 3.868470241255447*^9}, {3.8684707146547947`*^9, 
   3.868470723195597*^9}, {3.868470820298722*^9, 3.8684708915880637`*^9}, {
   3.868470935553692*^9, 3.8684709603569164`*^9}, {3.868471006899487*^9, 
   3.8684710363384705`*^9}, {3.868471190633897*^9, 3.868471204073247*^9}, {
   3.8684715640791483`*^9, 3.868471619149334*^9}, {3.868472221392454*^9, 
   3.8684722275362415`*^9}, {3.868472284271864*^9, 3.8684722859995494`*^9}, {
   3.868472318192336*^9, 3.8684723216556816`*^9}, {3.8684725244953012`*^9, 
   3.8684725294707947`*^9}, {3.8684725879974537`*^9, 3.868472600808732*^9}, {
   3.8684734760233808`*^9, 3.868473479631365*^9}, {3.8684736872295675`*^9, 
   3.868473713780736*^9}, {3.8684739119234905`*^9, 3.8684739288859143`*^9}, {
   3.868473987332676*^9, 3.868473990309571*^9}, {3.8684741628599043`*^9, 
   3.8684743025843363`*^9}, {3.868476089774712*^9, 3.8684760991414084`*^9}, {
   3.868476370189768*^9, 3.8684763723642497`*^9}, {3.868476452651039*^9, 
   3.8684765017466764`*^9}, {3.8684765786349373`*^9, 3.868476602093459*^9}, {
   3.8684766429315586`*^9, 3.868476643507493*^9}, {3.8684766752577176`*^9, 
   3.8684767264269924`*^9}, 3.8684768761690683`*^9, {3.8686372668325653`*^9, 
   3.8686374791257706`*^9}, {3.8686376674580197`*^9, 3.868637711294963*^9}, {
   3.8686385644272776`*^9, 3.8686385651543317`*^9}, 3.868638621443121*^9, {
   3.8686386552693725`*^9, 3.868638708559126*^9}, {3.868638740290433*^9, 
   3.8686387507139487`*^9}, 3.8686387897960925`*^9, 3.868638994312271*^9, {
   3.8686400423870325`*^9, 3.868640048041459*^9}, {3.8686401035845776`*^9, 
   3.8686401135845084`*^9}, {3.868640565421423*^9, 3.8686405774013777`*^9}, 
   3.8686416496617966`*^9, {3.8686419518933125`*^9, 3.868642084331245*^9}, 
   3.8686431910544596`*^9, 3.870240302999673*^9, {3.8702403780754733`*^9, 
   3.870240382894062*^9}, 3.870240747756181*^9, {3.870240782538972*^9, 
   3.870240784788658*^9}, {3.8702408253062*^9, 3.870240865043462*^9}, {
   3.8702409087739544`*^9, 3.87024095155315*^9}, {3.870241019040488*^9, 
   3.870241037619563*^9}, {3.870243294205826*^9, 3.8702433003425283`*^9}, {
   3.8702433344224586`*^9, 3.870243357687517*^9}, 3.8702434006373186`*^9, {
   3.8702438437060003`*^9, 3.870243868382683*^9}, {3.8702478306509805`*^9, 
   3.8702478696368628`*^9}, {3.8702971641390204`*^9, 3.87029716957143*^9}, {
   3.870297210090732*^9, 3.8702972115632167`*^9}, {3.8703107733355412`*^9, 
   3.8703107876947713`*^9}, {3.8703108249744077`*^9, 
   3.8703108961601686`*^9}, {3.870311075358489*^9, 3.870311075516326*^9}, {
   3.870379875804885*^9, 3.870379877884013*^9}, {3.8703800808917418`*^9, 
   3.87038011466761*^9}, {3.8703802301140885`*^9, 3.870380246987714*^9}, 
   3.870380278785963*^9, {3.870380311164448*^9, 3.8703804451890645`*^9}, {
   3.870381103442814*^9, 3.870381166230362*^9}, 3.870381253492689*^9, {
   3.8703814664743757`*^9, 3.8703814950259933`*^9}, {3.8703815359059253`*^9, 
   3.8703816215130835`*^9}, 3.8703816755374885`*^9, {3.870381867946535*^9, 
   3.8703818698236012`*^9}, {3.870381927706448*^9, 3.8703819696947737`*^9}, {
   3.870382041188553*^9, 3.8703820516298065`*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RodeoAllZeroExpectationPlot", "[", 
     RowBox[{"\[ScriptCapitalN]Dist", ",", "1", ",", "3", ",", 
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"-", "4"}], ",", "4", ",", 
      RowBox[{"1", "/", "50"}], ",", "True", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.368417, 0.506779, 0.709798], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.368417, 0.506779, 0.709798]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.368417, 0.506779, 0.709798]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.368417, 0.506779, 0.709798],
       Editable->False,
       Selectable->False]}], "]"}], ",", 
    RowBox[{"RodeoAllZeroExpectationPlot", "[", 
     RowBox[{"\[ScriptCapitalN]Dist", ",", "2", ",", "3", ",", 
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"-", "2"}], ",", "2", ",", 
      RowBox[{"1", "/", "50"}], ",", "True", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.587148, 0.40736066666666665`, 0.09470066666666668],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.880722, 0.611041, 0.142051]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.880722, 0.611041, 0.142051]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.880722, 0.611041, 0.142051],
       Editable->False,
       Selectable->False]}], "]"}], ",", 
    RowBox[{"RodeoAllZeroExpectationPlot", "[", 
     RowBox[{"\[ScriptCapitalN]Dist", ",", "4", ",", "3", ",", 
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"1", "/", "50"}], ",", "True", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.37345400000000006`, 0.461046, 0.12992333333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.560181, 0.691569, 0.194885]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.560181, 0.691569, 0.194885]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.560181, 0.691569, 0.194885],
       Editable->False,
       Selectable->False]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8702403308929663`*^9, 3.87024034478835*^9}, {
  3.8702403896445045`*^9, 3.8702404366302166`*^9}, {3.870240963962449*^9, 
  3.870240978050189*^9}, {3.8702410987159996`*^9, 3.870241340693031*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<RodeoResolve.svg\>\"", ",", 
    GraphicsBox[{{}, {InsetBox[
        GraphicsBox[{
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0038500000000000006`], Thickness[Tiny]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
kvuP/wBoL0jk
            "]], {}, {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesLabel->{
           FormBox["\"\[ScriptCapitalE]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(n\\)]\\)\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05]},
         PlotRange->{{-4., 4.}, {0, 1}},
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}},
         Ticks->{Automatic, Automatic},
         TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], {193.5, -116.80842387373012`},
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
        GraphicsBox[{
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.0038500000000000006`], Thickness[Tiny]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
U76OdA==
            "]], {}, {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesLabel->{
           FormBox["\"\[ScriptCapitalE]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(n\\)]\\)\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05]},
         PlotRange->{{-2., 2.}, {0, 1}},
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}},
         Ticks->{Automatic, Automatic},
         TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], {580.5, -116.80842387373012`},
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
        GraphicsBox[{
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.004766666666666667], Thickness[Tiny]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.004766666666666667], Thickness[Tiny], LineBox[CompressedData["
1:eJxVlX9I1HcYx6/ZFkgkooOo8Mfc+iVjgdWQut7VUtsUma0QmX+0SrNcaiAE
BjFw1mR4MpmGjrnyx+ifuXEWs63tqazO1Mpf5123nHeaedp5DdIZgrm7r+9n
0Ae+fxzf+z7f53k/7/frG3uocF9OiMlkWhK4cgLXayY9/8gvDxu+W32lHdmV
N2fWZz+TgoKYr9sLbqEtquxpRptfCtckj6Wm3EZkS4qnJNIvv+30237dfQcn
zaGOxqIpaX+xOnNXjg33uoPHJ2V1kx3m1g5sMAr6pNhb/e70pk4EqwVKSsuW
yIEjI10IFAtUnBT7MfPcQuc9GOXMkzJnOTuQOvUAdbXBMyE/nS+eNb/Ti3/X
Bwt6JSrnw80LRX3YZzTolaVxCwmlzn4Y7bWMy9PvHy8Ny7LDKBc6LsOtEbtz
/YPINc4TSb+W+enPVU60zwQLjsl+y9aNRTtciDYaHJO82gMTl7x/4bQx8GOZ
Gp8uDz83BKOcY1T6fK9/ULJiGAnGGRVb3zcbfkx0w5CvckSufJnoDre74TPG
9UjV7yVfbNvvwd7FgeVqZvyeH6weNAXLNbrl45BHR+/4PFjch1u6TqyaLjWN
UP+/ZbqwK2zNlId6D8lGV01bRquH+j6S+ZJ1hVkHPNTTJcioSrUOuqnfQ8kf
9NdPbHNTL6dMxliu10cOUx+H9CTlX0uqHKIedrkUO+o881znH5CdR+JiLqS5
OG+/LDvh+Dy62cn5eiX3ecrbCW84OE+PfGX2JtWcsrP/+2JpLp8tWOhnv91i
jZip/qShj/3dFVdyVGLe4V72Y5OI0s/qKvb08P235FC8v2JzxX2+74aErn1i
ea+/m/X/lMaVy3fMZ3Wx3lVJ75kbc0V38vnLsv1lWqz1rbv8f4tY80uL8w52
8H6TXPwo6c0oh42/v5WQ7D+assts0IQUTyyJf//4//eh9/k89HnWx6v1L0Pf
z/6g/bF/aP+cDzof54fOT32g+lA/qH7UF6ov9Yfqz/1A98P9QffH/UL3y/1D
909/QP1B/0D9Q39B/UX/Qf1Hf0L9Sf9C/Ut/Q/1N/0P9z3xA88H8QPPDfEHz
xfxB88d8QvPJ/ELzy3xD8838Q/NPPkD5QH5A+UG+QPlC/kD5Qz5B+UR+QflF
vkH5Rv5B+Uc+QvlIfkL5Sb5C+Ur+QvlLPkP5TH5D+U2+Q/lO/kP5z+8D9PvA
7wf0+/EfsZ5EVA==
            "]], {}, {}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesLabel->{
           FormBox["\"\[ScriptCapitalE]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(n\\)]\\)\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05]},
         PlotRange->{{-1., 1.}, {0, 1}},
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {Automatic, Automatic}},
         Ticks->{Automatic, Automatic},
         TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], {967.5, -116.80842387373012`},
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
     ContentSelectable->True,
     ImageSize->{844.9999999999691, Automatic},
     PlotRangePadding->{6, 5}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8702413814770746`*^9, 3.870241400950775*^9}, 
   3.870243384051387*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\"\<RandomVariate[BinomialDistribution[shots,1/2^n]]/shots\>\"", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<RandomVariate[BinomialDistribution[shots,((1-p)/2)^n+p^n]]/\
shots\>\"", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}], "^", "n"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"2", "^", "n"}]}], ")"}]}], ")"}], "/.", 
     RowBox[{"n", "\[Rule]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8702434181033497`*^9, 3.8702434861794376`*^9}, {
   3.870243708955423*^9, 3.870243728602209*^9}, {3.870247881658492*^9, 
   3.8702478818253183`*^9}, 3.8702479542488756`*^9, {3.870247987376788*^9, 
   3.8702480009677987`*^9}, {3.870248040800254*^9, 3.8702480479359093`*^9}, {
   3.8702481059112463`*^9, 3.8702481296249037`*^9}, {3.870248171872539*^9, 
   3.870248374461435*^9}, {3.870248429644647*^9, 3.870248446491309*^9}, {
   3.870248494470936*^9, 3.870248539426673*^9}, {3.870248774218089*^9, 
   3.8702487770085077`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVxX841HcAB3A/ngpJ9Pixa55E9KBHmfA4pTdSUbGc/KiZRGnG0NIWbS3p
PBVC1LgouvxIzZF+WCnCuIpwXHeZ/IqLc/U9P+5wuM/WH6/nZRoWyziqpqKi
4v2/L+8+OtpZP+a/zT4ucYmKihQfKwLC+mn2iLKQF7ipSmG4nH+5muaBop7j
jslqUmyk6xcX0PZDZ0fksaVLpHDu2Fx5hXYEo7Sgl9paUtRfb3RIp8Uj/0v6
UiQnpZ66RDsPdaMJ/c2WUhyJp2gXaTngPTtmHrFPCo0cryLpxG0U7tViZpRK
8bjDbteuNRykXKM7T85KEZTc29OY+gCO3L9caj0nEFt1wiZ3+m8YbRGc87o5
gcnMt1xV1TqsjEw31pVOgPuiua59awPowtmZvF2TiEzwWnFA0gSbTXdMUwsm
8ULTjtz7qQVObqKbDz9NooTdpFxt8QrxOcJDbI8puBo+u+VX0QrurcD4V1en
YNPSW9Ns3Q5R7teCoJEpdLv6fb7zuQMOHTmny7dMI1orise35eF6AyveIW0a
r4WBz3Qud8FO7s9J/jANv51Bg8PD3cjRC3Ci02VwLEwNLDR/C53RIQPLizIM
KLO7f/hDgBpi7tDTL8OIVzvbsFGIRN5U2T+2clTm9Sd0mvYgWvRrSPwFOYov
qF+0SvwX1kOuYZf65JCFHxRHPO2FMvfak3cbZ7DcI4VRZdQHtayi/RLmDH7T
HdEeDO6HiQd9u5NgBtrPN6gIvAewtN/g7Pj6Wbj88u1io2IAa56WKg//Pov8
22nsdfmD8GE0d+q9mUWIv32b5p4hcKxZovMWc3jIP5r9XD6EHvF9r0On50Bv
rVQTXfsA44gg1ROv57B2R4Qs22MYmWbVCi8zBRzsHbIeiIaxmsXyPHhCgf7J
9Jds5gji5pqHOxsUkGz2ZdLsRJDnlTVo0+axftxGrNolQrbMUHY2ch5N5id5
cUkfEXbFObKmfh4Z3fxwhvkoPMXib6xWLYDyq89SaxrFrNWAp2rYAu77G2yn
Hx/Du/JLRfk1C2C3JRcMrRKDJ3rhc1xzETMtwadXNYixEF7honl4EQNZdTLd
mHFIuf2JGo8XIe/cQjunI8H8aIG22zIl4nLM6hNqJXDarTewNUQJozYz3eGQ
T0iL0NP4maOEH//egrHyE8p/DDijQ5SYPFQU3Vv+GXOcfY4x/gR1oRymzl4K
oZUC92UlBE/ao/f0+VB4f+yRRWwpwaNt1noVvhS+M7mqISgjuGdcnO8dSCHg
MuNNyV0ClpBVnRZGwTu67cDOKoKT+1IGtRIoOFs2xjFrCTa4fu+yrISCYWHF
DfUugvWc1eqCMgrZgelJUd0EZmuE3JK7FPRWRh/p4hN8tcDYv7OKgvYZK2u2
kGBpjWcUs5aCevDth+59BIOb7PPUuyhIjVitSWMEvTcmQrr4FGLaT3HGxATC
FRxztpCCJCXwiq+E4M24VaV7H4WPMv0gU4qgttSkJWmMQl9Xxof6aYIaw/dp
vhIKwakxzZZygmomi2FKUehx976TOUNQHm7QVz9NgV+lFRuqICjm8diZMxQY
kWO+3HmCQrfMyFAFhY61XHvbRYL8Su9NtosUfIQlRrlKgj9NlssIodCawVQQ
QvAfjDmKXA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9500000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {1.0000000204081632`, 1.9999999795918368`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8702434217246175`*^9, {3.8702434586357822`*^9, 3.8702434866449566`*^9}, {
   3.870243710433899*^9, 3.870243731525199*^9}, {3.870247922204788*^9, 
   3.870247925415487*^9}, {3.870248215116927*^9, 3.8702483755283823`*^9}, {
   3.870248443472417*^9, 3.8702484470427446`*^9}, {3.870248533278003*^9, 
   3.8702485398844457`*^9}, {3.8702487748327503`*^9, 3.870248777645855*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], "^", "n"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"2", "^", "n"}]}], ")"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "Infinity", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.870248793846182*^9, 3.8702488461927137`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", "n"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"-", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}], "+", "p"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.870248805297738*^9, 3.8702488464344654`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\"\<Table[RodeoPlusOverlapPlot[\[ScriptCapitalN]Dist,10,n[[1]],1,1/\
Sqrt[2],1/Sqrt[2],1000,-3,3,1/50,False,n[[2]],False],{n,{{1,\!\(\*\
InterpretationBox[ButtonBox[
TooltipBox[
GraphicsBox[{
{GrayLevel[0], RectangleBox[{0, 0}]}, 
{GrayLevel[0], RectangleBox[{1, -1}]}, 
{RGBColor[0.368417, 0.506779, 0.709798], RectangleBox[{0, -1}, {2, 1}]}},
AspectRatio->1,
Frame->True,
FrameStyle->RGBColor[0.24561133333333335`, 0.3378526666666667, \
0.4731986666666667],
FrameTicks->None,
ImageSize->Dynamic[{Automatic, 1.35 \
(CurrentValue[\"FontCapHeight\"]/AbsoluteCurrentValue[Magnification])}],
PlotRangePadding->None],
\"RGBColor[0.368417, 0.506779, 0.709798]\"],
Appearance->None,
BaseStyle->{},
BaselinePosition->Baseline,
ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
If[
Not[
AbsoluteCurrentValue[\"Deployed\"]], SelectionMove[Typeset`box$, All, \
Expression]; FrontEnd`Private`$ColorSelectorInitialAlpha = 1; \
FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.368417, 0.506779, \
0.709798]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; \
MathLink`CallFrontEnd[
FrontEnd`AttachCell[Typeset`box$, 
FrontEndResource[\"RGBColorValueSelector\"], {0, {Left, Bottom}}, {Left, \
Top}, \"ClosingActions\" -> {\"SelectionDeparture\", \"ParentChanged\", \
\"EvaluatorQuit\"}]]]],
DefaultBaseStyle->{},
Evaluator->Automatic,
Method->\"Preemptive\"],
RGBColor[0.368417, 0.506779, 0.709798],
Editable->False,
Selectable->False]\)},{2,\!\(\*InterpretationBox[ButtonBox[
TooltipBox[
GraphicsBox[{
{GrayLevel[0], RectangleBox[{0, 0}]}, 
{GrayLevel[0], RectangleBox[{1, -1}]}, 
{RGBColor[0.880722, 0.611041, 0.142051], RectangleBox[{0, -1}, {2, 1}]}},
AspectRatio->1,
Frame->True,
FrameStyle->RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668],
FrameTicks->None,
ImageSize->Dynamic[{Automatic, 1.35 \
(CurrentValue[\"FontCapHeight\"]/AbsoluteCurrentValue[Magnification])}],
PlotRangePadding->None],
\"RGBColor[0.880722, 0.611041, 0.142051]\"],
Appearance->None,
BaseStyle->{},
BaselinePosition->Baseline,
ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
If[
Not[
AbsoluteCurrentValue[\"Deployed\"]], SelectionMove[Typeset`box$, All, \
Expression]; FrontEnd`Private`$ColorSelectorInitialAlpha = 1; \
FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.880722, 0.611041, \
0.142051]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; \
MathLink`CallFrontEnd[
FrontEnd`AttachCell[Typeset`box$, 
FrontEndResource[\"RGBColorValueSelector\"], {0, {Left, Bottom}}, {Left, \
Top}, \"ClosingActions\" -> {\"SelectionDeparture\", \"ParentChanged\", \
\"EvaluatorQuit\"}]]]],
DefaultBaseStyle->{},
Evaluator->Automatic,
Method->\"Preemptive\"],
RGBColor[0.880722, 0.611041, 0.142051],
Editable->False,
Selectable->False]\)},{4,\!\(\*InterpretationBox[ButtonBox[
TooltipBox[
GraphicsBox[{
{GrayLevel[0], RectangleBox[{0, 0}]}, 
{GrayLevel[0], RectangleBox[{1, -1}]}, 
{RGBColor[0.560181, 0.691569, 0.194885], RectangleBox[{0, -1}, {2, 1}]}},
AspectRatio->1,
Frame->True,
FrameStyle->RGBColor[0.37345400000000006`, 0.461046, 0.12992333333333334`],
FrameTicks->None,
ImageSize->Dynamic[{Automatic, 1.35 \
(CurrentValue[\"FontCapHeight\"]/AbsoluteCurrentValue[Magnification])}],
PlotRangePadding->None],
\"RGBColor[0.560181, 0.691569, 0.194885]\"],
Appearance->None,
BaseStyle->{},
BaselinePosition->Baseline,
ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
If[
Not[
AbsoluteCurrentValue[\"Deployed\"]], SelectionMove[Typeset`box$, All, \
Expression]; FrontEnd`Private`$ColorSelectorInitialAlpha = 1; \
FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.560181, 0.691569, \
0.194885]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; \
MathLink`CallFrontEnd[
FrontEnd`AttachCell[Typeset`box$, 
FrontEndResource[\"RGBColorValueSelector\"], {0, {Left, Bottom}}, {Left, \
Top}, \"ClosingActions\" -> {\"SelectionDeparture\", \"ParentChanged\", \
\"EvaluatorQuit\"}]]]],
DefaultBaseStyle->{},
Evaluator->Automatic,
Method->\"Preemptive\"],
RGBColor[0.560181, 0.691569, 0.194885],
Editable->False,
Selectable->False]\)}}}]\>\"", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"RodeoPlusOverlapPlot", "[", 
    RowBox[{"\[ScriptCapitalN]Dist", ",", "10", ",", "16", ",", "1", ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "1000", ",", 
     RowBox[{"-", "3"}], ",", "3", ",", 
     RowBox[{"1", "/", "25"}], ",", "True", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.915, 0.3325, 0.2125], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6100000000000001, 0.22166666666666668`, 0.14166666666666666`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.915, 0.3325, 0.2125]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.915, 0.3325, 0.2125]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.915, 0.3325, 0.2125],
      Editable->False,
      Selectable->False], ",", "False"}], "]"}], ",", 
   RowBox[{"RodeoPlusOverlapPlot", "[", 
    RowBox[{"\[ScriptCapitalN]Dist", ",", "10", ",", "8", ",", "1", ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "1000", ",", 
     RowBox[{"-", "3"}], ",", "3", ",", 
     RowBox[{"1", "/", "25"}], ",", "True", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.18684294025131137`, 0.4766666666666667, 0.2861392881649977],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.28026441037696703, 0.715, 0.4292089322474965]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
      Editable->False,
      Selectable->False], ",", "False"}], "]"}], ",", 
   RowBox[{"RodeoPlusOverlapPlot", "[", 
    RowBox[{"\[ScriptCapitalN]Dist", ",", "10", ",", "4", ",", "1", ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "1000", ",", 
     RowBox[{"-", "3"}], ",", "3", ",", 
     RowBox[{"1", "/", "25"}], ",", "True", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.4911884484706007, 0.23866666666666667`, 0.3353511049170246],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.736782672705901, 0.358, 0.5030266573755369],
      Editable->False,
      Selectable->False], ",", "False"}], "]"}], ",", 
   RowBox[{"RodeoPlusOverlapPlot", "[", 
    RowBox[{"\[ScriptCapitalN]Dist", ",", "10", ",", "2", ",", "1", ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "1000", ",", 
     RowBox[{"-", "3"}], ",", "3", ",", 
     RowBox[{"1", "/", "25"}], ",", "True", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.75, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.75, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.75, 0],
      Editable->False,
      Selectable->False], ",", "False"}], "]"}], ",", 
   RowBox[{"RodeoPlusOverlapPlot", "[", 
    RowBox[{"\[ScriptCapitalN]Dist", ",", "10", ",", "1", ",", "1", ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "1000", ",", 
     RowBox[{"-", "3"}], ",", "3", ",", 
     RowBox[{"1", "/", "25"}], ",", "True", ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.368417, 0.506779, 0.709798]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.368417, 0.506779, 0.709798]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.368417, 0.506779, 0.709798],
      Editable->False,
      Selectable->False], ",", "False"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.867440765565093*^9, 3.8674408243166394`*^9}, {
   3.8674409378352036`*^9, 3.867440940828123*^9}, {3.8674410154892864`*^9, 
   3.8674410407223473`*^9}, {3.867441280320712*^9, 3.8674412815999374`*^9}, {
   3.867441472479821*^9, 3.8674414744066334`*^9}, {3.867441643197692*^9, 
   3.8674416445338244`*^9}, {3.8674417407972155`*^9, 3.867441778853092*^9}, {
   3.8674424046559224`*^9, 3.867442408615845*^9}, {3.8674425493749566`*^9, 
   3.867442564942931*^9}, {3.8674428170444317`*^9, 3.867442830315836*^9}, {
   3.8674440410713587`*^9, 3.867444046615091*^9}, {3.867444088456718*^9, 
   3.8674441198908443`*^9}, {3.8674443412628717`*^9, 3.867444342895316*^9}, {
   3.867444383616622*^9, 3.867444385234082*^9}, {3.8678382736036916`*^9, 
   3.8678382787314224`*^9}, {3.8678662455066175`*^9, 3.867866256119484*^9}, {
   3.868364902347441*^9, 3.868364906984672*^9}, {3.868380455722069*^9, 
   3.8683804911380777`*^9}, {3.8684577299230223`*^9, 3.868457747615466*^9}, {
   3.868458690075529*^9, 3.8684586958570724`*^9}, {3.8684590540311947`*^9, 
   3.8684590561103425`*^9}, {3.8684591628071623`*^9, 
   3.8684591652219715`*^9}, {3.8684593460611014`*^9, 3.868459363852113*^9}, {
   3.868459505272443*^9, 3.8684595599657125`*^9}, {3.8684596213018503`*^9, 
   3.868459658994975*^9}, {3.868459722256689*^9, 3.868459726435423*^9}, {
   3.8684621924602923`*^9, 3.868462224760448*^9}, {3.868462277805749*^9, 
   3.868462281992153*^9}, {3.868469769524338*^9, 3.8684697718904324`*^9}, {
   3.868470103042079*^9, 3.8684701060476856`*^9}, {3.8684702498243704`*^9, 
   3.8684702570947733`*^9}, {3.868471624526595*^9, 3.868471634996525*^9}, {
   3.868472066085198*^9, 3.868472069810814*^9}, {3.8684721640533113`*^9, 
   3.8684721820003204`*^9}, {3.868472245097847*^9, 3.868472247087774*^9}, {
   3.868472339421636*^9, 3.8684723408242474`*^9}, {3.86847253861588*^9, 
   3.8684725443976927`*^9}, {3.868473696207674*^9, 3.8684736990858927`*^9}, 
   3.868474128043212*^9, {3.870380792450512*^9, 3.870380819704263*^9}, {
   3.8703808518845944`*^9, 3.870380852476592*^9}, {3.870380920790864*^9, 
   3.8703809819421163`*^9}, {3.8703810149348087`*^9, 3.870381045535658*^9}, {
   3.870381192628808*^9, 3.870381222230921*^9}, {3.8703812667646646`*^9, 
   3.8703812857379136`*^9}, {3.870381318466693*^9, 3.8703813263706408`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.009166666666666668], 
      Thickness[Tiny], LineBox[CompressedData["
1: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
+B+WP781
       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
      0.009166666666666668], Thickness[Tiny], LineBox[CompressedData["
1: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

       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
      0.009166666666666668], Thickness[Tiny], LineBox[CompressedData["
1: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
tVTFZh7+B57BsYM=
       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.75, 0], PointSize[0.009166666666666668], Thickness[Tiny], 
      LineBox[CompressedData["
1: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
lLN2
       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       Thickness[Tiny], LineBox[CompressedData["
1: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
RQ==
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[ScriptCapitalE]\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*OverscriptBox[SqrtBox[\\(1 - \\*SuperscriptBox[\\(\
\[CapitalDelta]\\), \\(2\\)]\\)], \\(_\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{509.3749999999732, Automatic},
  Method->{},
  PlotRange->{{-3., 3.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{
  3.8684595867764025`*^9, 3.868459680741911*^9, 3.8684600632217817`*^9, 
   3.8684622059117393`*^9, 3.8684622463079896`*^9, 3.8684623705558186`*^9, 
   3.868471652839183*^9, 3.8684722159624624`*^9, 3.868472253139986*^9, 
   3.8684722941117873`*^9, 3.868472328689627*^9, 3.868472377083847*^9, {
   3.868472578332198*^9, 3.8684725939019127`*^9}, 3.8684726410931673`*^9, 
   3.8684767871069403`*^9, 3.868476918982581*^9, 3.8703809311033115`*^9, {
   3.870380970265806*^9, 3.8703809892388725`*^9}, 3.8703810585918293`*^9, 
   3.8703813068632345`*^9, 3.87038137965015*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LogOverlapPlot", "[", 
    RowBox[{"p_", ",", "color_"}], "]"}], ":=", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ProbMinus", "[", 
           RowBox[{"n", ",", "1", ",", "1", ",", 
            RowBox[{"Sqrt", "[", "p", "]"}], ",", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", "p"}], "]"}], ",", 
            RowBox[{"TimeArray", "[", 
             RowBox[{"\[ScriptCapitalN]Dist", ",", "10", ",", "n"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "2500"}], "}"}]}], "]"}], "]"}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "100"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "->", "color"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "n", ",", 
        "\"\<ln[\!\(\*OverscriptBox[\(\[CapitalDelta]\), \(_\)]\)]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "48"}], ",", "0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"LogOverlapPlot", "[", 
    RowBox[{
     RowBox[{"1", "/", "1000"}], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6485525936249404, 0.4144296347913687, 0.048907997212660946`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142],
      Editable->False,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"LogOverlapPlot", "[", 
    RowBox[{
     RowBox[{"1", "/", "1000000"}], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.4911884484706007, 0.23866666666666667`, 0.3353511049170246],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.736782672705901, 0.358, 0.5030266573755369],
      Editable->False,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"LogOverlapPlot", "[", 
    RowBox[{
     RowBox[{"1", "/", "1000000000"}], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.18684294025131137`, 0.4766666666666667, 0.2861392881649977],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.28026441037696703, 0.715, 0.4292089322474965]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
      Editable->False,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"LogOverlapPlot", "[", 
    RowBox[{
     RowBox[{"1", "/", "1000000000000"}], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.915, 0.3325, 0.2125], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.6100000000000001, 0.22166666666666668`, 0.14166666666666666`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.915, 0.3325, 0.2125]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.915, 0.3325, 0.2125]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.915, 0.3325, 0.2125],
      Editable->False,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"LogOverlapPlot", "[", 
    RowBox[{
     RowBox[{"1", "/", "1000000000000000"}], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[
          0.2672148173956843, 0.34800444289592275`, 0.5666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.40082222609352647, 0.5220066643438841, 0.85]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85],
      Editable->False,
      Selectable->False]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Log", "[", "2", "]"}]}], "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "100"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Black", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "44"}], ",", "0"}], "}"}]}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.870381635944233*^9, 3.8703816580305047`*^9}, {
   3.870382068300385*^9, 3.870382070403221*^9}, {3.8703821681266575`*^9, 
   3.8703823106330013`*^9}, {3.8703823482645164`*^9, 
   3.8703825142502394`*^9}, {3.870382547215314*^9, 3.8703825763744073`*^9}, {
   3.8703827126549134`*^9, 3.8703827475336313`*^9}, {3.870382783453666*^9, 
   3.8703829898198357`*^9}, {3.8703830251823273`*^9, 
   3.8703831478786197`*^9}, {3.8703832138946857`*^9, 3.870383266122035*^9}, {
   3.8703841191621675`*^9, 3.8703841244047685`*^9}, {3.8703841803638997`*^9, 
   3.8703841837514143`*^9}, {3.870384696008398*^9, 3.8703847061289835`*^9}, {
   3.8703848178264236`*^9, 3.870384828171782*^9}, {3.870385146789695*^9, 
   3.8703851669679203`*^9}, {3.870385200192728*^9, 3.870385200267649*^9}, {
   3.870385249757722*^9, 3.8703852570262403`*^9}, {3.870387145396529*^9, 
   3.8703871606818037`*^9}, 3.870387212223761*^9, {3.8703897716270733`*^9, 
   3.8703897978980403`*^9}, 3.870420408067316*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
     PointSize[0.004766666666666667], AbsoluteThickness[1.6]}, 
    {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
     PointSize[0.004766666666666667], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxFznlQlHUcx/GHduRYQI64j+EUMO5cDgHlsyy73Muy7LIExAixat6GkzKg
7YROFGJmGkmCO2TIFFAkQQ5RO5CIrRHIBhSKFgoUgqgwLUoaM3yf6Zn5/fGa
9/cz83gU7pUqOQzDGKw85cp7gfn/m66tNt9WhB9WNR+ruFXX5Vz2AZlB0MCj
zvKJL8jGqPI3/l4U00m2xIN9pR1GkX1kG9zsDX3He+AG2QEK57755qbfyS44
u5RQnsSdILujfdKwOLJ/kuyJtqCpPyRnZ8neKPQLVjE/PST7oJHnxKhnFsh+
UA7f07VX6MkvoWcso367apkcAGG/ocqvwECz6iA80WkDH1txyCE4crd5WRy4
hhyKgfGpiZQF1i8jXtS9eeqKCXkDbBNbTrnZmJN5aKm4VR7/kSk5DOpTvzrY
d1mSw/Gjtf9IoNKKHIGL2451BF95kRyJqjaZ1byTHXkjFtXH31b62ZOjINmf
m5p7gu3RKNUfKi7ucybHwO5VzrXhKBfyJnzT4683+tKRvBlat2fn9e85kWNx
YTjJ8eFRNzLw4LOncn6Tx6pVQNtIBO/+PJnho8F+rMgn2Zs6HyVl56Lrjq6j
HgfLBBN1odqLehx2yU1NJT50zwiwznVNdKHQl7oAB3QfX7U5uJ56PG52fZ7g
IGB7PAJOi/wi2tguxDPjr657/UZWCSFvv7MY0OBPXYTGkYKdIX+TVSKIvRc9
5/QB1BNget319huiIOoJEKzXcor+ITOJiGkOm6/PCaWeiJ5dT8RmZiHUk2Az
HBZUUhZMPQnV0aFbZQ4bqCfDsqHs9TO17D4Zvd6HhBwDHvUUnNTOlFn7sD0F
jpkWmu477D4V4XnumrZLdK9KReEBjVy/le1piF36+vmnw2RVGjpb34w8bRFO
XYzqxoJHJdfYLsb4L5fLnYbYng7f1umxSpsw6unI4STX7Gli/0+CXPfYsbj6
iFVDAnuNokbuEkn3EtSWn5As9JA1Kz7+L/d2VBTtM9A0aOCf/ie7z8AFnd37
pX9tpH0GJg8LuPJP6F6TgeZjW0a1O2NoL0WtMu/MvYObaC8FY75cwZ8lq6Ro
cU0Vf+cRTXsppobqR/O+ZfeZGBXUzJjMsPtM/HxRl2HRGkv7TBR3BIZoRGRN
Juq14wm6KrpnZKg0V0y8tY86ZPCVaefyp0F7GdRRntltpmSNDOKnjt0ByWRG
Dt7zXtt3Dfm0lyOi2Kn1pFkc7eXIWbvjRo4Lu5cj7VyO9Yev0T2ThSk3W5f7
w9SRhQKpTWlvK7vPQk9IfuVgLbvPQsVE9+6lvQLaK5D1OHlh6C7dQwFuIT+4
YJS6SoFZ3o7tPKN42itgMNc4zr3E7rORvSeGi37qyAbPd61X+HmyKhvhV0u2
1A0KaZ8Nne2R/Mtq6swrsHQ83LF/t1DzH7py3Es=
      "]], {}, {}}}, {
    {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
     0.004766666666666667], AbsoluteThickness[1.6]}, 
    {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
     0.004766666666666667], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxFzn0w1Akcx/HfYoU67KVjj+TycNyt56fytB8PscjDLuvpKnGk3HW4O9dV
JhuDqJvZc7bJVThGppThhs7t3pRBohuM20meqjO4UHPYhhGpa8Z353bm98dr
3r/P97cfpWaJ0jUZhmG9e9LfPRrM/7+JY1/Zr/bU3NnUIt9ofST3hdz2LmUs
DZqwD6xmknWQ9PGIrDjqDNkQ+dyZQt9tP5KNYHtqaOuphnqyCdB2OTTxeAvZ
DM+UBqlzjxRkC8yU8dMGXt8j74ZNvPbB8bx+shW8h7qq/ZaUZBt4ml9c6wkZ
I9tClrCYM2/1lPwJxMlQfLBtmswD278mp99iluyAb5/8+Uda+QuyE37xXV45
2rlIdsbkT1GsJpWK7AJOga9xevYy2RWdGutdWZprZDeI7zsany/bILujcSGf
27v0luyBESfucV40q2PTnshYuS7v/k6TvAcLFTb6a59rk/eCu2TUPV/CJntB
yHdQsEt0yN5o5Wq8njqhS/aBsqjOnMXaSvYF63f57GlTQ7IfxhfOo0jFIfNx
9eSZHGnGDjJQIkh5q/3e9k1LgJeaOewkOZnxR2KheOeDSWPq/sicCDvil7+T
egAi0mZ8AmZNqQfghEH5/bECM+qBsI+8WGryvjn1QMwN9j5WGJGZIGiaK8Th
IbupByF2ZcC5yprM7MPV1dqTAypL6vsQnjcTzHG3oR6Mdf1m/Q+trakH44Yg
5pFevwX1ENi5e9/iyayoh+BxrkDYXqfeC9Ad9nSh8YJ6L0D7nOvt2+xPqYei
dLiuN1XLnnoo+vpqpxrXedTD8Pyvmq/5Tuoehpu/LTuKqslMOFalzdOHTZyo
h+NurZfDjNyO+n7oubRM+bHUfT+SI8QTcg6ZicCeW8FDFipH6hHwUVmn/6B0
oR6Jg9K8S3fGnalHwl7cnNnUTmai8O+TVRFP5UY9CluU+aOnjV2pRyNf+rKh
ao46opGRXd3mk0X3JdGQNtuFZEa4b7ojGmKRfD3Xg95nhKhTjRbZTXnSXgiu
pf0V5TmyRIg+Qc21zssetBfCICVgoPoZdUYErefTX5iOqPcieOkFMaMF6r0I
TYcnh1cqvGkvQuUryzeyC3SPiUGxc4Os5bl6H4PW72c3MrR8aR+DlLPXe93b
1PsYjLy56Ws26UP7WDiU7tK34ZARC8cvUywe7KD3JbGQysqctmRT74jFrvph
ZdI19V6M8YKls7/+vJf2YjDN5iZj9tQlYjx8aB2YVED/p0OMygMrvYUzfNrH
gXHsOiR1A+3jYBoU49RwiCyJw43K+RTOoPr7cXh1JLiMm+xP+3go/HJ0Pc3o
HuLRbrgRVVuh3sfjH+O1xFFlAO3jcaw8rap1lDqTAJ3SluztdXQPCbhyb/Ib
VQNZkoBL9bq6R3mBtE/A0mdaGwage0wieuqL/zYxCuz4D6QQ6GU=
      "]], {}, {}}}, {
    {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
     0.004766666666666667], AbsoluteThickness[1.6]}, 
    {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
     0.004766666666666667], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxF0n8s3Hccx/GvYqVjRDlH/SaooX4W58e9XP04da7n1zm0rvVjtV8oS+iG
HsZ0WsxqMsJ0pRN6S8bU0HLW1patFlaKNJhZZH5MWVmrkpnE+7JLvn888vy8
Pt/vH2eZnBmVpsowjMrek7b3HGD+/yVl6zFazioD+1rnJuGbDI/UCTIDtG/7
BhYskDVQI5+tz80JGty3LuTLq2lcl1iyPiqLde+2f3eBzIailG9i8GYx2QSf
+M+sm9ZUky3w9OrQjRclTWQrONr2b6yGt5Bt8Nv9tV0rjU6yLbrGSifbtPvJ
9qj70mZ2pWSI7AAf5wHHlbM/kB1xxL+cdzpqlOyMf3WzPx31fER2QUvfWu1F
9jTZFUUv7YqtuXNkN6iv2eSr3Zonu8N/QqNiSn2R7IHCBit159klsifiTZrY
KbdWycdh/dK6TKq5QfZCTaTOg9ysv8neaLbWr2wI3SL7oDbzkKil5DmZA0ND
E1av2Q7ZFznXCy0XbXbJflDrFqk78BnFvv0x2yyd2+SokAPQ+3uvYX2/GpmL
ZPaDxSkfpYE8u7eGJF7q+5YBVa/sVlRqaVIPhDReVlBQd4h6IMyDjrx7s1WX
Og/i9Q9UR5y1qfMwY5Epffxcj/oJJOp5cOzy6LzsBPxTLk/f4R+mHoQxMafA
fVHZgxA5kHDpnsSQejBSgp6OXzUiy4KhmrEU7yBiUw9B2XyB/W0DZQ+Bya+i
5ZVyE+qh0K64KG96QudlodioEHc8kZlT52P1sytud/pMqfMxHLDDlFpYUg/D
6SG1tYetdtTD8N4fTqz6JRvqJ3FsXDwSfEnZT2Kn2Lr6zG1b6uEQvPAe3W48
Sj0cdbZ/sSz9HKgLMMyb+qL+vLIL8Oxu+7w8XbmPQJK2aWrZriP1CMg7e9YO
PnOiLoSvwY9ZwWIX6kLwjjZJzVToPuYULOY/9F7hO1M/hXKpfXxGCp1nRChV
TbzctuW6b4hwsHhkwfN95XkRbiRVXcsxdt+3QgStNx4liOzJTCTc51KFBq/R
9yASstHmKdd86rJI5Db09LX0KPeRWD7wfWI9x4P2Uei5LqjV66aOKOhV3Bye
b/SkfRRm7NO7AxboexVR4OxWZf/5k/L90RjRFpoWTh6nfTS++rlM3JnvTfvo
vf+TMHlZ4EP7aGSwLpwzWqfOxODK/c1rPS1kxOBxdYKbZzqdl8VgssgooqGZ
Q/sYnC2S/MPuos7EQitLmBC66kv7WOSXvKphIfajfSxcfvnaKWmQrIiFZmOY
fCuN7mPEGOocWz1TFkB7Mcyk0efMrbm0F8P484l+Y3/l+8XwbswOLtqh80wc
3nHtRcdHdD/ikPbIS6c1Q7mPQxsrIY+rqnx/HMaT4mxfZ0B7CTiVm136O2RI
cGywo25aJZD2EkhYnI8fnufRXgKdENPGb9+m+5l4bDt03xMc5in+Axvw19Q=

      "]], {}, {}}}, {
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6]}, 
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxFzg0s3Hccx/G/89h25rGbh6u6lhajnur56UM9nfN07hyTzlpmmVLSUqTV
upV4SLpszWJqMorSdGtp2ZgobjGqqGG2eEzoTE3Xo9hhikl8L/sn/3/yyvv/
+f3/nLjUiARFhmEUdu+E3ZvF/H/9rrT7KDnbtqclr897psYK//Jsp4wRuwvS
zHulZDU0Kjen3OV1kzXRuTaRdjdqmawL9tP4v13DlTr2rIcXt21lsh99yWw0
qDNVRnEfkI2xZCIa6h9NIh/Bckxv10pVNtkE+cb/6kyqF5KPIYNvHffb42Ky
GWKGU7eij1SQLRCy89m69HYt2RJZt9INu75/RD4B/epJ4wLFZrINwvQUl3Yc
2si2WH10NdchoYtsh4j53HCVj/vI9nDKc9YWFg2ST0Kg0tWfPj9CdsAYO5K9
2jFKdgRPPPlw4OAU2QmfskWbZbwZsjNGx3orN8SzZBcMcIvW8svnyK6QfWM/
q9T+kuyGhNKz55g8KdkdN1sSMx90vCZ74IlXc6bs+TLZE2qhnbqC4RWyF04v
LHE+aVojA47bs/ns1+t7FgM5karzGTVvqHujzbYgb5/uDnVvGBilseKvMJK9
7gMfqeGbknOsPYt9IGzYvL9UR2ZOYcDhzruJvyhSP4UzTho3NotUqfvC1FQ/
xG1YhbovgnOSxv2yyIwfqvoHSg6f30/dD7buZst/OGpS98f2iH/sl4Na1P3h
bPRRaXWFNvUABI9fEfA6dagH4GEtk9p4T596IHIs1pTUBnWpB8KQoyGU6LGp
c/GMX2D9DsuAOheagf4rWuMHqQdB5xpLcbrCmHoQiiyyR88I5HseKt1rYr8z
l3cegqM4lT/VkJlgnAjRnnjRwKEejLmtQ0WmHabUQzASOCz5uYUsDkGP2WTZ
Qu8x6qG4PCQ5XnnSnHoo1i/UVkk+lPcwqCSqy+oXzaiHoayydfj5hgn1cHC6
sg6pbljsGeH46oejXfXZ8vfD8apO7FAjoPcl4UhW4fk29VvRng/X5W7lABtL
2vPhaC79834gdTEfc1adxfUr1CV8uGSUPrg0Zkf7CFRYh66PK5IRgbWp3tj9
xra0jwCXY8lPj7ehfQTeiob2aTvqjAAvbb6443/4PdoLEDTBvdwa40B7AcoH
g2aKWxxpL0DV2/PbChX2tBeibHora1BKHUKUppS3GjTS/4iFmF93rH46Q+dJ
hDBh1csu+sr/PxKX3LZvpl1zon0k2IKmheR2Ok8cicdOmd8mSJ1pH4lf3a+X
lbhTZ0Q43ue1OpHqQnsRygcsnGKvk8UiaHQfeCYKkO9FGAm6qKBl7UH7KKT8
8/XOUSt32kcht7FH2jdJFkdhoc6jTb3Qjfa7jj+/deuqJ+2j0WShtajFkn8/
GqlD09qzyfJ9NA68mtrnzQXto9Hg1uvCbSQz7yPpiQJPedFN8h/e6O88
      "]], {}, {}}}, {
    {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
     0.004766666666666667], AbsoluteThickness[1.6]}, 
    {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
     0.004766666666666667], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxFzQlQlHUcxvGXMDnkMAaRS67lFrlvCh5uZMFllwVWEEWSYNoItMxqEpdL
MdFFAwUaEBhnx2ooplEkzhVwUC5DkSsDFB1ESKjlMErJmf3t9M78Z97PfN/n
/5qnZvHSlBmGUXpz0t6ct5j/H/l7d6tcSwEB6gwjMjrSRhmeycpMiHSYrIrP
b0TLcp0X2+XeCjXvqpGS5VSyLnp1jE5XXawh6+Nc0V1dy4U1sjHW+lbf/+zG
OtkMGXU9DufPh3fIbYF+0cuYmMNssiUmsvWslSpSyNa4nB4yVif5gGyLUPHZ
3pTWo2R7pGdsuflYkkt2AKvmB71gzhmyI1RF37A7QkrJzlDzHBfua6khu2B/
3rCJI19CdsUOr4354bqfyG5wdai8EqR7jewO4aUXdd2yFrIHLrOyumRJnWRP
fBfJLvkyqYfshQ3d2Z0Tq/1kb5TufcJ1Gh0i+yDe6o9ZO2aY7IvriSrWmfdH
yX74uSrJyfHxQ/K7YAt/HMxrmCa/ByZcNtDvNUP2x7/rA0OFd56SA/Dbma5Y
jYDnZOCoZsekrG9ebhFQvFxponF6kXognNynyxuFf1IPxPEvXAZ0zGTUg6Dm
Lzuiw1qlHgTJ36aHXh5box6MB/lzrw5arlMPRsMS94H/p/9QD8GGjqSTVfaK
eghCSydmtRoYqbyHYuaqybl+FSW5RaHQFc87TvorUw9DpHFBVXY7WRSGovyv
ChOr36YeDr0yjeqKclXq4ahfz/jQLYzMRGCqbtwsV1XRI8DxxphzkDr13Wgb
dT045KJNfTdeGwS5Hf9dk3ok1NxlK36crdQjkSlI69Xs06DORpV9yazNmh51
NtSi1pY+Em+jHgV11WR45ir2Uajp+lYMAzITDUnLTI12kyH1aGhxoh/ZDZpQ
3wNb3se1mw8YUN8D1q/6U1Zdis6B2OAiPzDLnDoHn1i8c+K2ixn1GORMZVR3
JlnLjRhEXLPZIhVa0vcx6FROS8zytZJbGoOuZ2HM7Sa6j+Gi/lHE14YONrTn
wkB4qmToF1vac8F4WDZfyrGnPRcL11dYK4k7ac9DSvh28Z1MMni4UvB6JrFR
seche9OpMvv7u2jPg0BHu3jjrDPtYzFWV26duoOMWCSZ3nOo76XvRbGowDPT
5m7FPhb79Q6LatlOtOdDrONcwG13pT0fU6u37HiGdJ+Ij3yLbeXJAupSPu7y
R1Q8elxoHwfzCwsvdim70T4O81pzmyebPWgfB30LNKWzyNI4PCkZqW7b5EX7
eJy84GKYrK3Yx6O4wC6lcdyb9vFYZsd9H/RUsY+Hht4ie3sCmUmA5Lm67dVp
T9onoMc7x+ivIrpflIADebbd9lHutE9Abdkh4wZvH9oL4HWzsNJKif4HARoe
jrOHW6mLBDhRMjcogB/tBThWX6x08pYv7fdibB8n1P2ej/Q/JXXeew==
      "]], {}, {}}}, {{}, {}, 
    {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAIo/9o54ewT4XVbTYmbu3vkdxpwlt
aJ8/qlwE1TLFlb9R4SyPKGivP0Kr0F0DxaW/VpnvUQZovz+N0jai68S1v1j1
UDP1Z88/M+ZpxN/Exb9ZowGk7GffPwZwg9XZxNW/WvpZXOhn7z/vNBDe1sTl
v9olhjjmZ/8/ZJdWYtXE9b+lewH+A10QQAtOMW01rwbADbOfr6dPGEA3eMqv
6NkQwJxG/AIxDSBA/hQ6h4xAFsCeYoLjFkckQHx0BcNgHBzAPaHnZMk4KEAA
0v/MDsogwMiOppsEfyxAHcuqaoXAI8DaZmGSpVgwQASqdPcmqSbAnxdfJ69N
MkDv8NXRvF8pwNqfCRf9bDRANRll3upQLMBjuSNXMWg2QH2pizgNEC/AnXts
QGtZOEDIj+hAreAwwE0VYoTpdDpAfzui/p9WMsBLQMcYTmw8QDebJ+OMszPA
v0LZB/eNPkCd68PgxS01wPL2DNDSUkBA6K7vVRShNsAsFWVEnUxBQDUm5/Fc
+zfAIZ8T5olbQkAvjvWm8XI5wL3x+a9pWENAK6rPgoDROsAUsDana2pEQNS2
wHdbTTzAw8IKc3B3RUBiNkHkS8I9wBqeFmdockZA8mmNdzYeP8As5XiIgoJH
QBhH+JG2S0DA5fQS0o+ASEA4s4/7zvtAwPZYRPCfeUlAytjuIHKoQcDCKMw7
0odKQLJ22VK7Y0LANcGLr/eDS0Cb7imYgRJDwGPFoVA/lUxA294F6u3PQ8Dq
HU/GiaFNQI+IqffkiUTAGD80ZMebTkBCDLMYWTdFwAHMby8nq09ATQhIRnPz
RcAd1BsrQr1PQAAAAAAAAEbAoMAuQA==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["n", TraditionalForm], 
    FormBox[
    "\"ln[\\!\\(\\*OverscriptBox[\\(\[CapitalDelta]\\), \\(_\\)]\\)]\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{523.1249999999807, Automatic},
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 100.}, {-48, 0}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8704219757670107`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RodeoPlusOverlapPlot", "[", 
     RowBox[{"\[ScriptCapitalN]Dist", ",", "10", ",", 
      RowBox[{"n", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "1000", ",", "0.7", ",", "1.3",
       ",", 
      RowBox[{"1", "/", "50"}], ",", "False", ",", 
      RowBox[{"n", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", "True"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0.368417, 0.506779, 0.709798], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              Frame->True,
              
              FrameStyle->RGBColor[
               0.24561133333333335`, 0.3378526666666667, 0.4731986666666667],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             "RGBColor[0.368417, 0.506779, 0.709798]"],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0.368417, 0.506779, 0.709798]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.368417, 0.506779, 0.709798],
           Editable->False,
           Selectable->False]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0.880722, 0.611041, 0.142051], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              Frame->True,
              
              FrameStyle->RGBColor[
               0.587148, 0.40736066666666665`, 0.09470066666666668],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             "RGBColor[0.880722, 0.611041, 0.142051]"],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0.880722, 0.611041, 0.142051]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.880722, 0.611041, 0.142051],
           Editable->False,
           Selectable->False]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", 
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0.560181, 0.691569, 0.194885], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              Frame->True,
              
              FrameStyle->RGBColor[
               0.37345400000000006`, 0.461046, 0.12992333333333334`],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             "RGBColor[0.560181, 0.691569, 0.194885]"],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0.560181, 0.691569, 0.194885]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.560181, 0.691569, 0.194885],
           Editable->False,
           Selectable->False]}], "}"}]}], "}"}]}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<Show[RodeoPlusOverlapPlot[\[ScriptCapitalN]Dist,10,4,1,1/Sqrt[2]\
,1/Sqrt[2],1000,7/10,13/10,1/50,True,\!\(\*InterpretationBox[ButtonBox[
TooltipBox[
GraphicsBox[{
{GrayLevel[0], RectangleBox[{0, 0}]}, 
{GrayLevel[0], RectangleBox[{1, -1}]}, 
{RGBColor[0.736782672705901, 0.358, 0.5030266573755369], RectangleBox[{0, \
-1}, {2, 1}]}},
AspectRatio->1,
Frame->True,
FrameStyle->RGBColor[0.4911884484706007, 0.23866666666666667`, \
0.3353511049170246],
FrameTicks->None,
ImageSize->Dynamic[{Automatic, 1.35 \
(CurrentValue[\"FontCapHeight\"]/AbsoluteCurrentValue[Magnification])}],
PlotRangePadding->None],
\"RGBColor[0.736782672705901, 0.358, 0.5030266573755369]\"],
Appearance->None,
BaseStyle->{},
BaselinePosition->Baseline,
ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
If[
Not[
AbsoluteCurrentValue[\"Deployed\"]], SelectionMove[Typeset`box$, All, \
Expression]; FrontEnd`Private`$ColorSelectorInitialAlpha = 1; \
FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.736782672705901, \
0.358, 0.5030266573755369]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = \
True; MathLink`CallFrontEnd[
FrontEnd`AttachCell[Typeset`box$, 
FrontEndResource[\"RGBColorValueSelector\"], {0, {Left, Bottom}}, {Left, \
Top}, \"ClosingActions\" -> {\"SelectionDeparture\", \"ParentChanged\", \
\"EvaluatorQuit\"}]]]],
DefaultBaseStyle->{},
Evaluator->Automatic,
Method->\"Preemptive\"],
RGBColor[0.736782672705901, 0.358, 0.5030266573755369],
Editable->False,
Selectable->False]\),True],RodeoPlusOverlapPlot[\[ScriptCapitalN]Dist,10,2,1,\
1/Sqrt[2],1/Sqrt[2],1000,7/10,13/10,1/50,True,\!\(\*InterpretationBox[\
ButtonBox[
TooltipBox[
GraphicsBox[{
{GrayLevel[0], RectangleBox[{0, 0}]}, 
{GrayLevel[0], RectangleBox[{1, -1}]}, 
{RGBColor[1, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
AspectRatio->1,
Frame->True,
FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
FrameTicks->None,
ImageSize->Dynamic[{Automatic, 1.35 \
(CurrentValue[\"FontCapHeight\"]/AbsoluteCurrentValue[Magnification])}],
PlotRangePadding->None],
\"RGBColor[1, 0.75, 0]\"],
Appearance->None,
BaseStyle->{},
BaselinePosition->Baseline,
ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
If[
Not[
AbsoluteCurrentValue[\"Deployed\"]], SelectionMove[Typeset`box$, All, \
Expression]; FrontEnd`Private`$ColorSelectorInitialAlpha = 1; \
FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.75, 0]; \
FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; MathLink`CallFrontEnd[
FrontEnd`AttachCell[Typeset`box$, 
FrontEndResource[\"RGBColorValueSelector\"], {0, {Left, Bottom}}, {Left, \
Top}, \"ClosingActions\" -> {\"SelectionDeparture\", \"ParentChanged\", \
\"EvaluatorQuit\"}]]]],
DefaultBaseStyle->{},
Evaluator->Automatic,
Method->\"Preemptive\"],
RGBColor[1, 0.75, 0],
Editable->False,
Selectable->False]\),True],RodeoPlusOverlapPlot[\[ScriptCapitalN]Dist,10,1,1,\
1/Sqrt[2],1/Sqrt[2],1000,7/10,13/10,1/50,True,\!\(\*InterpretationBox[\
ButtonBox[
TooltipBox[
GraphicsBox[{
{GrayLevel[0], RectangleBox[{0, 0}]}, 
{GrayLevel[0], RectangleBox[{1, -1}]}, 
{RGBColor[0.368417, 0.506779, 0.709798], RectangleBox[{0, -1}, {2, 1}]}},
AspectRatio->1,
Frame->True,
FrameStyle->RGBColor[0.24561133333333335`, 0.3378526666666667, \
0.4731986666666667],
FrameTicks->None,
ImageSize->Dynamic[{Automatic, 1.35 \
(CurrentValue[\"FontCapHeight\"]/AbsoluteCurrentValue[Magnification])}],
PlotRangePadding->None],
\"RGBColor[0.368417, 0.506779, 0.709798]\"],
Appearance->None,
BaseStyle->{},
BaselinePosition->Baseline,
ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
If[
Not[
AbsoluteCurrentValue[\"Deployed\"]], SelectionMove[Typeset`box$, All, \
Expression]; FrontEnd`Private`$ColorSelectorInitialAlpha = 1; \
FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.368417, 0.506779, \
0.709798]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; \
MathLink`CallFrontEnd[
FrontEnd`AttachCell[Typeset`box$, 
FrontEndResource[\"RGBColorValueSelector\"], {0, {Left, Bottom}}, {Left, \
Top}, \"ClosingActions\" -> {\"SelectionDeparture\", \"ParentChanged\", \
\"EvaluatorQuit\"}]]]],
DefaultBaseStyle->{},
Evaluator->Automatic,
Method->\"Preemptive\"],
RGBColor[0.368417, 0.506779, 0.709798],
Editable->False,
Selectable->False]\),True]]\>\"", ";"}]}], "Input",
 CellChangeTimes->{{3.8684718345887213`*^9, 3.8684718374666815`*^9}, {
   3.8684720737133074`*^9, 3.868472074960705*^9}, {3.86847215285857*^9, 
   3.8684721773215322`*^9}, {3.8684725651531143`*^9, 3.868472572421908*^9}, {
   3.868472717319193*^9, 3.868472762724845*^9}, {3.868473312525281*^9, 
   3.868473355272122*^9}, {3.8684734213037786`*^9, 3.8684734286169167`*^9}, 
   3.8684735062996645`*^9, 3.868476996248069*^9, {3.8703808036588573`*^9, 
   3.8703808056289654`*^9}, {3.8703808357913485`*^9, 3.8703808401261015`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], Thickness[Tiny], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQnQYGz+xZuD3OLMt6YM91fXGBLddze8fdfm9TFB7Y
r3N/WCWy7rl9eV/b26bYB/ZBO+RaXwe+sJ8nVVjOBuR/1YjpP/T1hX2196bm
xiMP7GeCwUv7omWhu9/aP7S3BRv4yt7aJHXJo6yH9iDT3B++sm9vOOCWx/nI
HmgYyET761GfItokH9uDjdN4Y7+/RiDw7JfH9mfA4I399tbLhUWLn9gXgA18
a7/omGTr4yNP7UXADnxnv8Qz3WKZ8zN7sPN2vLPf6zabd630M3uwcTHv7Zle
95wov/3MngEMPtgHJMg+N975DOqfD/bdQr2fRPc9s18CtuCDfbyBa3C38TP7
b2AHfbDvnBFT2pT7zN4D7IGP9t/0rCJ3pD61nwX270d79c3+3xy/PLGHeOej
vezvQNEAoPsh/v9kL+D98peVxWN7sHP6P9kHhjxr/7T1ETQ8PtkvthObsojv
kb0xGHy2r05ieBVo9hAaPp/tC/dUcIoAww8cPdc/26c+ue55ZdsDe02wB7/Y
fxNcpPzW+IE92LiqL/arplYWupg+gIbfF3vX1EsF/IUP7AHmov5B
        "]], {{
         LineBox[{{0.7, 0.7646533155119087}, {0.7, 0.2590291047876902}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7, 0.7646533155119087}], 
           Offset[{-1.5, 0}, {0.7, 0.7646533155119087}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7, 0.2590291047876902}], 
           Offset[{-1.5, 0}, {0.7, 0.2590291047876902}]}]}, {
         LineBox[{{0.72, 0.7348932627839937}, {0.72, 0.24858652225169414`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.72, 0.7348932627839937}], 
           Offset[{-1.5, 0}, {0.72, 0.7348932627839937}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.72, 0.24858652225169414`}], 
           Offset[{-1.5, 0}, {0.72, 0.24858652225169414`}]}]}, {
         LineBox[{{0.74, 0.7390865863757644}, {0.74, 0.28857397614509667`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.74, 0.7390865863757644}], 
           Offset[{-1.5, 0}, {0.74, 0.7390865863757644}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.74, 0.28857397614509667`}], 
           Offset[{-1.5, 0}, {0.74, 0.28857397614509667`}]}]}, {
         LineBox[{{0.76, 0.7452853599835547}, {0.76, 0.29647101473451304`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.76, 0.7452853599835547}], 
           Offset[{-1.5, 0}, {0.76, 0.7452853599835547}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.76, 0.29647101473451304`}], 
           Offset[{-1.5, 0}, {0.76, 0.29647101473451304`}]}]}, {
         LineBox[{{0.7799999999999999, 0.7685721611660882}, {
          0.7799999999999999, 0.3345629760322554}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7799999999999999, 0.7685721611660882}], 
           Offset[{-1.5, 0}, {0.7799999999999999, 0.7685721611660882}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7799999999999999, 0.3345629760322554}], 
           Offset[{-1.5, 0}, {0.7799999999999999, 0.3345629760322554}]}]}, {
         LineBox[{{0.7999999999999999, 0.773857025161805}, {
          0.7999999999999999, 0.3710738787590195}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7999999999999999, 0.773857025161805}], 
           Offset[{-1.5, 0}, {0.7999999999999999, 0.773857025161805}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7999999999999999, 0.3710738787590195}], 
           Offset[{-1.5, 0}, {0.7999999999999999, 0.3710738787590195}]}]}, {
         LineBox[{{0.82, 0.7686557228952452}, {0.82, 0.35959581947470715`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.82, 0.7686557228952452}], 
           Offset[{-1.5, 0}, {0.82, 0.7686557228952452}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.82, 0.35959581947470715`}], 
           Offset[{-1.5, 0}, {0.82, 0.35959581947470715`}]}]}, {
         LineBox[{{0.84, 0.7662775779321797}, {0.84, 0.42194946509363407`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.84, 0.7662775779321797}], 
           Offset[{-1.5, 0}, {0.84, 0.7662775779321797}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.84, 0.42194946509363407`}], 
           Offset[{-1.5, 0}, {0.84, 0.42194946509363407`}]}]}, {
         LineBox[{{0.86, 0.7892421865705027}, {0.86, 0.44840146123059105`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.86, 0.7892421865705027}], 
           Offset[{-1.5, 0}, {0.86, 0.7892421865705027}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.86, 0.44840146123059105`}], 
           Offset[{-1.5, 0}, {0.86, 0.44840146123059105`}]}]}, {
         LineBox[{{0.8799999999999999, 0.8151001215331182}, {
          0.8799999999999999, 0.4776039550150148}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8799999999999999, 0.8151001215331182}], 
           Offset[{-1.5, 0}, {0.8799999999999999, 0.8151001215331182}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8799999999999999, 0.4776039550150148}], 
           Offset[{-1.5, 0}, {0.8799999999999999, 0.4776039550150148}]}]}, {
         LineBox[{{0.8999999999999999, 0.8428585597240343}, {
          0.8999999999999999, 0.493748490751035}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8999999999999999, 0.8428585597240343}], 
           Offset[{-1.5, 0}, {0.8999999999999999, 0.8428585597240343}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8999999999999999, 0.493748490751035}], 
           Offset[{-1.5, 0}, {0.8999999999999999, 0.493748490751035}]}]}, {
         LineBox[{{0.9199999999999999, 0.8591760339939942}, {
          0.9199999999999999, 0.5142509246188739}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.9199999999999999, 0.8591760339939942}], 
           Offset[{-1.5, 0}, {0.9199999999999999, 0.8591760339939942}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.9199999999999999, 0.5142509246188739}], 
           Offset[{-1.5, 0}, {0.9199999999999999, 0.5142509246188739}]}]}, {
         LineBox[{{0.94, 0.8699606863495231}, {0.94, 0.52287365880374}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.94, 0.8699606863495231}], 
           Offset[{-1.5, 0}, {0.94, 0.8699606863495231}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.94, 0.52287365880374}], 
           Offset[{-1.5, 0}, {0.94, 0.52287365880374}]}]}, {
         LineBox[{{0.96, 0.848566365922913}, {0.96, 0.5285640702263295}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.96, 0.848566365922913}], 
           Offset[{-1.5, 0}, {0.96, 0.848566365922913}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.96, 0.5285640702263295}], 
           Offset[{-1.5, 0}, {0.96, 0.5285640702263295}]}]}, {
         LineBox[{{0.98, 0.8877889765686078}, {0.98, 0.5413237595107298}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.98, 0.8877889765686078}], 
           Offset[{-1.5, 0}, {0.98, 0.8877889765686078}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.98, 0.5413237595107298}], 
           Offset[{-1.5, 0}, {0.98, 0.5413237595107298}]}]}, {
         LineBox[{{1., 0.8806175310412212}, {1., 0.5422572592784037}}], 
         LineBox[{
          Offset[{1.5, 0}, {1., 0.8806175310412212}], 
           Offset[{-1.5, 0}, {1., 0.8806175310412212}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1., 0.5422572592784037}], 
           Offset[{-1.5, 0}, {1., 0.5422572592784037}]}]}, {
         LineBox[{{1.02, 0.8691301107893052}, {1.02, 0.5405069757340963}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.02, 0.8691301107893052}], 
           Offset[{-1.5, 0}, {1.02, 0.8691301107893052}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.02, 0.5405069757340963}], 
           Offset[{-1.5, 0}, {1.02, 0.5405069757340963}]}]}, {
         LineBox[{{1.04, 0.8575514192919925}, {1.04, 0.5281233952110649}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.04, 0.8575514192919925}], 
           Offset[{-1.5, 0}, {1.04, 0.8575514192919925}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.04, 0.5281233952110649}], 
           Offset[{-1.5, 0}, {1.04, 0.5281233952110649}]}]}, {
         LineBox[{{1.06, 0.8844843547647355}, {1.06, 0.521494375423432}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.06, 0.8844843547647355}], 
           Offset[{-1.5, 0}, {1.06, 0.8844843547647355}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.06, 0.521494375423432}], 
           Offset[{-1.5, 0}, {1.06, 0.521494375423432}]}]}, {
         LineBox[{{1.08, 0.8498123903741995}, {1.08, 0.504003555275996}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.08, 0.8498123903741995}], 
           Offset[{-1.5, 0}, {1.08, 0.8498123903741995}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.08, 0.504003555275996}], 
           Offset[{-1.5, 0}, {1.08, 0.504003555275996}]}]}, {
         LineBox[{{1.1, 0.8438364945241795}, {1.1, 0.5000126972090468}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1, 0.8438364945241795}], 
           Offset[{-1.5, 0}, {1.1, 0.8438364945241795}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1, 0.5000126972090468}], 
           Offset[{-1.5, 0}, {1.1, 0.5000126972090468}]}]}, {
         LineBox[{{1.1199999999999999`, 0.8222097884751045}, {
          1.1199999999999999`, 0.4828047697495009}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1199999999999999`, 0.8222097884751045}], 
           Offset[{-1.5, 0}, {1.1199999999999999`, 0.8222097884751045}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1199999999999999`, 0.4828047697495009}], 
           Offset[{-1.5, 0}, {1.1199999999999999`, 0.4828047697495009}]}]}, {
         LineBox[{{1.14, 0.8045711869911352}, {1.14, 0.4601837963148687}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.14, 0.8045711869911352}], 
           Offset[{-1.5, 0}, {1.14, 0.8045711869911352}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.14, 0.4601837963148687}], 
           Offset[{-1.5, 0}, {1.14, 0.4601837963148687}]}]}, {
         LineBox[{{1.16, 0.818506271377066}, {1.16, 0.4436775956772826}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.16, 0.818506271377066}], 
           Offset[{-1.5, 0}, {1.16, 0.818506271377066}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.16, 0.4436775956772826}], 
           Offset[{-1.5, 0}, {1.16, 0.4436775956772826}]}]}, {
         LineBox[{{1.18, 0.7989933762765816}, {1.18, 0.368176550737238}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.18, 0.7989933762765816}], 
           Offset[{-1.5, 0}, {1.18, 0.7989933762765816}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.18, 0.368176550737238}], 
           Offset[{-1.5, 0}, {1.18, 0.368176550737238}]}]}, {
         LineBox[{{1.2, 0.7663377284894765}, {1.2, 0.34845212541193427`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2, 0.7663377284894765}], 
           Offset[{-1.5, 0}, {1.2, 0.7663377284894765}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2, 0.34845212541193427`}], 
           Offset[{-1.5, 0}, {1.2, 0.34845212541193427`}]}]}, {
         LineBox[{{1.22, 0.7932326442734784}, {1.22, 0.31952854251598545`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.22, 0.7932326442734784}], 
           Offset[{-1.5, 0}, {1.22, 0.7932326442734784}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.22, 0.31952854251598545`}], 
           Offset[{-1.5, 0}, {1.22, 0.31952854251598545`}]}]}, {
         LineBox[{{1.24, 0.7456472532520063}, {1.24, 0.3319007308184876}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.24, 0.7456472532520063}], 
           Offset[{-1.5, 0}, {1.24, 0.7456472532520063}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.24, 0.3319007308184876}], 
           Offset[{-1.5, 0}, {1.24, 0.3319007308184876}]}]}, {
         LineBox[{{1.26, 0.7304756384447798}, {1.26, 0.293627725688323}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.26, 0.7304756384447798}], 
           Offset[{-1.5, 0}, {1.26, 0.7304756384447798}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.26, 0.293627725688323}], 
           Offset[{-1.5, 0}, {1.26, 0.293627725688323}]}]}, {
         LineBox[{{1.2799999999999998`, 0.7289058582230104}, {
          1.2799999999999998`, 0.31073608796972146`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2799999999999998`, 0.7289058582230104}], 
           Offset[{-1.5, 0}, {1.2799999999999998`, 0.7289058582230104}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2799999999999998`, 0.31073608796972146`}], 
           Offset[{-1.5, 0}, {1.2799999999999998`, 
            0.31073608796972146`}]}]}, {
         LineBox[{{1.2999999999999998`, 0.7449026642936094}, {
          1.2999999999999998`, 0.31475565772130965`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2999999999999998`, 0.7449026642936094}], 
           Offset[{-1.5, 0}, {1.2999999999999998`, 0.7449026642936094}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2999999999999998`, 0.31475565772130965`}], 
           Offset[{-1.5, 0}, {1.2999999999999998`, 
            0.31475565772130965`}]}]}}}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
    AxesOrigin->{0.690625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{0.7, 1.2999999999999998`}, {0, 1}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic},
    TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.012833333333333334`], Thickness[Tiny], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQnQYGz+xZV/NNONP/wJ7r+uICW67n9ptqf66a8ee+
/Tr3h1Ui657bxxv775dc+MA+aIdc6+vAF/bBm/SSv+k/sP+qEdN/6OsLe3Gv
ItEtjQ/tZ4LBS/ueRdvz5VQf2duCDXxln8O8XOCO7GN7kGnuD1/ZMxvHyvnw
PLEHGgYy0V71IrvZuptP7MHGabyx/9Uvnno5/5n9GTB4Y++df/RojewL+wKw
gW/tndafslka9NJeBOzAd/Z7jD4sUuh4aQ923o539kv4vfIvpb6yBxsX897e
s3C7vE7LK3sGMPhg3//2kpz38ldQ/3yw57LKZDi06pX9ErAFH+x/znfo35z0
yv4b2EEf7KeZCknqfX5p7wH2wEf7sPNnFTn0X9rPAvv3o/2+vaJx/6Rf2EO8
89H+5YF9MSIMz6H+/2QfKCkU9G37U3uwc/o/2av/v722l/UJNDw+2c+ctC04
vuuxvTEYfLZf/N/pEnvWQ2j4fLavKGv7frzmgT04eq5/tr+1peFM+uQH9ppg
D36xP/pwsiLjv/v2YOOqvtivmJ61JTLkATT8vthbnRVX0fZ5YA8AgcD8fw==

        "]], {{
         LineBox[{{0.7, 0.8790197160881974}, {0.7, 0.16761085611668325`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7, 0.8790197160881974}], 
           Offset[{-1.5, 0}, {0.7, 0.8790197160881974}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7, 0.16761085611668325`}], 
           Offset[{-1.5, 0}, {0.7, 0.16761085611668325`}]}]}, {
         LineBox[{{0.72, 0.8516650810340924}, {0.72, 0.16864913734604303`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.72, 0.8516650810340924}], 
           Offset[{-1.5, 0}, {0.72, 0.8516650810340924}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.72, 0.16864913734604303`}], 
           Offset[{-1.5, 0}, {0.72, 0.16864913734604303`}]}]}, {
         LineBox[{{0.74, 0.8850224661256508}, {0.74, 0.14760367102676042`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.74, 0.8850224661256508}], 
           Offset[{-1.5, 0}, {0.74, 0.8850224661256508}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.74, 0.14760367102676042`}], 
           Offset[{-1.5, 0}, {0.74, 0.14760367102676042`}]}]}, {
         LineBox[{{0.76, 0.8590310526731807}, {0.76, 0.12791242627884614`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.76, 0.8590310526731807}], 
           Offset[{-1.5, 0}, {0.76, 0.8590310526731807}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.76, 0.12791242627884614`}], 
           Offset[{-1.5, 0}, {0.76, 0.12791242627884614`}]}]}, {
         LineBox[{{0.7799999999999999, 0.9082520011192867}, {
          0.7799999999999999, 0.19579727729564061`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7799999999999999, 0.9082520011192867}], 
           Offset[{-1.5, 0}, {0.7799999999999999, 0.9082520011192867}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7799999999999999, 0.19579727729564061`}], 
           Offset[{-1.5, 0}, {0.7799999999999999, 0.19579727729564061`}]}]}, {
         LineBox[{{0.7999999999999999, 0.9259676839607208}, {
          0.7999999999999999, 0.2270795003613369}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7999999999999999, 0.9259676839607208}], 
           Offset[{-1.5, 0}, {0.7999999999999999, 0.9259676839607208}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7999999999999999, 0.2270795003613369}], 
           Offset[{-1.5, 0}, {0.7999999999999999, 0.2270795003613369}]}]}, {
         LineBox[{{0.82, 0.9168295030126947}, {0.82, 0.3057842748980845}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.82, 0.9168295030126947}], 
           Offset[{-1.5, 0}, {0.82, 0.9168295030126947}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.82, 0.3057842748980845}], 
           Offset[{-1.5, 0}, {0.82, 0.3057842748980845}]}]}, {
         LineBox[{{0.84, 0.9203728055347431}, {0.84, 0.38736898530346986`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.84, 0.9203728055347431}], 
           Offset[{-1.5, 0}, {0.84, 0.9203728055347431}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.84, 0.38736898530346986`}], 
           Offset[{-1.5, 0}, {0.84, 0.38736898530346986`}]}]}, {
         LineBox[{{0.86, 0.9494267154092734}, {0.86, 0.41562986454716044`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.86, 0.9494267154092734}], 
           Offset[{-1.5, 0}, {0.86, 0.9494267154092734}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.86, 0.41562986454716044`}], 
           Offset[{-1.5, 0}, {0.86, 0.41562986454716044`}]}]}, {
         LineBox[{{0.8799999999999999, 0.9531650331902535}, {
          0.8799999999999999, 0.5112556266334364}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8799999999999999, 0.9531650331902535}], 
           Offset[{-1.5, 0}, {0.8799999999999999, 0.9531650331902535}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8799999999999999, 0.5112556266334364}], 
           Offset[{-1.5, 0}, {0.8799999999999999, 0.5112556266334364}]}]}, {
         LineBox[{{0.8999999999999999, 0.9665915104347527}, {
          0.8999999999999999, 0.5692151678418994}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8999999999999999, 0.9665915104347527}], 
           Offset[{-1.5, 0}, {0.8999999999999999, 0.9665915104347527}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8999999999999999, 0.5692151678418994}], 
           Offset[{-1.5, 0}, {0.8999999999999999, 0.5692151678418994}]}]}, {
         LineBox[{{0.9199999999999999, 0.973013416412538}, {
          0.9199999999999999, 0.6430662389206919}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.9199999999999999, 0.973013416412538}], 
           Offset[{-1.5, 0}, {0.9199999999999999, 0.973013416412538}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.9199999999999999, 0.6430662389206919}], 
           Offset[{-1.5, 0}, {0.9199999999999999, 0.6430662389206919}]}]}, {
         LineBox[{{0.94, 0.969788368339796}, {0.94, 0.6451894120990613}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.94, 0.969788368339796}], 
           Offset[{-1.5, 0}, {0.94, 0.969788368339796}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.94, 0.6451894120990613}], 
           Offset[{-1.5, 0}, {0.94, 0.6451894120990613}]}]}, {
         LineBox[{{0.96, 0.9757410085147753}, {0.96, 0.6843182294158929}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.96, 0.9757410085147753}], 
           Offset[{-1.5, 0}, {0.96, 0.9757410085147753}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.96, 0.6843182294158929}], 
           Offset[{-1.5, 0}, {0.96, 0.6843182294158929}]}]}, {
         LineBox[{{0.98, 0.97639763981258}, {0.98, 0.6961254207199933}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.98, 0.97639763981258}], 
           Offset[{-1.5, 0}, {0.98, 0.97639763981258}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.98, 0.6961254207199933}], 
           Offset[{-1.5, 0}, {0.98, 0.6961254207199933}]}]}, {
         LineBox[{{1., 0.9761331424145349}, {1., 0.6993787970070339}}], 
         LineBox[{
          Offset[{1.5, 0}, {1., 0.9761331424145349}], 
           Offset[{-1.5, 0}, {1., 0.9761331424145349}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1., 0.6993787970070339}], 
           Offset[{-1.5, 0}, {1., 0.6993787970070339}]}]}, {
         LineBox[{{1.02, 0.9811626551174415}, {1.02, 0.6942757083772487}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.02, 0.9811626551174415}], 
           Offset[{-1.5, 0}, {1.02, 0.9811626551174415}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.02, 0.6942757083772487}], 
           Offset[{-1.5, 0}, {1.02, 0.6942757083772487}]}]}, {
         LineBox[{{1.04, 0.973889138564355}, {1.04, 0.6791655398595957}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.04, 0.973889138564355}], 
           Offset[{-1.5, 0}, {1.04, 0.973889138564355}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.04, 0.6791655398595957}], 
           Offset[{-1.5, 0}, {1.04, 0.6791655398595957}]}]}, {
         LineBox[{{1.06, 0.9751219122676412}, {1.06, 0.6730858190842645}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.06, 0.9751219122676412}], 
           Offset[{-1.5, 0}, {1.06, 0.9751219122676412}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.06, 0.6730858190842645}], 
           Offset[{-1.5, 0}, {1.06, 0.6730858190842645}]}]}, {
         LineBox[{{1.08, 0.972078055301868}, {1.08, 0.6305342887383614}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.08, 0.972078055301868}], 
           Offset[{-1.5, 0}, {1.08, 0.972078055301868}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.08, 0.6305342887383614}], 
           Offset[{-1.5, 0}, {1.08, 0.6305342887383614}]}]}, {
         LineBox[{{1.1, 0.9626432334568522}, {1.1, 0.5906785306901178}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1, 0.9626432334568522}], 
           Offset[{-1.5, 0}, {1.1, 0.9626432334568522}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1, 0.5906785306901178}], 
           Offset[{-1.5, 0}, {1.1, 0.5906785306901178}]}]}, {
         LineBox[{{1.1199999999999999`, 0.962809489968884}, {
          1.1199999999999999`, 0.5356171639462922}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1199999999999999`, 0.962809489968884}], 
           Offset[{-1.5, 0}, {1.1199999999999999`, 0.962809489968884}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1199999999999999`, 0.5356171639462922}], 
           Offset[{-1.5, 0}, {1.1199999999999999`, 0.5356171639462922}]}]}, {
         LineBox[{{1.14, 0.948582526818729}, {1.14, 0.46392622692451924`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.14, 0.948582526818729}], 
           Offset[{-1.5, 0}, {1.14, 0.948582526818729}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.14, 0.46392622692451924`}], 
           Offset[{-1.5, 0}, {1.14, 0.46392622692451924`}]}]}, {
         LineBox[{{1.16, 0.9367496198378241}, {1.16, 0.3800130262578134}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.16, 0.9367496198378241}], 
           Offset[{-1.5, 0}, {1.16, 0.9367496198378241}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.16, 0.3800130262578134}], 
           Offset[{-1.5, 0}, {1.16, 0.3800130262578134}]}]}, {
         LineBox[{{1.18, 0.9442439534291663}, {1.18, 0.3338669537678309}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.18, 0.9442439534291663}], 
           Offset[{-1.5, 0}, {1.18, 0.9442439534291663}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.18, 0.3338669537678309}], 
           Offset[{-1.5, 0}, {1.18, 0.3338669537678309}]}]}, {
         LineBox[{{1.2, 0.8971460319413479}, {1.2, 0.2206416430624421}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2, 0.8971460319413479}], 
           Offset[{-1.5, 0}, {1.2, 0.8971460319413479}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2, 0.2206416430624421}], 
           Offset[{-1.5, 0}, {1.2, 0.2206416430624421}]}]}, {
         LineBox[{{1.22, 0.8855035708819312}, {1.22, 0.15246105335875315`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.22, 0.8855035708819312}], 
           Offset[{-1.5, 0}, {1.22, 0.8855035708819312}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.22, 0.15246105335875315`}], 
           Offset[{-1.5, 0}, {1.22, 0.15246105335875315`}]}]}, {
         LineBox[{{1.24, 0.8793390479884806}, {1.24, 0.14706733574045017`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.24, 0.8793390479884806}], 
           Offset[{-1.5, 0}, {1.24, 0.8793390479884806}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.24, 0.14706733574045017`}], 
           Offset[{-1.5, 0}, {1.24, 0.14706733574045017`}]}]}, {
         LineBox[{{1.26, 0.859349861360477}, {1.26, 0.12473016310474433`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.26, 0.859349861360477}], 
           Offset[{-1.5, 0}, {1.26, 0.859349861360477}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.26, 0.12473016310474433`}], 
           Offset[{-1.5, 0}, {1.26, 0.12473016310474433`}]}]}, {
         LineBox[{{1.2799999999999998`, 0.8851388958973334}, {
          1.2799999999999998`, 0.13760500868748282`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2799999999999998`, 0.8851388958973334}], 
           Offset[{-1.5, 0}, {1.2799999999999998`, 0.8851388958973334}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2799999999999998`, 0.13760500868748282`}], 
           Offset[{-1.5, 0}, {1.2799999999999998`, 
            0.13760500868748282`}]}]}, {
         LineBox[{{1.2999999999999998`, 0.8835470785402127}, {
          1.2999999999999998`, 0.1273514827507155}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2999999999999998`, 0.8835470785402127}], 
           Offset[{-1.5, 0}, {1.2999999999999998`, 0.8835470785402127}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2999999999999998`, 0.1273514827507155}], 
           Offset[{-1.5, 0}, {1.2999999999999998`, 
            0.1273514827507155}]}]}}}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
    AxesOrigin->{0.690625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{0.7, 1.2999999999999998`}, {0, 1}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic},
    TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.012833333333333334`], Thickness[Tiny], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQnQYGz+yvHqz1VZ95357r+uICW67n9pXiHiIL4x/Y
r3N/WCWy7rn94u/X1y47+MA+aIdc6+vAF/bvZBp2r3d8aP9VI6b/0NcX9mfE
I5UrJB/ZzwSDl/ZLDdQlxOoe2duCDXxlv1nzu3rbrSf2INPcH76yf+gpcsnr
zlN7oGEgE+2f33HWNHn13B5snMYb+5e3F9daRr6yPwMGb+yvenauiX342r4A
bOBbe1kLoUKexLf2ImAHvrOv/hK23eXeW3uw83a8szfcLDVLVOWdPdi4mPf2
4utLLB7UvLNnAIMP9rmJN3MUgHyIfz7Y75u2sb075J39ErAFH+yt9xZs97Z/
Z/8N7KAP9o8fzWVhOfrW3gPsgY/2+zcJVl6zfGs/C+zfj/YBH9+/yrz62h7i
nY/2cq1Si47dewn1/yd7lttXMk9qvLAHO6f/k33JrdvxOUeeQsPjk/3CgpQj
2gJP7I3B4LN9R8zTRr/WR9Dw+WwvvVXt8P6YR/bg6Ln+2X7xDqc/Ry4/tNcE
e/CL/W1Be+P/Cx/ag42r+mLP8muS+Z5JD6Dh98We/fUq+alXHtgDAGDtA9Y=

        "]], {{
         LineBox[{{0.7, 0.9613554929016672}, {0.7, 0.030624550624523905`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7, 0.9613554929016672}], 
           Offset[{-1.5, 0}, {0.7, 0.9613554929016672}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7, 0.030624550624523905`}], 
           Offset[{-1.5, 0}, {0.7, 0.030624550624523905`}]}]}, {
         LineBox[{{0.72, 0.9625906225393898}, {0.72, 0.047619809701113125`}}],
          LineBox[{
          Offset[{1.5, 0}, {0.72, 0.9625906225393898}], 
           Offset[{-1.5, 0}, {0.72, 0.9625906225393898}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.72, 0.047619809701113125`}], 
           Offset[{-1.5, 0}, {0.72, 0.047619809701113125`}]}]}, {
         LineBox[{{0.74, 0.9571736610196304}, {0.74, 0.06528416921007751}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.74, 0.9571736610196304}], 
           Offset[{-1.5, 0}, {0.74, 0.9571736610196304}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.74, 0.06528416921007751}], 
           Offset[{-1.5, 0}, {0.74, 0.06528416921007751}]}]}, {
         LineBox[{{0.76, 0.9735950779357088}, {0.76, 0.09292632525605643}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.76, 0.9735950779357088}], 
           Offset[{-1.5, 0}, {0.76, 0.9735950779357088}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.76, 0.09292632525605643}], 
           Offset[{-1.5, 0}, {0.76, 0.09292632525605643}]}]}, {
         LineBox[{{0.7799999999999999, 0.9808437112141918}, {
          0.7799999999999999, 0.11554823820930304`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7799999999999999, 0.9808437112141918}], 
           Offset[{-1.5, 0}, {0.7799999999999999, 0.9808437112141918}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7799999999999999, 0.11554823820930304`}], 
           Offset[{-1.5, 0}, {0.7799999999999999, 0.11554823820930304`}]}]}, {
         LineBox[{{0.7999999999999999, 0.977989503892179}, {
          0.7999999999999999, 0.13136474278284227`}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7999999999999999, 0.977989503892179}], 
           Offset[{-1.5, 0}, {0.7999999999999999, 0.977989503892179}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.7999999999999999, 0.13136474278284227`}], 
           Offset[{-1.5, 0}, {0.7999999999999999, 0.13136474278284227`}]}]}, {
         LineBox[{{0.82, 0.9846979660987509}, {0.82, 0.2605987523153027}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.82, 0.9846979660987509}], 
           Offset[{-1.5, 0}, {0.82, 0.9846979660987509}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.82, 0.2605987523153027}], 
           Offset[{-1.5, 0}, {0.82, 0.2605987523153027}]}]}, {
         LineBox[{{0.84, 0.9913967851111906}, {0.84, 0.3541001208298797}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.84, 0.9913967851111906}], 
           Offset[{-1.5, 0}, {0.84, 0.9913967851111906}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.84, 0.3541001208298797}], 
           Offset[{-1.5, 0}, {0.84, 0.3541001208298797}]}]}, {
         LineBox[{{0.86, 0.9953882038689199}, {0.86, 0.585782818085727}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.86, 0.9953882038689199}], 
           Offset[{-1.5, 0}, {0.86, 0.9953882038689199}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.86, 0.585782818085727}], 
           Offset[{-1.5, 0}, {0.86, 0.585782818085727}]}]}, {
         LineBox[{{0.8799999999999999, 0.9974992082703501}, {
          0.8799999999999999, 0.7602077890484308}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8799999999999999, 0.9974992082703501}], 
           Offset[{-1.5, 0}, {0.8799999999999999, 0.9974992082703501}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8799999999999999, 0.7602077890484308}], 
           Offset[{-1.5, 0}, {0.8799999999999999, 0.7602077890484308}]}]}, {
         LineBox[{{0.8999999999999999, 0.9975974264076305}, {
          0.8999999999999999, 0.825526399874251}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8999999999999999, 0.9975974264076305}], 
           Offset[{-1.5, 0}, {0.8999999999999999, 0.9975974264076305}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.8999999999999999, 0.825526399874251}], 
           Offset[{-1.5, 0}, {0.8999999999999999, 0.825526399874251}]}]}, {
         LineBox[{{0.9199999999999999, 0.9986233177246423}, {
          0.9199999999999999, 0.9002895714401653}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.9199999999999999, 0.9986233177246423}], 
           Offset[{-1.5, 0}, {0.9199999999999999, 0.9986233177246423}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.9199999999999999, 0.9002895714401653}], 
           Offset[{-1.5, 0}, {0.9199999999999999, 0.9002895714401653}]}]}, {
         LineBox[{{0.94, 0.9992515204419061}, {0.94, 0.9215921166127974}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.94, 0.9992515204419061}], 
           Offset[{-1.5, 0}, {0.94, 0.9992515204419061}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.94, 0.9215921166127974}], 
           Offset[{-1.5, 0}, {0.94, 0.9215921166127974}]}]}, {
         LineBox[{{0.96, 0.9992663228031472}, {0.96, 0.9310802253926189}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.96, 0.9992663228031472}], 
           Offset[{-1.5, 0}, {0.96, 0.9992663228031472}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.96, 0.9310802253926189}], 
           Offset[{-1.5, 0}, {0.96, 0.9310802253926189}]}]}, {
         LineBox[{{0.98, 0.9995153142775184}, {0.98, 0.9541987003956857}}], 
         LineBox[{
          Offset[{1.5, 0}, {0.98, 0.9995153142775184}], 
           Offset[{-1.5, 0}, {0.98, 0.9995153142775184}]}], 
         LineBox[{
          Offset[{1.5, 0}, {0.98, 0.9541987003956857}], 
           Offset[{-1.5, 0}, {0.98, 0.9541987003956857}]}]}, {
         LineBox[{{1., 0.999462929116759}, {1., 0.9447550880993302}}], 
         LineBox[{
          Offset[{1.5, 0}, {1., 0.999462929116759}], 
           Offset[{-1.5, 0}, {1., 0.999462929116759}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1., 0.9447550880993302}], 
           Offset[{-1.5, 0}, {1., 0.9447550880993302}]}]}, {
         LineBox[{{1.02, 0.9990155320887132}, {1.02, 0.9359201245714556}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.02, 0.9990155320887132}], 
           Offset[{-1.5, 0}, {1.02, 0.9990155320887132}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.02, 0.9359201245714556}], 
           Offset[{-1.5, 0}, {1.02, 0.9359201245714556}]}]}, {
         LineBox[{{1.04, 0.9995336960970136}, {1.04, 0.940763083457911}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.04, 0.9995336960970136}], 
           Offset[{-1.5, 0}, {1.04, 0.9995336960970136}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.04, 0.940763083457911}], 
           Offset[{-1.5, 0}, {1.04, 0.940763083457911}]}]}, {
         LineBox[{{1.06, 0.9990579056742926}, {1.06, 0.9237323004004394}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.06, 0.9990579056742926}], 
           Offset[{-1.5, 0}, {1.06, 0.9990579056742926}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.06, 0.9237323004004394}], 
           Offset[{-1.5, 0}, {1.06, 0.9237323004004394}]}]}, {
         LineBox[{{1.08, 0.9987644234238595}, {1.08, 0.8907332756135362}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.08, 0.9987644234238595}], 
           Offset[{-1.5, 0}, {1.08, 0.9987644234238595}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.08, 0.8907332756135362}], 
           Offset[{-1.5, 0}, {1.08, 0.8907332756135362}]}]}, {
         LineBox[{{1.1, 0.9982476878374521}, {1.1, 0.8390924389362676}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1, 0.9982476878374521}], 
           Offset[{-1.5, 0}, {1.1, 0.9982476878374521}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1, 0.8390924389362676}], 
           Offset[{-1.5, 0}, {1.1, 0.8390924389362676}]}]}, {
         LineBox[{{1.1199999999999999`, 0.9972493192480401}, {
          1.1199999999999999`, 0.7066416790893876}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1199999999999999`, 0.9972493192480401}], 
           Offset[{-1.5, 0}, {1.1199999999999999`, 0.9972493192480401}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.1199999999999999`, 0.7066416790893876}], 
           Offset[{-1.5, 0}, {1.1199999999999999`, 0.7066416790893876}]}]}, {
         LineBox[{{1.14, 0.9958553247818105}, {1.14, 0.5843536172388213}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.14, 0.9958553247818105}], 
           Offset[{-1.5, 0}, {1.14, 0.9958553247818105}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.14, 0.5843536172388213}], 
           Offset[{-1.5, 0}, {1.14, 0.5843536172388213}]}]}, {
         LineBox[{{1.16, 0.990323032154207}, {1.16, 0.3655469720403058}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.16, 0.990323032154207}], 
           Offset[{-1.5, 0}, {1.16, 0.990323032154207}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.16, 0.3655469720403058}], 
           Offset[{-1.5, 0}, {1.16, 0.3655469720403058}]}]}, {
         LineBox[{{1.18, 0.9875948779695308}, {1.18, 0.22618958247575593`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.18, 0.9875948779695308}], 
           Offset[{-1.5, 0}, {1.18, 0.9875948779695308}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.18, 0.22618958247575593`}], 
           Offset[{-1.5, 0}, {1.18, 0.22618958247575593`}]}]}, {
         LineBox[{{1.2, 0.9801327021430332}, {1.2, 0.12415645051521373`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2, 0.9801327021430332}], 
           Offset[{-1.5, 0}, {1.2, 0.9801327021430332}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2, 0.12415645051521373`}], 
           Offset[{-1.5, 0}, {1.2, 0.12415645051521373`}]}]}, {
         LineBox[{{1.22, 0.9752597811812738}, {1.22, 0.11418510561445483`}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.22, 0.9752597811812738}], 
           Offset[{-1.5, 0}, {1.22, 0.9752597811812738}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.22, 0.11418510561445483`}], 
           Offset[{-1.5, 0}, {1.22, 0.11418510561445483`}]}]}, {
         LineBox[{{1.24, 0.9785279993551186}, {1.24, 0.09090436307520294}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.24, 0.9785279993551186}], 
           Offset[{-1.5, 0}, {1.24, 0.9785279993551186}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.24, 0.09090436307520294}], 
           Offset[{-1.5, 0}, {1.24, 0.09090436307520294}]}]}, {
         LineBox[{{1.26, 0.9754242143284594}, {1.26, 0.08855906268227987}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.26, 0.9754242143284594}], 
           Offset[{-1.5, 0}, {1.26, 0.9754242143284594}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.26, 0.08855906268227987}], 
           Offset[{-1.5, 0}, {1.26, 0.08855906268227987}]}]}, {
         LineBox[{{1.2799999999999998`, 0.9623715051523122}, {
          1.2799999999999998`, 0.05350867005257853}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2799999999999998`, 0.9623715051523122}], 
           Offset[{-1.5, 0}, {1.2799999999999998`, 0.9623715051523122}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2799999999999998`, 0.05350867005257853}], 
           Offset[{-1.5, 0}, {1.2799999999999998`, 0.05350867005257853}]}]}, {
         LineBox[{{1.2999999999999998`, 0.9696894709838833}, {
          1.2999999999999998`, 0.05251353155193278}}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2999999999999998`, 0.9696894709838833}], 
           Offset[{-1.5, 0}, {1.2999999999999998`, 0.9696894709838833}]}], 
         LineBox[{
          Offset[{1.5, 0}, {1.2999999999999998`, 0.05251353155193278}], 
           Offset[{-1.5, 0}, {1.2999999999999998`, 
            0.05251353155193278}]}]}}}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
    AxesOrigin->{0.690625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{0.7, 1.2999999999999998`}, {0, 1}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic},
    TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8684724629782534`*^9, 3.868472684926017*^9, 
  3.8684727974183655`*^9, 3.8684733927577467`*^9, 3.8684735139722815`*^9, 
  3.868477006435646*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
      0.012833333333333334`], Thickness[Tiny], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQnQYGz+xP3FIJN7v60J7r+uICW67n9qlXj8fdOvjA
fp37wyqRdc/tTyeWXNA888A+aIdc6+vAF/alL27uSl7ywP6bRkz/oa8v7O/d
bp1hqvDIftZMEHhpr7msc/2p8Ef2tmADX9nr3NjBxtr6xB5kmvvDV/YXFnlE
X/B6ag80DGSi/QLPzRVTRZ/ba4KM03hj/41Xxt2y+pX92TMg8MZ++em3CU/M
39gXgg18a+8z7b3EY8u39iJgB76zD/WuenXwxVt7sPN2vLNfs5rjcI/LO3uw
cTHv7fmDvXma/N/ZM4DBB/ut3OHGy8LfQf3zwT5QO/FTYco7+yUFIAs+2Fff
Xpn6MOod1H8f7B33558pvPbW3gPsgY/2j/pepD8NeAv170f72yH/JYsl3ti/
AXvno33qtD+S5n9eQv3/yT762o36+3wv7MHO6f9k79N096eT9TNoeHyy98xT
OH7e5om9MRh8tlcJZ7FhNnwEDZ/P9s+rGtvm2Dy0B0fP9c/2K2Z/5C1KfggN
ry/2lgllE+fKPLSvBgfIF/t2nxVbVzc8gIbfF/u5F/2eLKh7YA8AHVkEbA==

       "]], {{
        LineBox[{{0.7, 0.9711898354312772}, {0.7, 0.08621360952184792}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.9711898354312772}], 
          Offset[{-1.5, 0}, {0.7, 0.9711898354312772}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.08621360952184792}], 
          Offset[{-1.5, 0}, {0.7, 0.08621360952184792}]}]}, {
        LineBox[{{0.72, 0.962203907522221}, {0.72, 0.06435195240739489}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.72, 0.962203907522221}], 
          Offset[{-1.5, 0}, {0.72, 0.962203907522221}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.72, 0.06435195240739489}], 
          Offset[{-1.5, 0}, {0.72, 0.06435195240739489}]}]}, {
        LineBox[{{0.74, 0.9791421564206415}, {0.74, 0.06715080145461771}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.74, 0.9791421564206415}], 
          Offset[{-1.5, 0}, {0.74, 0.9791421564206415}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.74, 0.06715080145461771}], 
          Offset[{-1.5, 0}, {0.74, 0.06715080145461771}]}]}, {
        LineBox[{{0.76, 0.9551082826940324}, {0.76, 0.06136938089948707}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.76, 0.9551082826940324}], 
          Offset[{-1.5, 0}, {0.76, 0.9551082826940324}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.76, 0.06136938089948707}], 
          Offset[{-1.5, 0}, {0.76, 0.06136938089948707}]}]}, {
        LineBox[{{0.78, 0.9725074089705493}, {0.78, 0.12676784348494907`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.78, 0.9725074089705493}], 
          Offset[{-1.5, 0}, {0.78, 0.9725074089705493}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.78, 0.12676784348494907`}], 
          Offset[{-1.5, 0}, {0.78, 0.12676784348494907`}]}]}, {
        LineBox[{{0.8, 0.9817658823590539}, {0.8, 0.12468042861631612`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.9817658823590539}], 
          Offset[{-1.5, 0}, {0.8, 0.9817658823590539}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.12468042861631612`}], 
          Offset[{-1.5, 0}, {0.8, 0.12468042861631612`}]}]}, {
        LineBox[{{0.82, 0.989438458793868}, {0.82, 0.21864786183907609`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.82, 0.989438458793868}], 
          Offset[{-1.5, 0}, {0.82, 0.989438458793868}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.82, 0.21864786183907609`}], 
          Offset[{-1.5, 0}, {0.82, 0.21864786183907609`}]}]}, {
        LineBox[{{0.84, 0.9923934397014613}, {0.84, 0.3136490096450253}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.84, 0.9923934397014613}], 
          Offset[{-1.5, 0}, {0.84, 0.9923934397014613}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.84, 0.3136490096450253}], 
          Offset[{-1.5, 0}, {0.84, 0.3136490096450253}]}]}, {
        LineBox[{{0.86, 0.9947489782830172}, {0.86, 0.493727710644057}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.86, 0.9947489782830172}], 
          Offset[{-1.5, 0}, {0.86, 0.9947489782830172}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.86, 0.493727710644057}], 
          Offset[{-1.5, 0}, {0.86, 0.493727710644057}]}]}, {
        LineBox[{{0.88, 0.9978547001898778}, {0.88, 0.7653258347491758}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.88, 0.9978547001898778}], 
          Offset[{-1.5, 0}, {0.88, 0.9978547001898778}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.88, 0.7653258347491758}], 
          Offset[{-1.5, 0}, {0.88, 0.7653258347491758}]}]}, {
        LineBox[{{0.9, 0.9988024216432719}, {0.9, 0.8571005383656626}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.9988024216432719}], 
          Offset[{-1.5, 0}, {0.9, 0.9988024216432719}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.8571005383656626}], 
          Offset[{-1.5, 0}, {0.9, 0.8571005383656626}]}]}, {
        LineBox[{{0.92, 0.9988901529855261}, {0.92, 0.8932182252263123}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.92, 0.9988901529855261}], 
          Offset[{-1.5, 0}, {0.92, 0.9988901529855261}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.92, 0.8932182252263123}], 
          Offset[{-1.5, 0}, {0.92, 0.8932182252263123}]}]}, {
        LineBox[{{0.94, 0.9992831383174572}, {0.94, 0.9256742387912813}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.94, 0.9992831383174572}], 
          Offset[{-1.5, 0}, {0.94, 0.9992831383174572}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.94, 0.9256742387912813}], 
          Offset[{-1.5, 0}, {0.94, 0.9256742387912813}]}]}, {
        LineBox[{{0.96, 0.9992569421699097}, {0.96, 0.9420650960330551}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.96, 0.9992569421699097}], 
          Offset[{-1.5, 0}, {0.96, 0.9992569421699097}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.96, 0.9420650960330551}], 
          Offset[{-1.5, 0}, {0.96, 0.9420650960330551}]}]}, {
        LineBox[{{0.98, 0.999280511097856}, {0.98, 0.9390435619495117}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.98, 0.999280511097856}], 
          Offset[{-1.5, 0}, {0.98, 0.999280511097856}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.98, 0.9390435619495117}], 
          Offset[{-1.5, 0}, {0.98, 0.9390435619495117}]}]}, {
        LineBox[{{1., 0.9993509108037556}, {1., 0.9259950640212629}}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 0.9993509108037556}], 
          Offset[{-1.5, 0}, {1., 0.9993509108037556}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 0.9259950640212629}], 
          Offset[{-1.5, 0}, {1., 0.9259950640212629}]}]}, {
        LineBox[{{1.02, 0.9992099196291175}, {1.02, 0.9415948502842458}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.02, 0.9992099196291175}], 
          Offset[{-1.5, 0}, {1.02, 0.9992099196291175}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.02, 0.9415948502842458}], 
          Offset[{-1.5, 0}, {1.02, 0.9415948502842458}]}]}, {
        LineBox[{{1.04, 0.9992694219928103}, {1.04, 0.9422729095944992}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.04, 0.9992694219928103}], 
          Offset[{-1.5, 0}, {1.04, 0.9992694219928103}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.04, 0.9422729095944992}], 
          Offset[{-1.5, 0}, {1.04, 0.9422729095944992}]}]}, {
        LineBox[{{1.06, 0.999175852202536}, {1.06, 0.9221490865950096}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.06, 0.999175852202536}], 
          Offset[{-1.5, 0}, {1.06, 0.999175852202536}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.06, 0.9221490865950096}], 
          Offset[{-1.5, 0}, {1.06, 0.9221490865950096}]}]}, {
        LineBox[{{1.08, 0.9990778757395838}, {1.08, 0.9029289701503203}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.08, 0.9990778757395838}], 
          Offset[{-1.5, 0}, {1.08, 0.9990778757395838}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.08, 0.9029289701503203}], 
          Offset[{-1.5, 0}, {1.08, 0.9029289701503203}]}]}, {
        LineBox[{{1.1, 0.9985650756093808}, {1.1, 0.8580142003754582}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.1, 0.9985650756093808}], 
          Offset[{-1.5, 0}, {1.1, 0.9985650756093808}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.1, 0.8580142003754582}], 
          Offset[{-1.5, 0}, {1.1, 0.8580142003754582}]}]}, {
        LineBox[{{1.12, 0.996246618935434}, {1.12, 0.740876183745425}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.12, 0.996246618935434}], 
          Offset[{-1.5, 0}, {1.12, 0.996246618935434}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.12, 0.740876183745425}], 
          Offset[{-1.5, 0}, {1.12, 0.740876183745425}]}]}, {
        LineBox[{{1.14, 0.9952305792285256}, {1.14, 0.5915531401329227}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.14, 0.9952305792285256}], 
          Offset[{-1.5, 0}, {1.14, 0.9952305792285256}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.14, 0.5915531401329227}], 
          Offset[{-1.5, 0}, {1.14, 0.5915531401329227}]}]}, {
        LineBox[{{1.16, 0.9931158506908372}, {1.16, 0.42467649630165366`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.16, 0.9931158506908372}], 
          Offset[{-1.5, 0}, {1.16, 0.9931158506908372}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.16, 0.42467649630165366`}], 
          Offset[{-1.5, 0}, {1.16, 0.42467649630165366`}]}]}, {
        LineBox[{{1.18, 0.9900571777843501}, {1.18, 0.22526335322179913`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.18, 0.9900571777843501}], 
          Offset[{-1.5, 0}, {1.18, 0.9900571777843501}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.18, 0.22526335322179913`}], 
          Offset[{-1.5, 0}, {1.18, 0.22526335322179913`}]}]}, {
        LineBox[{{1.2, 0.9813224112075581}, {1.2, 0.12018105468174922`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.2, 0.9813224112075581}], 
          Offset[{-1.5, 0}, {1.2, 0.9813224112075581}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.2, 0.12018105468174922`}], 
          Offset[{-1.5, 0}, {1.2, 0.12018105468174922`}]}]}, {
        LineBox[{{1.22, 0.9756285267729932}, {1.22, 0.0750967098519501}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.22, 0.9756285267729932}], 
          Offset[{-1.5, 0}, {1.22, 0.9756285267729932}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.22, 0.0750967098519501}], 
          Offset[{-1.5, 0}, {1.22, 0.0750967098519501}]}]}, {
        LineBox[{{1.24, 0.9706322129652832}, {1.24, 0.08683975981493314}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.24, 0.9706322129652832}], 
          Offset[{-1.5, 0}, {1.24, 0.9706322129652832}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.24, 0.08683975981493314}], 
          Offset[{-1.5, 0}, {1.24, 0.08683975981493314}]}]}, {
        LineBox[{{1.26, 0.9728412140945935}, {1.26, 0.07397485609366866}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.26, 0.9728412140945935}], 
          Offset[{-1.5, 0}, {1.26, 0.9728412140945935}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.26, 0.07397485609366866}], 
          Offset[{-1.5, 0}, {1.26, 0.07397485609366866}]}]}, {
        LineBox[{{1.28, 0.9597345976820675}, {1.28, 0.0620551876077462}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.28, 0.9597345976820675}], 
          Offset[{-1.5, 0}, {1.28, 0.9597345976820675}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.28, 0.0620551876077462}], 
          Offset[{-1.5, 0}, {1.28, 0.0620551876077462}]}]}, {
        LineBox[{{1.3, 0.9619588009329735}, {1.3, 0.051122903629636285`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.3, 0.9619588009329735}], 
          Offset[{-1.5, 0}, {1.3, 0.9619588009329735}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.3, 0.051122903629636285`}], 
          Offset[{-1.5, 0}, {1.3, 
           0.051122903629636285`}]}]}}}}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.75, 0], PointSize[0.012833333333333334`], Thickness[Tiny],
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQnQYGz+x5GeLY1oY+sOe6vrjAluu5/auQ3SufXX9g
v879YZXIuuf2bdVHvuu3P7AP2iHX+jrwhb3x9OJdB6Me2H/TiOk/9PWFvYtG
4D3FCQ/tZ80EgZf2LLsEGK01Htnbgg18Ze961+ks04ZH9iDT3B++sv/fsuRe
yu/H9kDDQCba+81xcIv1e2qvCTJO4429YZ1aG9/kZ/Znz4DAG/ug1V4xLDNe
2BeCDXxrLxTSfZPD8KW9CNiB7+w79m7hSn370h7svB3v7DuDmY4Yh7+yBxsX
897+lxtvmGzjK3sGMPhgv+X7hp0vul9B/fPBftoR1/ztc1/ZLykAWfDB/lxe
pZ93zCuo/z7YW6YrpxUpvbL3AHvgo73h8U0lMukvof79aD/z1mPWZOkX9m/A
3vloL9kf2Weq8Rzq/0/239ySr3/mfmoPdk7/J3s59k0zp0U/gYbHJ/uLcnen
Tz7yyN4YDD7bG/Z+t/kh+QgaPp/td7yKYX1T8NAeHD3XP9unroqeOuvhA2h4
fbEP3NQRvn/FA/tqcIB8sedyU/yyof8BNPy+2Lu+1jNSOPfAHgASgPyl
       "]], {{
        LineBox[{{0.7, 0.8703848888158047}, {0.7, 0.14858126307513841`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.8703848888158047}], 
          Offset[{-1.5, 0}, {0.7, 0.8703848888158047}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.14858126307513841`}], 
          Offset[{-1.5, 0}, {0.7, 0.14858126307513841`}]}]}, {
        LineBox[{{0.72, 0.9049651950427231}, {0.72, 0.16235115810482192`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.72, 0.9049651950427231}], 
          Offset[{-1.5, 0}, {0.72, 0.9049651950427231}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.72, 0.16235115810482192`}], 
          Offset[{-1.5, 0}, {0.72, 0.16235115810482192`}]}]}, {
        LineBox[{{0.74, 0.8863603313189009}, {0.74, 0.14429267368835796`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.74, 0.8863603313189009}], 
          Offset[{-1.5, 0}, {0.74, 0.8863603313189009}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.74, 0.14429267368835796`}], 
          Offset[{-1.5, 0}, {0.74, 0.14429267368835796`}]}]}, {
        LineBox[{{0.76, 0.8791675040039365}, {0.76, 0.1279496543623434}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.76, 0.8791675040039365}], 
          Offset[{-1.5, 0}, {0.76, 0.8791675040039365}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.76, 0.1279496543623434}], 
          Offset[{-1.5, 0}, {0.76, 0.1279496543623434}]}]}, {
        LineBox[{{0.78, 0.9063792152570106}, {0.78, 0.1847724512641281}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.78, 0.9063792152570106}], 
          Offset[{-1.5, 0}, {0.78, 0.9063792152570106}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.78, 0.1847724512641281}], 
          Offset[{-1.5, 0}, {0.78, 0.1847724512641281}]}]}, {
        LineBox[{{0.8, 0.9166883014148313}, {0.8, 0.2546545966260881}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.9166883014148313}], 
          Offset[{-1.5, 0}, {0.8, 0.9166883014148313}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.2546545966260881}], 
          Offset[{-1.5, 0}, {0.8, 0.2546545966260881}]}]}, {
        LineBox[{{0.82, 0.9173385192633033}, {0.82, 0.2704170139785096}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.82, 0.9173385192633033}], 
          Offset[{-1.5, 0}, {0.82, 0.9173385192633033}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.82, 0.2704170139785096}], 
          Offset[{-1.5, 0}, {0.82, 0.2704170139785096}]}]}, {
        LineBox[{{0.84, 0.9493252047373498}, {0.84, 0.35102903985872475`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.84, 0.9493252047373498}], 
          Offset[{-1.5, 0}, {0.84, 0.9493252047373498}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.84, 0.35102903985872475`}], 
          Offset[{-1.5, 0}, {0.84, 0.35102903985872475`}]}]}, {
        LineBox[{{0.86, 0.9410198481680764}, {0.86, 0.4564028166678084}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.86, 0.9410198481680764}], 
          Offset[{-1.5, 0}, {0.86, 0.9410198481680764}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.86, 0.4564028166678084}], 
          Offset[{-1.5, 0}, {0.86, 0.4564028166678084}]}]}, {
        LineBox[{{0.88, 0.9594418764028331}, {0.88, 0.5086597656255495}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.88, 0.9594418764028331}], 
          Offset[{-1.5, 0}, {0.88, 0.9594418764028331}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.88, 0.5086597656255495}], 
          Offset[{-1.5, 0}, {0.88, 0.5086597656255495}]}]}, {
        LineBox[{{0.9, 0.9708772262987901}, {0.9, 0.59827500280915}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.9708772262987901}], 
          Offset[{-1.5, 0}, {0.9, 0.9708772262987901}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.59827500280915}], 
          Offset[{-1.5, 0}, {0.9, 0.59827500280915}]}]}, {
        LineBox[{{0.92, 0.9673782886846574}, {0.92, 0.6366881205518454}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.92, 0.9673782886846574}], 
          Offset[{-1.5, 0}, {0.92, 0.9673782886846574}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.92, 0.6366881205518454}], 
          Offset[{-1.5, 0}, {0.92, 0.6366881205518454}]}]}, {
        LineBox[{{0.94, 0.9810154112082009}, {0.94, 0.6594873654407439}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.94, 0.9810154112082009}], 
          Offset[{-1.5, 0}, {0.94, 0.9810154112082009}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.94, 0.6594873654407439}], 
          Offset[{-1.5, 0}, {0.94, 0.6594873654407439}]}]}, {
        LineBox[{{0.96, 0.9810790694406025}, {0.96, 0.6809792489700756}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.96, 0.9810790694406025}], 
          Offset[{-1.5, 0}, {0.96, 0.9810790694406025}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.96, 0.6809792489700756}], 
          Offset[{-1.5, 0}, {0.96, 0.6809792489700756}]}]}, {
        LineBox[{{0.98, 0.9770200973406543}, {0.98, 0.6915886199140727}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.98, 0.9770200973406543}], 
          Offset[{-1.5, 0}, {0.98, 0.9770200973406543}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.98, 0.6915886199140727}], 
          Offset[{-1.5, 0}, {0.98, 0.6915886199140727}]}]}, {
        LineBox[{{1., 0.9833321595838941}, {1., 0.6853394326285054}}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 0.9833321595838941}], 
          Offset[{-1.5, 0}, {1., 0.9833321595838941}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 0.6853394326285054}], 
          Offset[{-1.5, 0}, {1., 0.6853394326285054}]}]}, {
        LineBox[{{1.02, 0.9793132742990226}, {1.02, 0.701052277980825}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.02, 0.9793132742990226}], 
          Offset[{-1.5, 0}, {1.02, 0.9793132742990226}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.02, 0.701052277980825}], 
          Offset[{-1.5, 0}, {1.02, 0.701052277980825}]}]}, {
        LineBox[{{1.04, 0.9783431392809686}, {1.04, 0.6912537881076178}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.04, 0.9783431392809686}], 
          Offset[{-1.5, 0}, {1.04, 0.9783431392809686}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.04, 0.6912537881076178}], 
          Offset[{-1.5, 0}, {1.04, 0.6912537881076178}]}]}, {
        LineBox[{{1.06, 0.9751420256119598}, {1.06, 0.6763947845396449}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.06, 0.9751420256119598}], 
          Offset[{-1.5, 0}, {1.06, 0.9751420256119598}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.06, 0.6763947845396449}], 
          Offset[{-1.5, 0}, {1.06, 0.6763947845396449}]}]}, {
        LineBox[{{1.08, 0.9682717388550546}, {1.08, 0.6488713756871738}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.08, 0.9682717388550546}], 
          Offset[{-1.5, 0}, {1.08, 0.9682717388550546}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.08, 0.6488713756871738}], 
          Offset[{-1.5, 0}, {1.08, 0.6488713756871738}]}]}, {
        LineBox[{{1.1, 0.9685182968666742}, {1.1, 0.5749496142643441}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.1, 0.9685182968666742}], 
          Offset[{-1.5, 0}, {1.1, 0.9685182968666742}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.1, 0.5749496142643441}], 
          Offset[{-1.5, 0}, {1.1, 0.5749496142643441}]}]}, {
        LineBox[{{1.12, 0.9592189597571082}, {1.12, 0.5549423944169676}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.12, 0.9592189597571082}], 
          Offset[{-1.5, 0}, {1.12, 0.9592189597571082}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.12, 0.5549423944169676}], 
          Offset[{-1.5, 0}, {1.12, 0.5549423944169676}]}]}, {
        LineBox[{{1.14, 0.938475501167463}, {1.14, 0.4564631656855516}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.14, 0.938475501167463}], 
          Offset[{-1.5, 0}, {1.14, 0.938475501167463}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.14, 0.4564631656855516}], 
          Offset[{-1.5, 0}, {1.14, 0.4564631656855516}]}]}, {
        LineBox[{{1.16, 0.9446125202291231}, {1.16, 0.4081888238579897}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.16, 0.9446125202291231}], 
          Offset[{-1.5, 0}, {1.16, 0.9446125202291231}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.16, 0.4081888238579897}], 
          Offset[{-1.5, 0}, {1.16, 0.4081888238579897}]}]}, {
        LineBox[{{1.18, 0.9298158402706443}, {1.18, 0.2831466889454722}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.18, 0.9298158402706443}], 
          Offset[{-1.5, 0}, {1.18, 0.9298158402706443}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.18, 0.2831466889454722}], 
          Offset[{-1.5, 0}, {1.18, 0.2831466889454722}]}]}, {
        LineBox[{{1.2, 0.9062100020780345}, {1.2, 0.255044766814332}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.2, 0.9062100020780345}], 
          Offset[{-1.5, 0}, {1.2, 0.9062100020780345}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.2, 0.255044766814332}], 
          Offset[{-1.5, 0}, {1.2, 0.255044766814332}]}]}, {
        LineBox[{{1.22, 0.8985862065838056}, {1.22, 0.216176467874853}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.22, 0.8985862065838056}], 
          Offset[{-1.5, 0}, {1.22, 0.8985862065838056}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.22, 0.216176467874853}], 
          Offset[{-1.5, 0}, {1.22, 0.216176467874853}]}]}, {
        LineBox[{{1.24, 0.9002880765000355}, {1.24, 0.1682313850609614}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.24, 0.9002880765000355}], 
          Offset[{-1.5, 0}, {1.24, 0.9002880765000355}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.24, 0.1682313850609614}], 
          Offset[{-1.5, 0}, {1.24, 0.1682313850609614}]}]}, {
        LineBox[{{1.26, 0.8804664664571569}, {1.26, 0.15915407009383775`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.26, 0.8804664664571569}], 
          Offset[{-1.5, 0}, {1.26, 0.8804664664571569}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.26, 0.15915407009383775`}], 
          Offset[{-1.5, 0}, {1.26, 0.15915407009383775`}]}]}, {
        LineBox[{{1.28, 0.8780305439106889}, {1.28, 0.17092459124933423`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.28, 0.8780305439106889}], 
          Offset[{-1.5, 0}, {1.28, 0.8780305439106889}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.28, 0.17092459124933423`}], 
          Offset[{-1.5, 0}, {1.28, 0.17092459124933423`}]}]}, {
        LineBox[{{1.3, 0.8984159762750219}, {1.3, 0.1771002481139612}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.3, 0.8984159762750219}], 
          Offset[{-1.5, 0}, {1.3, 0.8984159762750219}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.3, 0.1771002481139612}], 
          Offset[{-1.5, 0}, {1.3, 
           0.1771002481139612}]}]}}}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], Thickness[Tiny], LineBox[CompressedData["
1:eJwtkU0og2EAx5cLe0kI4bBF1ChKshzwj+XjQNpchIMWLmRDUpaygyzDlI81
xMoohfJxWLuQIvk4auXiebe973wM7z5wsAPv0/uvp+f2e/6//5OvN+j6EmQy
mfL/iHc/DQ/vaEvFfccTGO+2sYYJYlLuccZ3CQ6b2InMwyBSOMutHgQ6t2L6
TfsMg/ynqz2b4FvVbbv4esZDK6Mz3RCsOcS8oGfZorl0EtRQ4CuMUc/t8SkL
kdbEvkL1WFrVueHDP0wkIsikHyV2+VAs4lQhmBsTR/dDftzfiQkh9cSesajg
MEyB72h3DwVXNzlk0oIfGMw5eyso4kHruT9QXSZca+w8KK77E7kuh6VnlYeM
RsCMupA9H+QlHwHqSnlylouHyyg+IMBm3JoSbLzkJyA/bWA8UM+jmQqEobTP
tv1aOck3DGtSy7THH0CI6oQR2VObV6oCkn8ESotJu7ngB61ji2BsXWMd2/JJ
e0Qw0lDw49SzqKCJwj+X96vgiLRPFAcl8wu1iwT0e7xROJbL49olIu0Vg/lT
H18pITDRQWK4qustZyqJtF8MO7UxprGe4A8al/2G
       "]], {{
        LineBox[{{0.7, 0.7232644942019133}, {0.7, 0.22940560152132977`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.7232644942019133}], 
          Offset[{-1.5, 0}, {0.7, 0.7232644942019133}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.7, 0.22940560152132977`}], 
          Offset[{-1.5, 0}, {0.7, 0.22940560152132977`}]}]}, {
        LineBox[{{0.72, 0.7752406523753105}, {0.72, 0.26933658568915}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.72, 0.7752406523753105}], 
          Offset[{-1.5, 0}, {0.72, 0.7752406523753105}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.72, 0.26933658568915}], 
          Offset[{-1.5, 0}, {0.72, 0.26933658568915}]}]}, {
        LineBox[{{0.74, 0.7431557034216977}, {0.74, 0.2736338760867085}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.74, 0.7431557034216977}], 
          Offset[{-1.5, 0}, {0.74, 0.7431557034216977}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.74, 0.2736338760867085}], 
          Offset[{-1.5, 0}, {0.74, 0.2736338760867085}]}]}, {
        LineBox[{{0.76, 0.7559231931270136}, {0.76, 0.29558166164517946`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.76, 0.7559231931270136}], 
          Offset[{-1.5, 0}, {0.76, 0.7559231931270136}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.76, 0.29558166164517946`}], 
          Offset[{-1.5, 0}, {0.76, 0.29558166164517946`}]}]}, {
        LineBox[{{0.78, 0.7631436089303689}, {0.78, 0.3339026228291222}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.78, 0.7631436089303689}], 
          Offset[{-1.5, 0}, {0.78, 0.7631436089303689}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.78, 0.3339026228291222}], 
          Offset[{-1.5, 0}, {0.78, 0.3339026228291222}]}]}, {
        LineBox[{{0.8, 0.7389998510276337}, {0.8, 0.31310394838816175`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.7389998510276337}], 
          Offset[{-1.5, 0}, {0.8, 0.7389998510276337}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.8, 0.31310394838816175`}], 
          Offset[{-1.5, 0}, {0.8, 0.31310394838816175`}]}]}, {
        LineBox[{{0.82, 0.7811165199933744}, {0.82, 0.3967678307110097}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.82, 0.7811165199933744}], 
          Offset[{-1.5, 0}, {0.82, 0.7811165199933744}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.82, 0.3967678307110097}], 
          Offset[{-1.5, 0}, {0.82, 0.3967678307110097}]}]}, {
        LineBox[{{0.84, 0.7980366918043085}, {0.84, 0.42789570606806776`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.84, 0.7980366918043085}], 
          Offset[{-1.5, 0}, {0.84, 0.7980366918043085}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.84, 0.42789570606806776`}], 
          Offset[{-1.5, 0}, {0.84, 0.42789570606806776`}]}]}, {
        LineBox[{{0.86, 0.7716099788298819}, {0.86, 0.44193559471825666`}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.86, 0.7716099788298819}], 
          Offset[{-1.5, 0}, {0.86, 0.7716099788298819}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.86, 0.44193559471825666`}], 
          Offset[{-1.5, 0}, {0.86, 0.44193559471825666`}]}]}, {
        LineBox[{{0.88, 0.8113090826622452}, {0.88, 0.4833256586116456}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.88, 0.8113090826622452}], 
          Offset[{-1.5, 0}, {0.88, 0.8113090826622452}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.88, 0.4833256586116456}], 
          Offset[{-1.5, 0}, {0.88, 0.4833256586116456}]}]}, {
        LineBox[{{0.9, 0.8576024995490267}, {0.9, 0.4978929588890451}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.8576024995490267}], 
          Offset[{-1.5, 0}, {0.9, 0.8576024995490267}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.9, 0.4978929588890451}], 
          Offset[{-1.5, 0}, {0.9, 0.4978929588890451}]}]}, {
        LineBox[{{0.92, 0.8499414894734644}, {0.92, 0.5095268876793178}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.92, 0.8499414894734644}], 
          Offset[{-1.5, 0}, {0.92, 0.8499414894734644}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.92, 0.5095268876793178}], 
          Offset[{-1.5, 0}, {0.92, 0.5095268876793178}]}]}, {
        LineBox[{{0.94, 0.8642860117152869}, {0.94, 0.5210812109627108}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.94, 0.8642860117152869}], 
          Offset[{-1.5, 0}, {0.94, 0.8642860117152869}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.94, 0.5210812109627108}], 
          Offset[{-1.5, 0}, {0.94, 0.5210812109627108}]}]}, {
        LineBox[{{0.96, 0.874056947699562}, {0.96, 0.5354141057302382}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.96, 0.874056947699562}], 
          Offset[{-1.5, 0}, {0.96, 0.874056947699562}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.96, 0.5354141057302382}], 
          Offset[{-1.5, 0}, {0.96, 0.5354141057302382}]}]}, {
        LineBox[{{0.98, 0.874785618961728}, {0.98, 0.530831170338426}}], 
        LineBox[{
         Offset[{1.5, 0}, {0.98, 0.874785618961728}], 
          Offset[{-1.5, 0}, {0.98, 0.874785618961728}]}], 
        LineBox[{
         Offset[{1.5, 0}, {0.98, 0.530831170338426}], 
          Offset[{-1.5, 0}, {0.98, 0.530831170338426}]}]}, {
        LineBox[{{1., 0.8630903358647128}, {1., 0.5309413452164146}}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 0.8630903358647128}], 
          Offset[{-1.5, 0}, {1., 0.8630903358647128}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1., 0.5309413452164146}], 
          Offset[{-1.5, 0}, {1., 0.5309413452164146}]}]}, {
        LineBox[{{1.02, 0.8835096691127334}, {1.02, 0.5374574439904376}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.02, 0.8835096691127334}], 
          Offset[{-1.5, 0}, {1.02, 0.8835096691127334}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.02, 0.5374574439904376}], 
          Offset[{-1.5, 0}, {1.02, 0.5374574439904376}]}]}, {
        LineBox[{{1.04, 0.8842809836326398}, {1.04, 0.5342872825503434}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.04, 0.8842809836326398}], 
          Offset[{-1.5, 0}, {1.04, 0.8842809836326398}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.04, 0.5342872825503434}], 
          Offset[{-1.5, 0}, {1.04, 0.5342872825503434}]}]}, {
        LineBox[{{1.06, 0.867313355976586}, {1.06, 0.5250968840217565}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.06, 0.867313355976586}], 
          Offset[{-1.5, 0}, {1.06, 0.867313355976586}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.06, 0.5250968840217565}], 
          Offset[{-1.5, 0}, {1.06, 0.5250968840217565}]}]}, {
        LineBox[{{1.08, 0.863738734130194}, {1.08, 0.5030228980753946}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.08, 0.863738734130194}], 
          Offset[{-1.5, 0}, {1.08, 0.863738734130194}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.08, 0.5030228980753946}], 
          Offset[{-1.5, 0}, {1.08, 0.5030228980753946}]}]}, {
        LineBox[{{1.1, 0.8364600427046248}, {1.1, 0.500959463498648}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.1, 0.8364600427046248}], 
          Offset[{-1.5, 0}, {1.1, 0.8364600427046248}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.1, 0.500959463498648}], 
          Offset[{-1.5, 0}, {1.1, 0.500959463498648}]}]}, {
        LineBox[{{1.12, 0.831800757884984}, {1.12, 0.4859984948981347}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.12, 0.831800757884984}], 
          Offset[{-1.5, 0}, {1.12, 0.831800757884984}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.12, 0.4859984948981347}], 
          Offset[{-1.5, 0}, {1.12, 0.4859984948981347}]}]}, {
        LineBox[{{1.14, 0.8329233561335684}, {1.14, 0.45750182137301093`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.14, 0.8329233561335684}], 
          Offset[{-1.5, 0}, {1.14, 0.8329233561335684}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.14, 0.45750182137301093`}], 
          Offset[{-1.5, 0}, {1.14, 0.45750182137301093`}]}]}, {
        LineBox[{{1.16, 0.8118681943771998}, {1.16, 0.416751142785639}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.16, 0.8118681943771998}], 
          Offset[{-1.5, 0}, {1.16, 0.8118681943771998}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.16, 0.416751142785639}], 
          Offset[{-1.5, 0}, {1.16, 0.416751142785639}]}]}, {
        LineBox[{{1.18, 0.7535351679351154}, {1.18, 0.36205916541210936`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.18, 0.7535351679351154}], 
          Offset[{-1.5, 0}, {1.18, 0.7535351679351154}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.18, 0.36205916541210936`}], 
          Offset[{-1.5, 0}, {1.18, 0.36205916541210936`}]}]}, {
        LineBox[{{1.2, 0.7639548402710648}, {1.2, 0.31654303220811675`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.2, 0.7639548402710648}], 
          Offset[{-1.5, 0}, {1.2, 0.7639548402710648}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.2, 0.31654303220811675`}], 
          Offset[{-1.5, 0}, {1.2, 0.31654303220811675`}]}]}, {
        LineBox[{{1.22, 0.7299609980091029}, {1.22, 0.3066594727201048}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.22, 0.7299609980091029}], 
          Offset[{-1.5, 0}, {1.22, 0.7299609980091029}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.22, 0.3066594727201048}], 
          Offset[{-1.5, 0}, {1.22, 0.3066594727201048}]}]}, {
        LineBox[{{1.24, 0.7759004927420258}, {1.24, 0.2603191227170535}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.24, 0.7759004927420258}], 
          Offset[{-1.5, 0}, {1.24, 0.7759004927420258}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.24, 0.2603191227170535}], 
          Offset[{-1.5, 0}, {1.24, 0.2603191227170535}]}]}, {
        LineBox[{{1.26, 0.7274943435628728}, {1.26, 0.2811594808201999}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.26, 0.7274943435628728}], 
          Offset[{-1.5, 0}, {1.26, 0.7274943435628728}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.26, 0.2811594808201999}], 
          Offset[{-1.5, 0}, {1.26, 0.2811594808201999}]}]}, {
        LineBox[{{1.28, 0.7562625259916175}, {1.28, 0.2691591650418954}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.28, 0.7562625259916175}], 
          Offset[{-1.5, 0}, {1.28, 0.7562625259916175}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.28, 0.2691591650418954}], 
          Offset[{-1.5, 0}, {1.28, 0.2691591650418954}]}]}, {
        LineBox[{{1.3, 0.7453309682815096}, {1.3, 0.27766061806591413`}}], 
        LineBox[{
         Offset[{1.5, 0}, {1.3, 0.7453309682815096}], 
          Offset[{-1.5, 0}, {1.3, 0.7453309682815096}]}], 
        LineBox[{
         Offset[{1.5, 0}, {1.3, 0.27766061806591413`}], 
          Offset[{-1.5, 0}, {1.3, 0.27766061806591413`}]}]}}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0.690625, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.7, 1.3}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{3.8684724629782534`*^9, 3.868472684926017*^9, 
  3.8684727974183655`*^9, 3.8684733927577467`*^9, 3.8684735139722815`*^9, 
  3.8684770100866895`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Quiet", "[", 
  RowBox[{"RodeoCombinedExpectationPlot", "[", 
   RowBox[{"\[ScriptCapitalN]Dist", ",", "10", ",", "1", ",", "1", ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"-", "3"}], ",", "3", ",", 
    RowBox[{"1", "/", "100"}], ",", "True", ",", "Default", ",", "Orange", 
    ",", "50", ",", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"RodeoCombinedExpectationPlot", "[", 
   RowBox[{"\[ScriptCapitalU]Dist", ",", "10", ",", "1", ",", "1", ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"-", "3"}], ",", "3", ",", 
    RowBox[{"1", "/", "100"}], ",", "True", ",", "Default", ",", "Orange", 
    ",", "50", ",", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"RodeoCombinedExpectationPlot", "[", 
   RowBox[{"\[ScriptCapitalA]Dist", ",", "10", ",", "1", ",", "1", ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"-", "3"}], ",", "3", ",", 
    RowBox[{"1", "/", "100"}], ",", "True", ",", "Default", ",", "Orange", 
    ",", "50", ",", "5"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8678679532361307`*^9, {3.867868115306755*^9, 3.8678681157802687`*^9}, 
   3.8683649148246155`*^9, {3.8683804454256487`*^9, 3.868380448121879*^9}, {
   3.8683804794101257`*^9, 3.8683804874099092`*^9}, {3.868438971488323*^9, 
   3.8684389737045755`*^9}, {3.8684396355569277`*^9, 3.868439658290913*^9}, {
   3.868439741291468*^9, 3.8684397488100166`*^9}, {3.8684408619142933`*^9, 
   3.86844087687391*^9}, {3.868447846847477*^9, 3.868447849095608*^9}, {
   3.868449645651148*^9, 3.8684496508184586`*^9}, 3.8685027825083904`*^9, {
   3.870380710030094*^9, 3.8703807135644865`*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny]}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[
     Tiny]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJxdmnuQ1WUZx/fswkpgUzmIjolRwwSGMU3plEP4aFNepjRA+wNGzCG1JjWM
LCcwLwWNMqQV4hDOMMWilcOswwyTl8oXZJWLaFyERSTasxd2Ybns5ez1LNru
fr/P9znnd0bnzGcO+zvnfb/v+zzf93nezy5aPO/uqoqKitzw//MrKyqG/+Nr
3Fa8N9ipua9ctqL9PHF9zQOzx9cHb++ZfvvTbwTX3pBfOrE2eN2fRl7BK9pH
Hhj80+Gn1TwQPPyw4ScG3zjyuBuCvzL6Cv7M6AODx4/+wODekZ/XUy0efVw+
+J09I6/gkdHOfSV448hwa4JHf97TwctGHrc0+J7RV/C80QcGjw53dvDlowMO
Hn3cxGC8B0OPsWLoEQw9gqFHMPQIhh7B0CMYegRDj2DoEQw9gqFHMPQYI4Ye
wdAjGHoEQ49g6BEMPYKhRzD0CIYewdAjGHoE4z0YelSJoUcw9AiGHsHQIxh6
BEOPYOgRDD2CoUcw9AiGHsHQo1IMPYKhRzD0CIYewdAjGHoEQ49g6BEMPYKh
RzD0CMZ7MPTIiaFHMPQIhh7B0CMYegRDj2DoEQw9gqFHMPQIhh7B0KNCDD2C
oUcw9AiGHsHQIxh6BEOPYOgRDD2CoUcw9AjGezDm/6NUPt/BmN9gzGcw5i8Y
8xWM+flQjPkIxviDMd5gjC8Y4wnGejonxvoJxnoJxvo4l3JkrIdzqZIM/c+l
ajL0Hkrnk6HvULq0TM+hZGX6DaWVZXoNpStypfoMpd9WluoxlO4YW6pHMd0y
oVSPYnrmolI9iumlL5XqUUzLf1CqRzH9aFepHsX0+9W5Ej0G0+opVSV6DKYF
U6tL9BhM93dOKNFjMBXPTSrRYzCt2z+jRI/BtG3zvBI9BtJ3H1lXosdA+tUb
k3Ohx0Ca950JlaHHQHpw25aq0GMgVVf+tTr0GEgbHto/IfToT9ef2DMx9OhP
C2tnTQ09+tORkw9fE3r0pz+2bf5x6NGf9nxs4ZbQoz89NnD0iznp0Z96D8ws
5KRHX3pi7aorq6RHX1o54+Urx0qPvvST5dXfHyc9+tKKi1+79ePSoy+997lf
5i6UHn3p4t88smOK9OhNi+9btfHL0qM3Lav42S9ulh69qeXMC7f8XHr0psen
jMu/JD1604MVSy4Ym3M9etOCFz7Y9GjO9ehJNXMev2ZmpevRk/Y8v2b61CrX
oyftfmxSw9IxrkdPGpy78M5bq12PnjRtcNPu+nGuR0+aO+2r02ef73oU0sP3
H/76m590PQqpbs31c7ZOcj0KaWh1bvdTl7kehXRq/t+WbJjuehTSTYtunPro
Va5HIRXeGrPptW+5HoV0wYc/fK443/XoTn++7badvUtcj+604WvXXXfvH1yP
7tRz+UNPXvoP16M7rbp7zHlv512P7jS5f9aLX7gwTz26U91VDcX6OXnq0ZXu
y28/8e01eerRlbr+vePQu4156tGVmifXrb/36kbq0ZXu6nnqrqa1jdSjK1VN
LV5SU9FEPbrSszNerPvn4ibq0Zl+va954bHmJurRmXa+ffSbt9/RTD2GP2/5
dLriSDP16ExvrZ/Z0fe9FurRmQrVXVdP+08L9ehMBxfvWzv4jePUoyM1bxr/
+Q21x6lHR3rizllPLvhEK/XoSH/51Ob9Kxe1Uo+O9Ltrh3KNz7dSj4500bL2
e5bUt1KPjlRTuOmSXT2t1KOD8bSN839Wn2O+z+rvMb9n9XzM5xl9P+bvjH4f
5uuMfj/m57TGh/k4nRn/ac0PxntK84fxndL8YjynNP9YT+3SB+unXfphvbRL
X6yPk9If6+Gk1gf0P6n1A71PaH1B3xNaf9DzhNYn9GvT+oVebVrf0KdN6586
aH9Aj1btH+jRqv0FPVq1/6DHce1P6HFc+xd6HNf+hh4t2v/QoyUTH1oUP6BH
s+IL9GhW/IEezYpP0KNJ8Qt6NCm+QY8mxT/o0aj4CD0aFT+hR6PiK/TIK/5C
j7ziM/TIK35DjwbFd+jRoPgPPRqUH+gzlD8w//9TfsF8H1P+wfweU37CfP5X
+Qvzd1T5DfN1VPkP8/OB8iN+/hHlT4z/iPIrxvu+8i/Gd1j5GeM5rPyN9VSv
/I71U6/8j/VySP4A6+Og/APWw0H5C+j/nvwHHndA/gT6HpB/gZ775W+g3z75
H+i1T/4I+uyVf4Iee+WvMP/vyn9hvt/J+LM98m+Yz93yd5i/XfJ/mK+d8oeY
nx3yj5iPN+UvMf46+U+Md3vGz24TYzxbM/75dTF+778yfvfVjB9/WYzv35L5
vs2Z59dmnvf3zN9vzPz79ZnPn8nwcnFF2UufW+bvLfP8zOcbxfx9mX9fK+b4
Mn+/Rcz5yTzvVTHnN/P818XUJ/N928TUN/P9deb6c32Yrw+uH/P1w/Vlvr64
/szXH9en+frk+jVfv1zf5uub69/Kzx97zfcH94/5/uH+Mt9f3H/m+4/708rP
HwfM9y/3t/n+5v433/+MD+bxgfHDys8fh8zjC+OPefxhfDKPT4xf5vGL8c3K
zx/vm8c/xkfz+Mj4aR4/GV/N4yvjr5WfP46ax2fGb/P4zfhuHt8Z/83jP/OD
lZ8/hn838wfzi3l+Yf4xzz/MT+b5ifnLPH8xv5nnN+Y/8/zH/GieH5k/zfMn
86t5fmX+Nc+/zM/m+Zn52zx/M7+b53fmf/P8T39g7g/oH8z9A/2Fub+g/zD3
H/Qn5v6E/sXcv9DfmPsb+h9z/0N/ZO6P6J+s/PzRZu6v6L/M/Rf9mbk/o38z
92/0d+b+jv7P3P/RH5r7Q/pHc/9If2nuL+k/zf0n/am5P6V/Nfev9Lfm/pb+
19z/0h+b+2P6Z3P/TH9t7q/pv839N/25uT+nfzf37/T35v6e/t/c//N8YH4+
4PnB/PzA84Vlzh/ShecTfc7zi/6e5xs9n+cffT/PR/p9PD/p9/N8pfHx/KXx
83ym+eH5TfPH853ml+c/zT/Ph9KH50fpx/Ol9OX5U/rzfJpZH11aPzzfan3x
/Kv1x/Ox1ifPz1q/PF9rffP8beXnj4L2B8/v2j8832t/8fyv/cf6gPYn6wfa
v6wvaH+z/qD9z/qE4gPrF4ofrG8ovrD+ofjD+ojiE+snil+sryi+sf6i+Mf6
jOIj6zeZ+Nmr+Mr6j+Iv60OKz6wfKX6zvqT4zvqT4j/rU1Z+/uhX/mB9S/mF
9S/lH9bHlJ9YP7Py80e/8hvrb8p/rM8pP7J+p/zJ+p6Vnz8GlH9ZH1R+Zv1Q
+Zv1ReV31h+t/PwxKH/A+qX8A+ub8hesf8p/sD5q5eePovwL66vyN6y/yv+w
Pit/xPqtlZ8/huSvWP+V/2J9WP6M9WP5N9aX5e9Yf5b/Y31a/pD1a/lH1rfl
L1n/lv9kfVy+g/XzjJ8NZv1dzPq8mPV7Mev7Gf8czP5Axo9/lPHPwew/iNmf
ELN/IWZ/Q4z3imvLxxPM/omY/RUx+y9i9mfE7N+I2d8Rs/8jZn9IzP6RmP0l
MftPYvanxOxfidnfErP/JWZ/TMz+mZj9NTH7b2L258Ts34nZ3xOz/yfGe6WY
/UMx+4ti9h/F7E+K2b8Us78pZv9TzP6omP1TMfurYvZfxezPitm/FbO/K2b/
V8z+sJj9YzH7y2L2n8XsT4vZvxazvy1m/1vM/rgY72PE7K+L2X8Xsz8vZv9e
zP6+mP1/Me8HiHl/QMz7BWLePxDzfoKY9xfEvN8g5v0HMe9HiHl/Qsz7FWLe
vxDzfoaY9zfEvN8h5v0PMe+HiHl/RIz3ajHvn4h5P0XM+yti3m8R8/6LmPdj
xLw/I+b9GjHv34h5P0fM+zti3u8R8/6PmPeDxLw/JOb9IjHvH4l5P0nM+0ti
3m8S8/6TmPejxLw/Jeb9KjHex4n/D+HjtdY=
      "]], {}, {}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-3., 3.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{3.8678680204290953`*^9, 3.867868182401729*^9, 
  3.86838126112428*^9, 3.86838156180857*^9, 3.868481077189883*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny]}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[
     Tiny]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
9aNAc9dczZxxnvWiQI+e/mf215b9s0AjSlPu+uxgvyzQbf92rL7zJfOjQDvN
ib69P5L5UaD3tv7o7ejD/MjXjmmttsTWZ37k65CtJ9IqJXHeyFdHeI9qcZ8Q
j3zt/+NfE/9bnXjka3rzv6YGxSUDj3x9Zqq9sbFfMvDI00lfFPWY/yAJeORp
rveebWnrk4BHnjbqeuA/GUOTgEeeRl8OCFnZIAl45GndsEHfHH+UCDzyNCZ4
8snA+4nAI09rrH/4yZmCROCRqyUJHZterZMEPHJ1xcylK7a+mQQ8cjVkx9eZ
7eOSgEeu9vjq5273GiYDj1zdlXzk8u69ycAjVxs2rvHRqbeZHzk6rvad0ntB
xCNHlx+oXKfSfOKRo7viawQWlhKPHC0bWGVQ+JwU4JGjYZktl4X63wQeObq7
h3+7HTE3gUe2zj5Wpc7J1qnAI1tHb/v4i8YnU4FHtnZZHPTCtOFpwCNb637+
2x/db6cBj2wN6159aIfpt4BHtv41oNl6V8Et4PFQe3oGr/WLTAceD/XzgrWr
FyakA4+HOmDOpsORnTOAx0Mt+K7jkcrRGcDDfV0l6IPUYxnA46Haw7NLrqVn
AA/3/WaH2MDSDJz/A3320cKOdd3XFef9QIPSvmxz3v3zFef7QB9X9+w02X2/
ivO8r45Zba6umJ+B87uvk8xyR5uOGTiv+9rz2x92LrmajvO5p3mOEQO6jU/H
edzTL1+7Vtwgk+9/T+OC510Y/PYtvO9d/c/HLRqFnEvD+93V+CYJK/I7pOF9
7mrQxlH9x69JRTzd0Sqrwi77FN5E/NxRvVH948nDbyJe7mjXCa+UND2agvjI
0n4bPebHNk1BPGRp8bFp7evFMB+ztMaGU8e3/z3v3Nbi0XM/7f4y8+225tgJ
4xp+kAw8b+vEhydyJu1NAn6Z2tq7/rqy/2H+ZOovY/0nenybCHwy9fqisXcf
DmB+ZGpBjb1XYuomAo8M7RJZ7+cQRyLwyNDo462mlQQkAo8M7RlS2rFm+0Tg
ka4R7QO/Oz8lEXik68FJPb0Cf00EHun6XKUui8a3TgIet7Sg8XKn/7Yk4HFL
f9g18o+AZqwPt3TR7mXbR7rzqwKPNH0l6/xzWYbzTZrWW1Nn8uFznFfStHzD
4yFef/e/VF2yYcr5kImsr6m6alLOsZhvWU9TtW1I29CgP1k/b2rw9sxZIx3E
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
Q//V/wE2AKuM
      "]], {}, {}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[Tiny], 
     LineBox[CompressedData["
1:eJw9mnlczN0Xx2efkCwlIYSsJZLHknS/WctTVEqhtJAsWbMkFOrRogUttAiV
hB5LtiLuV0+KStoUNc3Svte0TNtUv/h9z8yLP+Y1031973mf8zmfc+/Mcjxm
7sSk0Wj0kf87GTTayD/qJUcumvzpbHU0HzWbpcz4p4lLtsXVfCg7z0elccfX
ji7lkqqXcq6p2fLRf90LbILTuaSe/ZUHjQZ89HSzyF3pKZesTRqnbqXBR5ER
v19ckvPh+mj7qXz0T9PvBbmksnjMicJxfHRiZLW441xSXstC6W95PhpZbGTF
ke/zXvauGM9Hhr+X28wlE4+E80qn8ZHOnxeXDFk29pzpEj6a+WdBLnk07nVA
2BY+Gv3nAblkUk58esgRPpL8frxuDqny7Lac5m0++rOciEP6JDyxW5zNR99y
f784JG9uZfZBpgD93q1ZCod8nenl92S9AMX/3m4ch1TfN78r3V+A/jxeMIcs
MVwj5/hTgM7/Xs6dQ/o9FjTuVBai/X9eHHJVwseD79YLkfmfBTnkArnLuY7m
QvRnu2s5ZOsX+d3EXiFa+GfDHJKMe8OinRGiP8spccgDCiddLf2F6P88OGT+
G23D7rtCigebLFz04N22SCHFg03qO1infQ0VUjzY5OFq/JdCsJDiwSY95gTg
X75CigebPLHD0VN6WUjxGPn7Z+P89roLKR5sknPLIEX1pJDiwSbnNl3u2XVQ
SPFgkzsTj6xdYyakeLDJPOuPBSe1hRQPNhlqalCkMlFI8WCTJXNKxTF1AooH
iywdk8kOfCqgeLDI6fGpY3e7CygeLHL7reTb5sbAg0Wmx4hNQucCDxY5Wsuu
dTQXeLDI3kU+G5zEfIoHi/xu6flRuYZP8WCRc+odabsr+RQPFqk6sWCiQQOf
4sEid4061Jfcx6d4sMj2C14uXooCigeLVFRvfH1ghYDiwSIDef6pKo4CigeT
dDwRc9LhpIDiwSSXWzivVxzJl//zYJLvZh/cn5MooHgwydrxX6etyBNQPJjk
xn67rz19AooHk1SZ5xtYNQl4MMkcf/Gph9rAg0m699/cv9AUeDDJo7Wx841O
AA8meV5/mbQ2FHgwyaRjjrtM/YDHyHrb/A8/9hBSPBhkNs04xPOUkOLBIB3u
D489dEhI8WCQjfUHKhXshRQPBhlvJXdaw1JI8WCQkYbaj6KMhBQPBll988Vb
h7VCigeDzBpm5ScthfpgkN/Q2TH8OVAfDNL7ydwa38lQHwxyi+/DK8fkoT4Y
ZIPFrZvnmFAfDDJpy51NJgPAg0EGsPS2DPQADzo5c9W6sEuxwINONpgaDuXs
AB50stRuaZNkEvCgk48Dr8nnCkGvRj7PuLcy6y3oFZ0MWTRFrBoFekUnlxo4
Pc7xB72ik/lHV+mGXAW9opMcxQ+B6kGgV3RygWrJs8n3Qa/oZHPh1CnSj6BX
dPJnQvn5PXWgVzRyRvXtmflToD5oZNoED061JdQHjdx/yXWHQRTUB410y5ll
fbMB6oNG8rJuKG1QAx40Ek/utevcBjxopHJQgt07L+BBIw9+zSzxeg88aOR3
B9fJq3uAB42cldfanrNCRPGgkXsE/Lta7iKKB43Uf1ffaflJRPGgkd7S1I5V
8pVU/Idxv6tUJb9QRMV7GL+MKWp6GSGi4juMTynE13nbi6h4DuMpr1YpDs0T
UfEbxkSveZ1SC+TvMB57xEpZnAz5OoRbfcVFUjfIzyEcsOFsRyWC/Q/hp+aD
6T5ysN8hHCUOrRQ/FFD7G8LeaUTa801Q7yPrpZtm+bZB/xvEKkms097x0O8G
Mf1lqLm9M+TLIA66Z9nmvBryYxCbDxgYh0yDfBjEIucho8MKwH8QK96+12Yw
EXhLcbFxq8Xi+dCPpNhxkWP9NBM+xVOKO5mBqUIv0DcpjruRtdssB/RMiicG
74pcNUdA8ZHiLcZ6pQ7XoD6kuHraLJRBh34xgNXrhRM0myD/B/D1MwsdXPig
PwN4otHse8U8AcVjABtydcI6awQUjwHsbuYUaz6iV//nMYCD5FtZ68cAj368
tdl0U9AM4NGPn0k75HauAB79eN91ybET5sCjH6dE/IhOPAn51o9t/CO3FIdD
vY/8/fPxmt8/Qv/rw+T2N2pnGqHf9eGbqWM+PJkionj04eWvHnywMhZRPEY+
X3dp0qoxIopHH963VXx3Sg7oYx/eP9lGPSIA9LAXOye7m9wxBf3rxQcbE2aa
qYDe9eI8jXlbzbKh//fiW+qSWXtOCCgevXip6Skj/gLg0Yt3lgS2R3TyKR69
mKt2KvxnEfipHszU831XYQf+qQfP3hwpd50O+tODv/i9aXZOraB49OBNY5NK
z/lUUDx6cNLf0mkXDldQPHowK13sMdqpguIhwWl38tgfXCsoHhLspPx5odKt
CoqHBE8+uu3Vm7wKiocEx7bUajlMhf4owXdfjhqqPceneEjwwgV+3CUtUB/d
mPW1mjQ6BfrajdNQ+7J7XPAb3Xio2+35dDvoZ93YOS/4aiAJ/asbrw+zjbw/
wuf/PLrxoaDspX4zRBSPLjzV7pXjTV0RxaMLOwwMZHFtRRSPLlznNuWGqp+I
4tGF+X7Ke2s/iCgeXdjj3Omk7QOgX104dX7IEUWDSopHF045cZ8fFwR61YmH
Lqu6RG+vpHh0YjfvFQXPVSspHp04Rq0jbkkj6FUnzg/3fGqeBnrViRV9Prrq
h4goHp14gm1G4foXUB8dmJwXdPZBAuh3B/Yxt5TW9wGPDvzdS1I17MijeHRg
rRmrE8LqyigeHfi47WJF4bVfFI8OHBKrkXPE/CfFQ4xzdBemrdQrpXiIsZqD
1+sqwxKKhxgv+WuDx4yzPygeYtyXtblFklFM8RDjsQ1b+RpLiykeYvz0r9Xq
B98UUTzaseL1ztiDlkUUj3as7DLHVnlMEcWjHXdGP7YI+1FI8WjHj7qcKw1f
FlI82nFzwW2tH7GFFI92XKrgETw9rpDi0Y7d16fd1R75/v/j34YPD1TzfQsL
qXi34eSsJ0petCIqvm3Yo0l8sVuviIpnK9ZLWWpf4FNExa8Va78rG6srKqLi
1Ypv6758c9WomIpPC1b8YtFl/KmYikcLTpj4PtHR6Ae1/xZ8OIqnX1H5g9pv
Mz7OjQmaGlxC7a8Z79+iYP95Wym1n2b8r1mxWcu8n1Q+NeHYw6ZklfIvKn+a
8B3B0QTj2WVUvjTh7PHcKeONy6n8aMSnEvsVuLd4VD404oJvqESdA/XYiD2v
mT7KjAK/04D/8bbqT0+CemvAvjXOVb/ugt41YD3b5UWDwVBP9Zhva+/YFgr1
U49XrRxTo5IM9VKPv752llo0QD+vx47XwtiNulAPdZiXrypKw5D/dbi81DPk
hw3kex0W2n7zfDNRRPGoxWfV7itME4He1+Jo7CJFWaDvtfhFhPxbbgboeQ3e
l5hqM7cE9KIGf4gdnP+3FPS6Bt96WDT24QfQ52ps6FRnsssC/E01Phm89Lh8
D+hvNV4XhTMcnMAPVuHP90NMWsWgr1X4jejbdKUo8GtV+MeZkAscO5gXK3Hy
jAZzph6f4lGJZzQPDu9YCjwq8a53s2ae0wU9FGGnlMRdajvBH4jw9U3LypZd
Az8gwo8W9zAqvkP/F+LvBfZ7b84D/ybEVyOk00YFQz8R4uNr6/e8YME8KMTn
b2Ut7t8C84AAX75QKk/OgX7Lx7pyZkN7uBBfPtbRC378vllAxbMCz3a98/pr
JfhJHvZ/c3/Mfx0QLx7etcBLeH8czIflWLL7Arv/L9CvMpwnH/2t4yj06zL8
5UZdLuMj5N8vvOXyHcvv8yHffmKnav1J2XfAX/7ESl7zJQ+Ww3xaime7+NWo
fgM/UYrT82abdtsIqHwpwWKtgup/x0N/+YHVjuzYOq4S/NQP7KtxW+qRC/6o
GDt+H6fyJBf6axEWbKG5nBAC3yJ8la+RfZMD82Mh9vxU/+GtPtRTAbZMXLfV
wk9A8SrA61LrDpfWAZ98PFWwViVEC3jk4/DmiLzFZyD+eVjh171PCzUhf79h
63mS0OstEN9cHM9caNYeC/4+G1t3Glv89g//j99XPFZXFe/YDvy/YGta7oTQ
DRCfLBzmdZhJGkA8PuPvggkuKwzBj2TgmJvq335Zgl/7D6fJT9YWH4D9fcJ7
Vct+KlyC/ZC42MvKrTMC+tFHnD6rXif+NTxvGtYi1mrOL4TnS8WrpF51Ua3w
PG+xnMhmlxIb6u8V7ov5qd4zAfzaCzx7oYnXlekQn6d46AlHY+Z8yJdHOGng
ziNtLfj7eGwfqMrjacP3Y7BW3RlnjjZ8HoqXFgsvqi6C9944Y/BmeNNU4EGj
6TdmlXFpss/Rk39vBOvI/Foo0hLLPct5AvuNQc1P2zazYuDzePR8eFBiEQ37
fYSu7nM1eRgH33+K9O07PLNeQDxfoOltb3xHf4a/f4WUEo7PVeTJ4oPOByzW
L+2WxQ9N0OgWZMjBfJuGnPy7g1qUYb8fEXFy2EhrLvhNEp3CmT1cHYjnJ3T+
kE/0MIJ5/z9UH7xAM/hv2G8Gap38VKBiCXr6GXk8sVzQuBvmpyyUOTHBZq4d
1OMXdKD4tOV7W+DxFWU8XetmvQPqPRvROIYhFpvheXPRNQUtdT8tWX4jA7Fr
wupRsvxH2x8+3pj8EOaPfDR1+ZWrDxRl9YPWPwq+PCdOVl+orb5ylKI87K8A
RbqtN9+1BuaFQmSkaeH6yB72W4RsaFn30y7APFOEElge2l+DYf/FaO/x6sSn
EdAvfqCUVFXbLxEQjx/IjbVMbSgI+lEJ2usY8yPpLMSnFOkc2fLG30ymT6g6
N9r19BSZfiHyrA3G4XCe9RNt675gcjYD9P4X2uryF+HyvAL0ERmWSwKkXtBP
ylB2gNk/02bDvFWOWk98SJYPlekvejzb8yMWyvQZeQkro+9yIN4VqP9bX3aM
gkzfkTRiND1OFn8+6lI0iVgvhvlNgAy+pWT+kwI8hIhZccBm/CFZf0Gl+/3M
EySy/oO63pqdubgK5iEh8h5a9CjNBfy6CFlrVfKUb0O+iJBoR/4tl3fAT4SG
5gYnni6C/lCJEguX2H6uBJ6VKKMtO7W0DvKrErkcv+9DqwS+VSizqWTdxXzo
P1UoW235gzPJwLsKDa0ePVPeB/KxGrnuOLbc1ETW/1HhtK1dx1gyf4Cuqxl/
MrESgH9APazmnJfeMK/XoNZbyb2HuTDf1yC9ssy8j9th3qlFsYcyRcNn4Tyx
Fm19rGTjdYIP/gYZK7UZF66F85w6dFvr3Mn4MpjX6lB3/0CY3aYK8E9IVVP6
LvASD/wVWmZNuq/0Lwf/hUKzE0xtF/PAn6HobHuvoige+DcUmOMh0ijhgb9D
V9tea7CFPPB/6FlYp/JOkgf+EOWObqn2SpD5R+QfeUU4fRnwaETWZW6LWqXA
oxElaYTOuPgK5pkm1Oh4XmFoJ8w/TUjv69+Ty1thXmpCbz3X6904VQX+F6Vs
TzsU0FwF/hgVl1+smm1dDf4Zdbe3PHRLqQZ/jTr9NnlFK9SA/0am+Y/vW+2u
AX+O1DVSh+3u1oB/R+fKkkw2lNeAv0fuB+KHD42rBf+PNK3Gm8/Qq4X5AG26
FRPu71AL8wMKz/5HO9OzFuYLNHP1vK8Z4bUwf6AF2xm2BxNqYT5BDYJaq9NP
a2F+QYWcvcORI++p+QYFVyvGOox8n5p/UMnqQZFuWC3MR8j9/I0l7u61MD8h
hQtdHmaWtTBfIXXLvan56rUwf6HKDxsbWuogHmLUy+zx9rlTA/Mb+q9dz9t1
A8RHjMiGfklweTXMfwhdMRbVOFTDfIjOJY9zzi6pgvkRRdzd3TVBtwrmS3S/
dCJ7RUAlzJ9oHmv+80t54N870OMj1yfJM0UwvyKXkG1h/2qCXnaifGSmdu4O
+KtOtOrw1Tnev3gwH6ObFmfm2PjwYH5G+04tPxyvwYP5GlX+OjYUl1kO8zda
duFF31frcpjP0eZW/db3lWUwv6NQI/a+XxehXrrQhvtnL+8exYP5Hz1Rnta7
1hvqpwutVL68LaeFB+cH6Llzolfnxgo4X0C7UcwboX8FnD+gx0Z6OuL0Cjif
QEN666I/1FfA+QXa/2Blcp0H6H034jtGef+Q+bFuxJl0hU62gz/oRv01LR/K
N4JeS5DaoeNZB/xAHyVow99D/fL/QT+SoNzcgNMFHVCfEuS0z7nvgQrwkKDL
rI2J55YDDwnqKmgwnL8J5q8exNnHPXLBBOq3B23O2W66eQvMaz3IItaBZqQH
5689KKa3VXvrHDif7UFd/3l6rR4Gve1Bzzeut1LKB3/Vi95/S3OfHA7624se
zsg+ufwq9Mde1DHLccmNw6DHvah5f+Yns82y8zPUOHPU6p9TZedrKP6i3Wj7
79BPe1HQbcn13D2g133otPPpk3m1MD/1IVvHpdLvB0G/+1DXnJIpNxsq4PwP
2e0KernduQLOB5H3mUudT3Ir4PwQeV99N6ioAfrej8ars+scroA+9qP99zoe
WRWC3o+813Uuej4V5oV+lMt0ma62G/xgP+K/PutgGgJ+vh/tyo42qUmXnY+i
guDMAxcaZOenKE/9tWQHE+a3AaQz/QrJGQv9bgD58kKjwiaA/xhARa7PVmeP
l53folOH5106NBp4SFGgeaG1m1R2/otuX6ivMdUFHlK0f4ZVw76jwEOKDDeG
9lpHAg8p8vUwsJvwEXhIUdJ8zWWnfkH/l6LwE5NOH2wGPzWIUuSmXhFJwA8M
olkud/zzesGfDCJ+5CUVvQ7wB4Oo/ey9MLMq8F+D6Og4RqBFLviFQbSE9tkJ
/wv1MYTsD/Kka3yhPoaQ+r+1iok2svN7VB6aESGnKTvfR0lGwviWVuAxhHR8
AoLXXAIeQ8i0YX0/RwF4DKP1re/vqUWCXo04aVbmmp9z4T5nGGmduqDHSa6A
+wmk/C1w/qA+9O9hFL7ulPPtEV9G3W+ghbOmjLXfBf2cRmQoLyi9XVcO9yPE
Pb6ajvVFHtyfEB8ui3sfjAF/SCNKvw34HLpZAfcvhMS9rTJ4AuQfjaC5TFo8
4AvzLY3gzLaqu9YL5xE04oDR6MKp9rL7H8J75XKTc1h2P0QsrbuguWoM8KUR
bq9aUu2WQb+nEcKrRbsULIH3yHpOl/2muIK+0wnfEsQzCwD+dGLsvTBtr3vg
1+jEAgXal9PPIB/oxHjJTIvOFMhvOiF/B316nwb5QSfqdRb63X0H+T7y+a1H
L1yTIV/ohNrfmV6q8ZD/dGJly+KLUcGQP3Qiqv+HD+c01AOdiBR8+hVlAflE
J4IDgt1J2XzOIKpj4xsYLNn9IVF90aFgJ0N2v0g0lBhtGdsH90EMYnyKdt+s
OvDHDMJz691PrflwHsEgrj+S37YpBeY9BvFYoqOTGAP6wCAGouy2on+Ax8h6
s4/H5bgADwahvkPF8pHsPo9BROtYuVciyFcG8TZ94RxNDdBDBuHLD1ahT4b8
ZRKP9x6IecoAfWQSu0rHeDm2QD4zidHZcxeuLAG9ZBK0v7wGjk+HeYBJFDx/
9OtfOzgPYhJDNpkdL6Jl98/Eju1udXrFsvtpYtu6NcEsJvBgEr5hm+m1KsCD
SYydj2MiNYAHk6hKKk7v0QUeTGKj0fuN+ZuAB4tYtPGv0d1bgQeLKO7zvPxt
H/BgEc2H7i0nzkD9swgFD0HsPC/QMxbxuk8j3O4a6AGL2HdM90txEOgbixhX
Pyg8Ewj6wCKiZ7xfuM0H9I5FpN8ghecvwLzEIpYElrasPAL1wSLOzWi9VboT
6oNFLGXbZhaug/pgEaZG1QveLZD9voHIrjEu0ZKX/f6BoPkoXcwvB71nE7ds
Q1/MuAPzLpu453kt4Jot8GATanJnw00WAw828VJc05szDXiwCYUX+o/XjAEe
bGLxTV6jnBTui9jEpY/jSeNWmF/YhIFl0qFaEZx/sYk3ZHT30RI4n2QTqq+2
6+/LgfsoDiHnkGOoQkI/5BBbg4SxVk3wewgOYTTQ9IyuBPXBIVStvnteXg31
wSH2dNs06u6G+uAQP+MMOQFust/HEI5zHS10imS/nyHqt6QOpCkCDw6hh8W5
MbrAg0NIogOPauwBHhxi4W5TX2MP4MEhmlktto2RwINDjGtc9KbpJfDgEnH9
d5pXfgUeXKKpbR87tQz0iku8nbD6pG096BWX0DcKdFPuAL3iEkPJfhdre0Cv
uMSiUR17eX2gV1xCU36Bvkov6NXI+88hWws7oD64xODDmGZL2f0kl3gwHOQ9
RgD1wSUMDbJVjxdAfXCJOauc6ErpUB9yxEzXrBf+L4Tof7xSA7s=
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-3., 3.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{3.8678680204290953`*^9, 3.867868182401729*^9, 
  3.86838126112428*^9, 3.86838156180857*^9, 3.86848108243513*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny]}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[
     Tiny]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
rZuVPcCjUAsunGlfPYf5UaDP1ZuYG/w786NA7+0aePXb1cyPAl11rsexFuOZ
HwW6ff3/Ju1qzvwo0IjJ3z0Kuk08CtQET/CbG0k88nXt6iZpex84gUe+Ju4d
OSv4EyfwyFf3H217vFCO9TNf18m1IdVWXwUe+dqh4Z+Fy5teBR75alOuFGaf
SgMeebq2Z8eMFXPSgEeeTu2/svWuVmnAI09XSZm9sx6nAo88PZp3avqvV1KB
R562d4yr1PxUKvDI05oHFpRtez4VeOTp2AGzXdm5qcDjvrZo39RUaZgGPO5r
9KQ7C4NnpAGP++pzftzYhslpwOO+9qr4XN/Lg64Cj/t6tkt4XnT2VeBR+v2P
dxPrr2R+3NPVQbsm9oxg/b6nuj9nxL8Dicc9bVXx6JqBnxCP0n9/LNodUkw8
7mlR8dwdh2Z5gMc9PVMxMfz7Ig/wuKshXY6ubTI/HXjcVb9zfw866H0NeNzV
6MwRcfFLrwGPu5qZGKS1y2UAj7taL7n5/onLMoDHXW3xXc0XTzsygUeu3qs9
/ejaaZnAI1djH+/cFpaSCTxytdJfZwY3bJcFPHL15RmuqiWfZgGPXN31W+uk
6JNZwCNXZ+WseX7bkyzgkatts+Z1jGlwHfd/R/cf3ndj4WvXcd931Dejxkdl
w6/jfu9oSviZt2+2vY77zNFfX+65/aWa13F/Odq/+2d73H9n4b5yNK/vtqR1
O7JwP39rq3W9r5QZn4X7+Fsv9bi36Un5LJz/b01bMm322nie97YuTpw2snHL
TJzvts5tkvh10K4MnOe2/vpDbJOyr2Qgnm5pmP/g+3u+v4b4uaWbu79avbjs
NcTLLf33KyW++6enIz5u6pSd7VvnpngQDze18uZDX8SGe4D/Tb10qq87fiv7
0w0NjAlrVaYm698N3fZVn/3tanNev6Fvrjy/Q6pzvsjWR72nuqfUuwq8sjVz
p1fWnm5pwCdbb2Uu9U2MYn5ka8nlqTW3XbwCPK6rV3RQyNheV4DHdc2WOStf
S0kBHtd18UZntdqfpQCPLE3q1fHIzCEpwCNLQ9ZPutS+ZwrwyNJaM49FuQal
AI9Mjf2i4q5JC1OAR6b6T+5+ZvLxFOCRqVGnu9f1D70CPDK0y/D4OoU/XQEe
GbrIM/fVn9ox3zM0IjSuWqMrzO9r6nvJvjDgf5jP1/SrH+M9Sf9i/l7T4Cy/
uPyqzNd0HR806WGfdPavdI1789O3a+3g/pCuFQbtfiGzM/Hw6Irp4Uvf3UA8
PNpnxYLmI708wMOjHbRWWOthHuDhVocd/ucHWz3Aw61zZ0dW+O0++4lbvxj6
3eSClunAw62jEmv0efnddNy/S9d/3XtL1OfpuG+n7t93oeaCTem4X2dpvvXc
cGJ3Ou7zqkaNnLS/x9503F+ajmu6M+L5bem4rzTd0WPOn9Gr0nE/qdqnpqNR
6DTG5xVNTTBlj3RJx/mvaNbV1S+Fl0vHeVM0pEL4VweP83zJ6r377JEFUTxP
snaI7b8oozn73WWNH+f3xeRUzneXtdnORckbF7P+XdKqdxqNaR7C+euixvSf
cK3fD5ynLmrN3Z3mDb7L+eiCBnneGhLfk/POee3RdVHUa5uI73mNaxpu86pc
BZ7nNLDWKy9MLo2Hf/D7S1vPWRlWEJQGvP7SWnM2D4zdmwp8zuqpmLMR+e8z
P85qz1Xuo8PapOL+T+vsneELN1VNxX3/qTtHHnkwoALj8ZQWLq26fdyLqbjP
kzovrX23BeGpuL8T6vWw0qHz89m/juvnTWV6mzOpuJ9jmj02bU/lNmm4j6O6
ac39D+ZtScP5j2jS9IuF4S143sO66w2/FelJV3G+Q/rhHyvPbhzlxHmslhn4
+odbfNiPDmrk9fQJN7ZyH/5VN8wPK9oYwnjep4lN/SNGLSBeezVqYtag2DPc
937RiE05t8/WYj/aocEtJz+3aZwHz0/QSBne8eRPHjxvs14bXn90eRfnqXh9
Pzzp9dGVGc9xOnfi49nZbdPx/Sr9rfW4G7kD+PMSnXfmyfzCMcwPh+OHI1Ob
b5/wf98Lv8fvC38fz5f///x44f+P9xO+H95f+P44n/B8OL/w/Lgf4f3g/oT3
h/sV3i/uX3j/wEeID/AT4gd8hfgCfyH+iA9hfCB+hPGD+BLGF+JPGH+IT2F8
In6F8Yv4FsY34l8Y/8gPYX4gf4T5g/wS5hfyT5h/yE9hfiJ/hfmL/BbmN/Jf
mP+oD8L6gPohrB+oL8L6gvojrD+oT8L6hPolrF+ob8L6hvonrH+oj8L6iPop
rJ+or8L6ivorrL+oz8L6jPotrN+o78L6jvovrP/oD8L+gP4h7B/oL8L+gv4j
7D/oT8L+hP4l7F/ob8L+hv4n7H/oj8L+iP4p7J/or8L+iv4r7L/oz8L+jP4t
7N/o78L+jv4v7P+YD4TzAeYH4fyA+UI4X2D+EM4fmE+E8wnmF+H8gvlGON9g
/hHOP5iPhPMR5ifh/IT5SjhfYf4Szl+Yz4TzGeY34fyG+U4432H+E85/mA+F
8yHmR+H8iPlSOF9i/hTOn5hPhfMp5lfh/Ir5VjjfYv4Vzr+Yj4XzMeZn4fyM
+Vo4X2P+Fs7fmM+F8znmd+H8jvleON9j/hfO/9gPhPsB9gfh/oD9QrhfYP8Q
7h/YT4T7CfYX4f6C/Ua432D/Ee4/2I+E+xH2J+H+hP1KuF9h/xLuX9jPhPsZ
9jfh/ob9TrjfYf8T7n/YD4X7IfZH4f6I/VK4X2L/FO6f2E+F+yn2V+H+iv1W
uN9i/xXuv9iPhfsx9mfh/oz9WrhfY/8W7t/Yz4X7OfZ34f6O/V6432P/F+7/
4AeE/AD4AyF/AH5ByC+AfxDyD+AnhPwE+AshfwF+Q8hvgP8Q8h/gR4T8CPgT
IX8CfkXIr4B/EfIv4GeE/Az4GyF/A35HyO+A/xHyP+CHhPwQ+CMhfwR+Scgv
gX8S8k/gp4T8FPgrIX8FfkvIb4H/EvJf4MeE/Bj4MyF/Bn5NyK+BfxPyb+Dn
hPwc+Dshfwd+T8jvgf8T8n/gB4X8IPhDIX8IflHIL4J/FPKP4CeF/CT4SyF/
CX5TyG+C/xTyn+BHhfwo+FMhfwp+Vcivgn8V8q/gZ4X8LPhbIX8LflfI74L/
FfK/4IeF/DD4YyF/DH5ZyC+Dfxbyz+Cnhfw0+Gshfw1+W8hvg/8W8t/gx4X8
OPhzIX8Ofl3Ir4N/F/Lv4OeF/Dz4eyF/D35fyO+D/xfy/9AHhPoA9AOhfgB9
QagvQH8Q6g/QJ4T6BPQLoX4BfUOob2D9MNQ/oI8Y6iPQTwz1E+grhvoK9BdD
/QX6jKE+A/3GUL+BvmOo70D/MdR/oA8Z6kPQjwz1I+hLhvoS9CdD/Qn6lKE+
Bf3KUL+CvmWob0H/MtS/oI8Z6mPQzwz1M+hrhvoa9DdD/Q36nKE+B/3OUL+D
vmeo70H/M9T/oA8a6oPQDw31Q+iLhvoi9EdD/RH6pKE+Cf3SUL+Evmmob0L/
NNQ/oY8a6qPQTw31U+irhvoq9FdD/RX6rKE+C/3WUL+Fvmuo70L/NdR/oQ8b
6sPQjw31Y+jLhvoy9GdD/Rn6tKE+Df3aUL+Gvm2ob0P/NtS/oY8b6uPQzw31
c+jrhvo69HdD/R36vKE+D/3eUL+Hvm+o70P/N9T/4Q8w9AfAP2DoH4C/wNBf
AP+Bof8A/gRDfwL8C4b+BfgbDP0N8D8Y+h/gjzD0R8A/YeifgL/C0F8B/4Wh
/wL+DEN/Bvwbhv4N+DsM/R3wfxj6P+APMfSHwD9i6B+Bv8TQXwL/iaH/BP4U
Q38K/CuG/hX4Wwz9LfC/GPpf4I8x9MfAP2Pon4G/xtBfA/+Nof8G/hxDfw78
O4b+Hfh7DP098P8Y+n/gDzL0B8E/ZOgfgr/I0F8E/5Gh/wj+JEN/EvxLhv4l
+JsM/U3wPxn6n+CPMvRHwT9l6J+Cv8rQXwX/laH/6r/BEqz2
      "]], {}, {}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
ORv3Ow==
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-3., 3.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{3.8678680204290953`*^9, 3.867868182401729*^9, 
  3.86838126112428*^9, 3.86838156180857*^9, 3.868481099809414*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Quiet", "[", 
  RowBox[{"RodeoCombinedExpectationPlot", "[", 
   RowBox[{"\[ScriptCapitalN]Dist", ",", "10", ",", "2", ",", "1", ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"-", "3"}], ",", "3", ",", 
    RowBox[{"1", "/", "100"}], ",", "True", ",", "Default", ",", "Orange", 
    ",", "50", ",", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"RodeoCombinedExpectationPlot", "[", 
   RowBox[{"\[ScriptCapitalU]Dist", ",", "10", ",", "2", ",", "1", ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"-", "3"}], ",", "3", ",", 
    RowBox[{"1", "/", "100"}], ",", "True", ",", "Default", ",", "Orange", 
    ",", "50", ",", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"RodeoCombinedExpectationPlot", "[", 
   RowBox[{"\[ScriptCapitalA]Dist", ",", "10", ",", "2", ",", "1", ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
    RowBox[{"-", "3"}], ",", "3", ",", 
    RowBox[{"1", "/", "100"}], ",", "True", ",", "Default", ",", "Orange", 
    ",", "50", ",", "5"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.868481601613125*^9, {3.868484104980112*^9, 3.8684841094748235`*^9}, 
   3.8685027981957536`*^9, {3.870380715460999*^9, 3.8703807162521915`*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny]}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[
     Tiny]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJxdmg1s1lcVxtsCHUVQ5gZzMwxhRGGzkWyoMQs5bhrHPpwZDg0Zw2wMA2Rz
HzGZq8wY3PxkI0GnjEx0o7gYBTNFN8jCBYaZ8qG0UAqMsX4BhRb6/d2KbZ/n
POd9/2+2/PNL6b/vvc+95zz3nDvj4ccXLh9TUFBQOPz/4qKCguH/+Bm/G8/D
1nzfW9c/33SFuHrzE/MnVAe/0zV7ybq9wdvuqC27elvwxpdHPsHPN428MPjJ
4bdtfiJ4+GXDbwxeMPK6O4JvGf0ETx99YfCE0S8Y3D3y9bqKxaOvqw0+dHDk
Ezwy2vveCi4fGe7m4NGvty74+yOvKwv+9ugneOHoC4NHhzs/eM7ogINHX3d1
MJ7B0GOcGHoEQ49g6BEMPYKhRzD0CIYewdAjGHoEQ49g6BEMPcaKoUcw9AiG
HsHQIxh6BEOPYOgRDD2CoUcw9AiGHsF4BkOPMWLoEQw9gqFHMPQIhh7B0CMY
egRDj2DoEQw9gqFHMPQoEkOPYOgRDD2CoUcw9AiGHsHQIxh6BEOPYOgRDD2C
8QyGHoVi6BEMPYKhRzD0CIYewdAjGHoEQ49g6BEMPYKhRzD0KBBDj2DoEQw9
gqFHMPQIhh7B0CMYegRDj2DoEQw9gvEMxvxfTvnzHYz5DcZ8BmP+gjFfwZif
/4kxH8EYfzDGG4zxBWM8wVhPQ2Ksn2Csl6FUSMb6GEpFZKyHoTSODP2H0ofI
0HswXUuGvoPpC3l6DqYf5Ok3mKYU5uo1mBYX5eozmCaOy9VjML09IVePgfTb
qbl6DKTZn8nVYyAtfShXj4FU8m6uHgPp8PrCHD0G0vRPjcnRoz998rbiHD36
098XTMzRoz+drLsmR4/+1D1QmqNHf/rslm/m6NGf1izbkqNHX9o0OK8w9OhL
/c/dWhR69KXyDVPHhh596cKalVeEHn1p8th7J4UefekbLeXXhB69aW/ly3NC
j9609MGnF4QevemV6r7VoUdv+tuxZVWhR29afcPOFYXSozc9O33nA0XSozdN
nbm0cYz06EmVz1y3slh69KT7dz65coL06EkLD0zZNVl69KRfPvLz16+THj1p
+WNzxtwoPXrS+kU/Wneb9OhO7d9ZfNdy6dGduj9ytGWj9OhODw+NK78gPbpT
zaUbK75V6Hp0p9eO3vSVCUWuR3d6auaGVy8XuR5d6Q83l055cKzr0ZUa5lxc
e2ex69GV7lz26O29412PrlQya+6eP010PbrSzMl/fmDHla5HV7qpbGfJCx9z
PTrTJ67a/OrWGa5HZ5q5e9H9e0pdj87Uub/unvXzXY/OtKpt611XLXQ9OtMd
s6aOe+RR16Mz/X7rrGlVL7genWlNycDXm950PTrSj3f/9fWHml2PjlRaO+34
nNIK6tGRlhzau2XV6grq0ZFeLP7u6bJTFdSjI22/ufFy9dcqqUdHKru+9OLU
E5XUoz39tGrt4MGyI9SjPf3wnrWbHv/8UerRnt743uy5c66soh7D/37S+kWv
lRyjHu3p/Q/P/c3uGdXUoz1N/MkrjUsWH6cebelzH719Ws+2E9SjLc07OfnA
Y9Pfox5tqXnF0Jf3bTlFPdrStS/e/bvCW09Tj7b08Y0lv7jl2AfUoy0dnTv3
0r3/qKEerempxTv+O+mZWurRmva3Tn72+KfrqEdrWvX0onk3HKijHq2pctnG
l9JX66lHa/rZ6h2/vvsv9dSjNX1pRcuODU311KOV8bWB89+in2O+W/T7mN8W
vR/zeUl/H/N3Sd8P83VJ3x/zc1Hjw3xczIz/ouYH423W/GF8zZpfjKdZ84/1
1CR9sH6apB/WS5P0xfq4IP2xHi5ofUD/C1o/0Pu81hf0Pa/1Bz3Pa31Cv0at
X+jVqPUNfRq1/qFDo/YH9Din/QM9zml/QY9z2n/Q46z2J/Q4q/0LPc5qf0OP
M9r/0ONMJj6cUfyAHg2KL9CjQfEHejQoPkGPesUv6FGv+AY96hX/oEed4iP0
qFP8hB51iq/Qo1bxF3rUKj5Dj1rFb+hRo/gOPWoU/6FHjfID9KhR/sD8f6D8
gvk+rfyD+T2t/IT5fF/5C/N3SvkN83VK+Q/z857yI77+SeVPjP+k8ivGe0L5
F+M7rvyM8RxX/sZ6qlZ+x/qpVv7Hejkmf4D1USX/gPVQJX8B/Y/Kf+B1R+RP
oO8R+RfoWSl/A/0q5H+gV4X8EfQ5LP9EHyh/hfn/j/wX5vtQxp8dlH/DfO6X
v8P8/Vv+D/P1L/lDzM+78o+Yj3/KX2L8++Q/Md535E8xvj3yrxjP7ox/3iXG
930743d3ZPz4m2L8/e0Z//xG5v3bMu/7Y+b3yzP/flPm57/K8HPigryPfm6Z
37fM+zM/Lxfz+2X+/TYxx5f5/e1izk/mfTvEnN/M+3eJqU/m7+0RU18rzPv7
+8z15/owXx9cP+brh+vLfH1x/ZmvP65P8/XJ9Wu+frm+zdc317/lnz8Om+8P
7h/z/cP9Zb6/uP/M9x/3p+WfP46Y71/ub/P9zf1vvv8ZH8zjA+OH5Z8/jpnH
F8Yf8/jD+GQenxi/zOMX45vlnz9OmMc/xkfz+Mj4aR4/GV/N4yvjr+WfP06Z
x2fGb/P4zfhuHt8Z/83jP/OD5Z8/aszzB/OLeX5h/jHPP8xP5vmJ+cs8fzG/
mec35j/z/Mf8aJ4fmT/N8yfzq3l+Zf41z7/Mz+b5mfnbPH8zv5vnd+Z/8/xP
f2DuD+gfzP0D/YW5v6D/MPcf9Cfm/oT+xdy/0N+Y+xv6H3P/Q39k7o/onyz/
/NFo7q/ov8z9F/2ZuT+jfzP3b/R35v6O/s/c/9EfmvtD+kdz/0h/ae4v6T/N
/Sf9qbk/pX8196/0t+b+lv7X3P/SH5v7Y/pnc/9Mf23ur+m/zf03/bm5P6d/
N/fv9Pfm/p7+39z/83xgfj7g+cH8/MDzhWXOH3w2+PlEP+f5Rb/P843ez/OP
/j7PR/p+PD/p+/N8pfHx/KXx83ym+eH5TfPH853ml+c/zT/Ph9KH50fpx/Ol
9OX5U/rzfJpZH+1aPzzfan3x/Kv1x/Ox1ifPz1q/PF9rffP8bfnnj07tD57f
tX94vtf+4vlf+4/1Ae1P1g+0f1lf0P5m/UH7n/UJxQfWLxQ/WN9QfGH9Q/GH
9RHFJ9ZPFL9YX1F8Y/1F8Y/1GcVH1m8y8bNb8ZX1H8Vf1ocUn1k/UvxmfUnx
nfUnxX/Wpyz//NGr/MH6lvIL61/KP6yPKT+xfmb5549e5TfW35T/WJ9TfmT9
TvmT9T3LP3/0Kf+yPqj8zPqh8jfri8rvrD9a/vmjX/6A9Uv5B9Y35S9Y/5T/
YH3U8s8fA/IvrK/K37D+Kv/D+qz8Eeu3ln/+GJS/Yv1X/ov1Yfkz1o/l31hf
lr9j/Vn+j/Vp+UPWr+UfWd+Wv2T9W/6T9XH5U9bPM342mPV3MevzYtbvxazv
Z/xzMPsDGT9+OeOfg9l/ELM/IWb/Qsz+hhjPgi/mjyeY/RMx+yti9l/E7M+I
2b8Rs78jZv9HzP6QmP0jMftLYvafxOxPidm/ErO/JWb/S8z+mJj9MzH7a2L2
38Tsz4nZvxOzvydm/0+MZ5GY/UMx+4ti9h/F7E+K2b8Us78pZv9TzP6omP1T
MfurYvZfxezPitm/FbO/K2b/V8z+sJj9YzH7y2L2n8XsT4vZvxazvy1m/1vM
/rgYz7Fi9tfF7L+L2Z8Xs38vZn9fzP6/mPcDxLw/IOb9AjHvH4h5P0HM+wti
3m8Q8/6DmPcjxLw/Ieb9CjHvX4h5P0PM+xti3u8Q8/6HmPdDxLw/IsazWMz7
J2LeTxHz/oqY91vEvP8i5v0YMe/PiHm/Rsz7N2LezxHz/o6Y93vEvP8j5v0g
Me8PiXm/SMz7R2LeTxLz/pKY95vEvP8k5v0oMe9PiXm/SoznePH/AcJjdQ4=

      "]], {}, {}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
I8+H
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-3., 3.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{3.8684930086890182`*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny]}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[
     Tiny]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJxVmnl4zdf2xk9mQ4uiWlOoooaiqDQ0rF1qaLlqqBp/VK+YS+lEbmtoBUVp
zWoqcelgaIOarU2qkkhyzklCJEIjMUZEkEQkkdyQ9+3z/PK0f+SJfHO++7P3
2mu97/vCB1MHBHs5HA6Psv+HejocZf/hq4ItmOY9v7DUKVn9D/qH3vKz3r7J
R9+u5JKksI86V0rys0v8Vyz/vqZLIvKajVh20s8OS3OGzvF3ye6el0Nq7vaz
vTzfevrUSy75Yd3jLz8bsb7GoCqvuCT01uMH+tmp/t/PrfaaS6aVPS3sIz+b
PbOPz8Igl5Q9rOyJfnZV7dL4IOOSXo8f19PPBg2/3c6nq0vaP/nys2Pqt/SN
fMMlDZ480M8+TPLtPUtcUunJB/SzuS/XjWj/ukvyH3+8PF+bvKLuTt8OLnny
uMu+tk9R+NKmrVwSG/P4y9fO6n8pMP5Flzx+2/4Hfe0f19tVHFTbJdsev26Y
r32hqvuoVxWXPPl4y3ztlaH1HgZ6uuQ/jx8X4mtfHVO6JizLKWOffJU9r/WV
8HfPOmXAkwf62h4bJp3uoE558rqdfe2byS9uzPzFKc2fvLCv3Ro7ZITvOqc8
eVxNX+sZ0OzPCoucUs7D186PiRoxYhZ5+NgKW+5PH/SZEzx87NzZY9e3ne4E
Dx+bvGpayHNl35fz8LETvk1ZXqvs35fz8LG3/87MaVr2vHIePjZlv8/mZmV/
r5yHj/Vtf+h2etnnKefhY9N2ROz32uUEDx87JCw73j/CCR4+dtiBri/tvuAE
Dx/rucf/i+r5TvDwscHRvSOjK5CHt/1xR+WoP2qRh7d9Sj6qOroxeXjbDrtG
jx3aljy87aGxH37VpjN5eNvc5v5TPu9JHt42clBeQNw75OFt6yR3+u7SIBd4
eNuGl0PqBA91gYe3/WVVdGn7YS7w8LbFTr9NHYa4wKPseQ1XVJgy0AUe3nZ2
P583inq7wMPbZp6716Bm2X4s5+FlB7ca4uEbwPPhZVu2rji6bTOeDy+75MqF
HT61eT687MEuL8worsDz4WW3hsWub36XPLxsyKCEbza4yMPL/t69ePVbv5OH
lz2wc3tO7ZXk4WXPL/PokT6TPLxs2OQ/l478N3l42Rt71rzVpj95eNn5B4/d
TurmBA9PG9q3YdvjrzvBw9Nqp78ONu/oBA9Pu2VSO2e3ICd4eNpmW79x1+ru
BA9P+8qhuKbfDnSCh6cdf32pTh3nBA9P+9qZoLfHzOH58LRrGt+ffmsjz4en
7e4/cPuof86Hp82fuPRybgbPh6e9PS33qf/zIQ9P+3Ho4KF9a5OHpz1RMLz5
a63Iw8PuHr3jh88MeXjY3KXLJowbQB4edlC1zV3GfkAeHrbLwmfDzk8lDw9r
G3m3fTWE9crDNn5t5Nc+c1mvPGz67NHB+V+zXnnY9ya8Fhn/FeuVh33/7Jja
S75kvfKwX967Gd7pE9YrDztib0m3+uNYrzzsx5Xfe331ezwfDlutx+Tgl7rx
fDhsTERArcn/1CuHDXmwpX/1WjwfDvv+7g63txeRh8M2Cn7nWnI0eTis/48v
FLZbTx4Ou2hnp7G1ppCHw4Yf+TQh9k3ycNid7W9+ObcheTjsiFZNEtp7kofD
Lm90rolmxoGHwx6N3nUxMSUOPBx224OICY/i47D+pZp850zA2oQ4rHepLrw2
1/NCahzWt1Q/aVHxeVd2HNazVFe2+rnnwIrcz6Ua+O6R40+/zP1bqku/aB44
7T3u1xLt457ec+8C7s8SXVJ32P6o43z/Ei3ODH80vpDvW6Ij/LMfflWP579E
d47MCv8wiPurRC/+svPFwuHcT4+0tff2rvVDuH8eqVd2Xs1Tq7hfHunzyUkl
Gbu4Px7pHwWDXvnyBPfDI03N3j/qdyf5P9LxRTtuRCeRd7GGd5j/Qa9k8i3W
4LHh8VcSWO+K9WCPb6I2nGZ9K9ZGM6rm7dnHelasz285VbJpPetXsa4uXZbS
5Euej2I90iCvsN0wnocijT5yuFFqe+7/Iq1zcumx/pW534s0f8u4+WERrDdF
urjxtr4B08ijSJdGrvrs1AvkUaSh2XXGrEyKA49Cbftx1+F7V8aBR6Eu3nv3
7INhceBRqNUqzlj7sGUceBRqo1fM5BoV48CjUIdte+ZB8P1Y8CjU35Z1v5Zy
KxY8HurrRUfDmpb9vJzHQ+218NWKp8t+v5zHQ633sLlHSZs48HioB9Lv7D4d
HAceD9U4P5wd80sceJR9fyRkQL+SOPAo0FYHN/7UcBTrX4FufOtI/3lneL4K
dH4/1741DcmjQEMqNAncPJI8CvRqSsX/1N9EHgXaMrI48dmL5FGgT/8ZNWBI
bTd4PNC+AwPPrernBo8Heue3TyfNnOMGjwfqn1j9s1Pb3eDxQM2iw/HTT7jB
44FWqjfyV2ecGzweaFDe8KXrY93gka+dpnw61v+YGzzydfBV76DAjW7wyNfU
ij1eHj/FDR75Oqlh2oGotm7wyNcqX14aWeEmz0e+lrZu98Hbq3k+8tT+tmR4
zSCejzzdNm9fi36H2W/kafW56xpFFJBHnm4cdjqpRUfyyNOm6w/PuD4nFjzy
dGHHnqOuJMaAR672GXbw0qyOMeCRq/4NGtyfG34GPHJ1QOH3twK6nQGPXJ0z
81zSwuxo8MjVv4Im9go4EA0euRp0yFmh8o/R4JGru7u2qF9nZzR43NedK1J/
vHMpGjzua3dbu1d40BnwuK8jlizv1ir6DHjc11GBy6sdWxIDHvc1etm3Hest
igWP+xoausujWiTPxz2dUrCqZnET1u972rfTvqqNnyaPe1rg9dm/H9aJB497
Gly1UrXMdxLA4562KvzPyeq/JoLHPb02Muqgd4tz4HFX3wwPm7cxMgk87mry
mAuJeXOSweOuRhW/Xzqx9wXwuKtNOyS2P+V/ETzuanR8fsuQnEvgcVdPflHi
GTosDTxydHadKzmBr1wGjxxt1rqyz+D7l8EjR3+ae9i30aZ08MjR/b5Vmo1t
mQEeOTrEtG93aHUGeORo1R4b7v6emgEeOXq0bp3uNYoysP53NOvzS6XXczKw
3nf084K18d8ez8D63tHwUSWrdwdnYD2zdWvs1cXNbqZj/bK1Ut6+gOt90rFe
2frro9pb96y6jPW5rd/MbTIrIzIN63FbB+dVGDzr/N94/9saFPhGRqvKl/C+
WWqHTvFt0yEV75ele7d8+Gzd0Sl4nyztfSBjxZS157GfbqnfV6HZb2acw/65
pd93/8mjTa+z2C+3dPe0ztsbxyRgf2Rqm5ifZi+bHo/9kKldJnUKndSZ5zFT
l1V+Y8yMf/qdm7q4wH391jzWv5ta61+prc/kx4DnTf2puEKrVbvOgN8NnfHt
Mx0j/xsNXjf0u3ceyaELUeBzQweMzNic1DsKPG6o98WOAxPuRYLHdc1NSIn4
b2wkeFzX1leLps1JjgSP65qWHJ+3vUYUeFzTutNrr3h9ZhR4XNO0ym1n+fpF
g8c1PZJ8roI5FA0eVzVqTOeOwYvPgMdVHRJ4IavejBjwuKo9Uk+eaDszFjyu
aFqv6VFbF8SBxxWtE9H6QPR69itXtKnWCo19j/dfhq7t+fOEj1N432Vo1r3I
HRfeZT3N0PNtn/q7/0nWz3Q9OrJ14vIG5JGufTv033x3Qjx4pOuFtqfafro5
Hjwuq2/I1vZZx+PB47Km9O1aLf90PHhc1oHPOW87jsSDR5ouCK/bovO6ePBI
05eDGx5eMCYePNJ0osfV0f8q+/vlPNI0fmHP+hNieB/8rV8s2t/RMZX1/ZLO
izFLR1ZyY30v6V/FYQWJW9ifXFRH4pqz6wPZb6Rqvx82dfk0jOuVqpHntyzO
/Jv92QU9Hpb19ayWrF8pWqt23F/jyupb+funaM06m7ObOGLxvsnqvzet39xl
rN/n9Vjhy1FLO8Xgfc7r25029NnvGYP9lKTj+30zee+NM9g/SXqjSrfFYVln
sF/O6Z9fv9255OkY7I+z+v66kVXW9+Z+OKtPZSxY/FtYDPgn6sQu0/MTa8SC
d4J27r98oMe6WPBN0CtJPVesbcN+JF7HZZaO+aSsPy3n59aQE17nC2ZzvnJr
QkD1X557nv2YS7PPnh/5yVTe5y4d36741vQI1vM4HdalZ6OvnnFjvWM1wrHt
fsBgN9Y3RhfWmuw3Zjn3V7TuXFYY1absPi9fvyid3yhi7UvpbqxXpH7QYkxC
31ze76d1ZbXvUps9cGM9Tum9j70+PJbpxvv/qQ093CWrndzPETozOnbWkbL+
ofz9Tmi97yYkbJ7mxvtYvfJ1vbrPteP+Oa7p9RNOdMlk/3JU027t2TN+A/vd
Q9qrq3+Kd2/OLwe0wHHsXK27nC/2aauhqVXdfalX/K5Dhr6fm7iX/eBubeLY
FRrcmPXqZ+2zMnL2u9ti8fvbdNfgaT/nBMTi32/SOotahj68RL4rtWHFqh+t
2cTv5+kfWQtqDP48hvOHIyXkTo2XJv7zc+HP8fvC38fz5f8/f5vw7+PzCT8f
Pr/w8+P9hO+H9xe+P9ZHuD5YP+H6YX2F64v1F64/+Aj5gJ+QH/gK+YK/kD/2
h3B/YP8I9w/2l3B/Yf8J9x/2p3B/Yv8K9y/2t3B/Y/8L9z/Oh/B84PwIzw/O
l/B84fwJzx/Op/B84vwKzy/Ot/B84/wLzz/qg7A+oH4I6wfqi7C+oP4I6w/q
k7A+oX4J6xfqm7C+of4J6x/qo7A+on4K6yfqq7C+ov4K6y/qs7A+o34L6zfq
u7C+o/4L6z/uB+H9gPtDeH/gfhHeL7h/hPcP7ifh/YT7S3h/4X4T3m+4/4T3
H+5H4f2I+1N4f+J+Fd6vuH+F9y/uZ+H9jPtbeH/jfhfe77j/hfc/+gNhf4D+
Qdg/oL8Q9hfoP4T9B/oTYX+C/kXYv6C/EfY36H+E/Q/6I2F/hP5J2D+hvxL2
V+i/hP0X+jNhf4b+Tdi/ob8T9nfo/4T9H/pDYX+I/lHYP6K/FPaX6D+F/Sf6
U2F/iv5V2L+ivxX2t+h/hf0v+mNhf4z+Wdg/o78W9tfov4X9N/pzYX+O/l3Y
v6O/F/b36P+F/T/mA+F8gPlBOD9gvhDOF5g/hPMH5hPhfIL5RTi/YL4RzjeY
f4TzD+Yj4XyE+Uk4P2G+Es5XmL+E8xfmM+F8hvlNOL9hvhPOd5j/hPMf5kPh
fIj5UTg/Yr4UzpeYP4XzJ+ZT4XyK+VU4v2K+Fc63mH+F8y/mY+F8jPlZOD9j
vhbO15i/hfM35nPhfI75XTi/Y74XzveY/4XzP/QBoT4A/UCoH0BfEOoL0B+E
+gP0CaE+Af1CqF9A3xDqG9A/hPoH9BGhPgL9RKifQF8R6ivQX4T6C/QZoT4D
/Uao30DfEeo70H+E+g/0IaE+BP1IqB9BXxLqS9CfhPoT9CmhPgX9SqhfQd8S
6lvQv4T6F/QxoT4G/Uyon0FfE+pr0N+E+hv0OaE+B/1OqN9B3xPqe9D/hPof
9EGhPgj9UKgfQl8U6ovQH4X6I/RJoT4J/VKoX0LfFOqb0D+F+if0UaE+Cv1U
qJ9CXxXqq9Bfhfor9FmhPgv9VqjfQt8V6rvQf4X6L/RhoT4M/VioH0NfFurL
0J+F+jP0aaE+Df1aqF9D3xbq29C/hfo39HGhPg79XKifQ18X6uvQ34X6O/R5
oT4P/V6o30PfF+r70P+F+j/8AaE/AP9A6B/AXxD6C/AfhP4D/AmhPwH/Quhf
wN8Q+hsYPwz9D/gjhv4I/BND/wT+iqG/Av/F0H+BP2Poz8C/MfRv4O8Y+jvw
fwz9H/hDhv4Q/CND/wj+kqG/BP/J0H+CP2XoT8G/MvSv4G8Z+lvwvwz9L/hj
hv4Y/DND/wz+mqG/Bv/N0H+DP2foz8G/M/Tv4O8Z+nvw/wz9P/iDhv4g/END
/xD+oqG/CP/R0H+EP2noT8K/NPQv4W8a+pvwPw39T/ijhv4o/FND/xT+qqG/
Cv/V0H+FP2voz8K/NfRv4e8a+rvwfw39X/jDhv4w/GND/xj+sqG/DP/Z0H+G
P23oT8O/NvSv4W8b+tvwvw39b/jjhv44/HND/xz+uqG/Dv/d0H+HP2/oz8O/
N/Tv4e8b+vvw/w39f+QDDPMByA8Y5geQLzDMFyB/YJg/QD7BMJ+A/IJhfgH5
BsN8A/IPhvkH5CMM8xHITxjmJ5CvMMxXIH9hmL9APsMwn4H8hmF+A/kOw3wH
8h+G+Q/kQwzzIciPGOZHkC8xzJcgf2KYP0E+xTCfgvyKYX4F+RbDfAvyL4b5
F+RjDPMxyM8Y5meQrzHM1yB/Y5i/QT7HMJ+D/I5hfgf5HsN8D/I/hvkf5IMM
80HIDxnmh5AvMswXIX9kmD9CPskwn4T8kmF+Cfkmw3wT8k+G+SfkowzzUchP
GeankK8yzFchf2WYv/oflkTHww==
      "]], {}, {}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
dUwNFKP/A6iq5pE=
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-3., 3.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{3.8684952412752314`*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny]}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[
     Tiny]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
tnU=
      "]], {}, {}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.0038500000000000006`], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(j\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P \\((+)\\)\\), \\(_\\)], \
\\(n\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{-3., 3.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{3.8684983409045095`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ProbAllZeroExpectation", "[", 
        RowBox[{"dist", ",", "\[Sigma]", ",", "1", ",", "1", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"dist", ",", 
         RowBox[{"{", 
          RowBox[{
          "\[ScriptCapitalN]Dist", ",", "\[ScriptCapitalU]Dist", ",", 
           "\[ScriptCapitalA]Dist"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"Filling", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Sigma]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[OverscriptBox[\(P\), \(_\)], \(n\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"TicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thin", ",", "Thin", ",", "Thin", ",", "Thin"}], "}"}]}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868480785884678*^9, 3.8684808093402443`*^9}, {
   3.868481253114256*^9, 3.8684812562970996`*^9}, {3.868502840163535*^9, 
   3.8685028402995906`*^9}, 3.8686314717736053`*^9, {3.870298177467636*^9, 
   3.8702981791798744`*^9}, 3.870303906846056*^9, {3.870366977589549*^9, 
   3.8703669824275675`*^9}, {3.8703673950968895`*^9, 
   3.8703674153061132`*^9}, {3.8703674473211646`*^9, 
   3.8703674538244734`*^9}, {3.8703681267705116`*^9, 
   3.8703681302039795`*^9}, {3.870368382033761*^9, 3.8703683823694167`*^9}, {
   3.870368440337798*^9, 3.8703684583857617`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Tiny], Opacity[1.], 
    LineBox[CompressedData["
1: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
S7c760IzGejg6Ywi0q0n7FwDnzOQVshMDGkdhmKx8msGurBteB/p+Ei6VNd7
Bqp1d/IjrbL7ya9d9QxEbHa0Jx3VloQUCAaqb/xtTrp6m++11nYGSrj6fQ3p
fbaSnjuGGIjJXaNA+m358CvpSQY6OvVZkrQEfJT/SWWi/nfyC0g/XxXd7izA
ROL7n1FIcwn99t2kyESyMj6/KOR+4lzNrqox0aSnUR3p9plPMp06TEQxcPhM
ury74NshEyZaMileRvqJp+qjivVMVHTrfTHpGw0ZJ0Xs8HoRuU9Jx749YXbH
lYm2JnPdJb0PKEtHPJho3UTYDdLeT0KnkC8T3Xkjeo20eda2R1/3MpGlRfVZ
0qyoVUtpSUy0gFh2ZLZvJHPKOpWJEtS/HZrt272o7twlJhIxvnNgts+FmqSS
zUSewU//me2r3usXdo+JLh7rCZrtW99p9iqPiRydjANm+3RrppxeMJGgm6nX
bN89i7rMN0xkXsHeMdu3rOhRbyUT8Wx+4jbbt+C635EGJvp88LTTbB97X13u
IBPVWvvZzPZ5dT2aGGeirOd1lrN9jduTzCgsdMbWdd1sX8U68+/zWKhnVbrJ
bJ9R8VKFBSykbbTdaLYvX306WJyFhPvUYLbvhkQeS4GFDtTzrJntW5KUtFGZ
hfaPCejN9qXQ/dM0WOjWvwq6s33R3Us1gIVWPojWnO1ze560zYmFhu06lWf7
ajX8s91Y6OMib6XZPqub5oM7Wcg/pXflbJ/eqen4PSzUyy+/fLZneXie1EEW
ssiNk5/tEfHwzzvOQt5nRGVn16dbyVqeY6HbzCrp2fX7Net/ZbKQTcSdJaSZ
lUwLvmK8/5kqcdIL52tG5VawUGFqtxhpeRv3Aoc6FhLZqSxKWisxcWC0jYWa
BRIWkjatLFRKG2Qh0108C0h72ohcaeXnQqU8joKkoyuDBFUUuVDHvxR+0hk2
FdF7zbiQbNMMH+kXlfLDxe5c6NiMKS9pwubQLlYkFyIWveMmTamqr7c9x4UW
P4vmIn2wyiQzmMGNXjyepJOerMoJSN7DjW7cF6WRDl6galJnwYOeXztNId22
5Z64lBQvWj+6bNYLgk+aDLbxohd+vLM2ig/c/TaHD7mU0mbt/+rMs6Ox85Du
VcqsU2fyeUy2z0d+sv85bL7hnaSV/OgP1392kXxl3TjIj0qp/1nfNlFY6KMA
cqD853mlSt2yjoJI4P/On2gPfl4qiOj/t5d2xvBWZSFE+b97t86XLz711/sP
htnLDP/10c4zNVVVwnO2VhTInndxwZwTc3RKrXcsnHOFQ+ZUqJ7InEsrgxKU
6aJzfuh3GH348ddSVrA6ME9sziYc15irkYvmvPNryUC+o/icDQ9HP94hIzHn
5KD+Z/M6/ro56nr71eeL59zlVbDzZZzknPt2C3NV7lgy53vr3095q0jNud1H
TYc+/NcSdxrOxFVKzznGPSSj0kpmzqNT4olWBX+94tm5CxXyS+es7fl6g9Cx
vy5NE1n0YfivV5SKHLd1kZ2zDbN7SfXzv+773vrqnaLcnIPSEhccS/pr0XXO
sWVv/vr5oMI4h/PX/wMyAGU6
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Tiny], Opacity[1.], 
    LineBox[CompressedData["
1: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
O+EwoCeMjuvos09JP722tK0qwEQYh6+27qytYMDTT203rjsJ4/4oB1f1bAaM
HuJXeXNLGKPvSe6lXmTAmdCzNorTwnh72ERueQ0D1gyH8EXOCaP23HjP3CrS
rw+FfxxZEMaM3RgxsZIBehuj9V+xiqBb03xNvxwD5n4/WHlASAQp+9dyNwox
4NyhdxPX14lgnvbUoavjdAjV5bw76yKCR8KVAz7cpYNGOq+lk4cINnjo3xKJ
oQNNUJDrg5cIGjmse+xxjQ7wW/L8nRMiWGxR70u9QO7T9LVu6y+IYM+3wXC6
Jx0uCVrquCWJoEpQ7uLHrXSIGLrb0tAggpwuLWb7h2lwpa3/y0KzCL6j3HvL
Oki4ZnP1mu8iyKp6eaSil/i/1M6CS50i6Cn26ZdZJw1CbZRjNg2KYNJMix/t
Cw2CKorMUimi+D6uSpXrOQ1OZ7HjV3ZRPMyS+PdwNg0C4w5snuMSRTX12LWV
ZL4I8JtfZSNAWG2QJSuFBidWGrFxyopiyraPbJRbNPCKbn7jqyuKb+bnv88F
0eDoGeUX9zeLoqpv0TPBQBp4up9+/klfFCXXmK7ROUkDdwPpB0qGovixrNk+
jfhVlwnns98tRdFAnOkv7kIDZ3rRCda9onihqmj3XSfCdexHNfcTlsyzoDrS
wOlJtm2UvSgKe23863CQBvb2f7S3HxXFxtlzfmesaHDI1EjN21sUNcodxo5Y
0MBON04p0VcUr83zLNruosEBAT2h8VOiaOIx0Ou9kwa2C1Fc1DOi2KxyvyVq
Bw32D3Yu7Tonii1bV58tNaLBvuqwkcyLohjSYcm+BWhgk9/c13xZFLUWVf7F
bCecrNy1dFUUN/jurp/YSgProE9f7G6K4i+1U8J9ejSwUBPM5rsviucXQ3t9
dcj+ak9kr00Rxd9OTU5btEl8PJuyd6aJ4soNbw+IaNHgYvrtnItPRLGNXadu
mPj3mziRk5IjipsoWdaj62lwn2bztOK5KD4+dvvIP3UalMiIPZsqIvFd5bd6
xzri38sCnwmXkvNuMOg5r0aDhgPfn2mUi+LoFtxQtZYGnVMbn+9+TeLf7Ccs
RnjwTsJzr3ei+G7W9WrgGhpMb5h9HlEtio9098f2kPmUtfFgbvoHUfyvVErd
ibCgb1nuu1pRjDq5yvHnahrIrZDO6/oqig8NYqihhNfmBOf9bSD5YeMMWEl4
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
HflesZ9j2jr1sWcdKSyyFyXxcT6stKjaq+dFQT/RJW4kkGOrhOO773lT8FOS
azdHG59YHbDFh0J/fAY/JoBjpk8qfQ75U1jwT1fR9E6OgUuZ64M9FB4simx/
54v9HnyD7YjA5z/27i8NnIdOil0WfZEU8rQW9Ju6c8ylQts85jDWR2dBnhPm
ve0T2cb5URSaJdXqonGe+py6pDd8gsLAytj4apzH+7OSlRNSKVhuzLvdgPO6
RVxn0P4shSP71L/k2HNsaWB1k/x5Cv7bQm5EbOTYe8Pe2LSLFL6MRDdo4Lzf
/hiGMrIpzM3boeKA58X6f0daCkooHFfw/W5riueBnXtc/WMKH09ZPvpGMO+X
DvnGNVIwHbE1zuJx7NnceEu7ZgrWXHTxWm2OJXZUjjY/pdBTpMpFauL3DFPw
f/EPhWMq1wUf5nPsc/Z91tVNIWp7X2ixPPaLpNvCvB4KquIhe9bJcSxvd//Y
rl7s35Yws9ez8PwwUi/79JlCepXzhRl4vr58EqYxPEyhPn4i10ecY4YrZCcq
Rij8reB/ZnBayFLOX3sR/hX7cdkpvtZ3Idvo3XpmYoJCt25OzbFxISuo8w+o
nqJQmbAzq2xUyKT0ptZFibD+TUL8uGEh801J07T6QeFmxkk95UHMkyNLJqen
8f06esvZ9gnZ/wG3m25L
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], Thickness[Tiny], Opacity[1.], 
    LineBox[CompressedData["
1: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
ntw/vvMm+f//I0AKOxASPZbcPzQD/BE=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Sigma]\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P\\), \\(_\\)], \\(n\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0.26},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{
  3.8684808103534145`*^9, 3.868481256919073*^9, 3.8685029201195483`*^9, 
   3.8702981917669506`*^9, 3.8703039671699057`*^9, 3.8703669860188723`*^9, {
   3.870367405992685*^9, 3.870367416525855*^9}, {3.8703674484050493`*^9, 
   3.870367454241046*^9}, 3.8703682237416463`*^9, 3.870368386945738*^9, {
   3.8703684534233313`*^9, 3.8703684588402925`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ProbAllZeroExpectation", "[", 
           RowBox[{"dist", ",", "\[Sigma]", ",", "n", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]}], "]"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"Filling", "\[Rule]", "None"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Sigma]\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[OverscriptBox[\(P\), \(_\)], \
\(n\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{"TicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thin", ",", "Thin", ",", "Thin"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<dist=\>\"", "<>", 
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "dist", "]"}], ",", "1"}], "]"}]}]}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"dist", ",", 
       RowBox[{"{", 
        RowBox[{
        "\[ScriptCapitalN]Dist", ",", "\[ScriptCapitalU]Dist", ",", 
         "\[ScriptCapitalA]Dist"}], "}"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.868480827797423*^9, 3.868480850970937*^9}, 
   3.868480897764125*^9, {3.8684812608653746`*^9, 3.8684812618110247`*^9}, {
   3.86848401790381*^9, 3.8684840240368876`*^9}, {3.868502844651514*^9, 
   3.8685028447979593`*^9}, 3.868631474757629*^9, {3.8703002608951187`*^9, 
   3.870300287974412*^9}, 3.870303918534028*^9, {3.8703669898788996`*^9, 
   3.8703669941085477`*^9}, {3.8703674360987177`*^9, 
   3.8703674847236776`*^9}, {3.87036848441098*^9, 3.8703684873269777`*^9}, {
   3.8703686228485456`*^9, 3.8703686304787235`*^9}, {3.870369040827739*^9, 
   3.8703690946423597`*^9}, {3.8703692149865417`*^9, 3.8703692343695974`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<NoiseDists.svg\>\"", ",", 
    GraphicsBox[{{}, {InsetBox[
        GraphicsBox[{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
S7c760IzGejg6Ywi0q0n7FwDnzOQVshMDGkdhmKx8msGurBteB/p+Ei6VNd7
Bqp1d/IjrbL7ya9d9QxEbHa0Jx3VloQUCAaqb/xtTrp6m++11nYGSrj6fQ3p
fbaSnjuGGIjJXaNA+m358CvpSQY6OvVZkrQEfJT/SWWi/nfyC0g/XxXd7izA
ROL7n1FIcwn99t2kyESyMj6/KOR+4lzNrqox0aSnUR3p9plPMp06TEQxcPhM
ury74NshEyZaMileRvqJp+qjivVMVHTrfTHpGw0ZJ0Xs8HoRuU9Jx749YXbH
lYm2JnPdJb0PKEtHPJho3UTYDdLeT0KnkC8T3Xkjeo20eda2R1/3MpGlRfVZ
0qyoVUtpSUy0gFh2ZLZvJHPKOpWJEtS/HZrt272o7twlJhIxvnNgts+FmqSS
zUSewU//me2r3usXdo+JLh7rCZrtW99p9iqPiRydjANm+3RrppxeMJGgm6nX
bN89i7rMN0xkXsHeMdu3rOhRbyUT8Wx+4jbbt+C635EGJvp88LTTbB97X13u
IBPVWvvZzPZ5dT2aGGeirOd1lrN9jduTzCgsdMbWdd1sX8U68+/zWKhnVbrJ
bJ9R8VKFBSykbbTdaLYvX306WJyFhPvUYLbvhkQeS4GFDtTzrJntW5KUtFGZ
hfaPCejN9qXQ/dM0WOjWvwq6s33R3Us1gIVWPojWnO1ze560zYmFhu06lWf7
ajX8s91Y6OMib6XZPqub5oM7Wcg/pXflbJ/eqen4PSzUyy+/fLZneXie1EEW
ssiNk5/tEfHwzzvOQt5nRGVn16dbyVqeY6HbzCrp2fX7Net/ZbKQTcSdJaSZ
lUwLvmK8/5kqcdIL52tG5VawUGFqtxhpeRv3Aoc6FhLZqSxKWisxcWC0jYWa
BRIWkjatLFRKG2Qh0108C0h72ohcaeXnQqU8joKkoyuDBFUUuVDHvxR+0hk2
FdF7zbiQbNMMH+kXlfLDxe5c6NiMKS9pwubQLlYkFyIWveMmTamqr7c9x4UW
P4vmIn2wyiQzmMGNXjyepJOerMoJSN7DjW7cF6WRDl6galJnwYOeXztNId22
5Z64lBQvWj+6bNYLgk+aDLbxohd+vLM2ig/c/TaHD7mU0mbt/+rMs6Ox85Du
VcqsU2fyeUy2z0d+sv85bL7hnaSV/OgP1392kXxl3TjIj0qp/1nfNlFY6KMA
cqD853mlSt2yjoJI4P/On2gPfl4qiOj/t5d2xvBWZSFE+b97t86XLz711/sP
htnLDP/10c4zNVVVwnO2VhTInndxwZwTc3RKrXcsnHOFQ+ZUqJ7InEsrgxKU
6aJzfuh3GH348ddSVrA6ME9sziYc15irkYvmvPNryUC+o/icDQ9HP94hIzHn
5KD+Z/M6/ro56nr71eeL59zlVbDzZZzknPt2C3NV7lgy53vr3095q0jNud1H
TYc+/NcSdxrOxFVKzznGPSSj0kpmzqNT4olWBX+94tm5CxXyS+es7fl6g9Cx
vy5NE1n0YfivV5SKHLd1kZ2zDbN7SfXzv+773vrqnaLcnIPSEhccS/pr0XXO
sWVv/vr5oMI4h/PX/wMyAGU6
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
SMaR
            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1:eJxF1nc8Vu//B/B7G5ERhcwSFUnDKnlfJSSjkhaSVDZF9UGpjDIqNEhKEcoo
HCPZK4SsKCuzkH3b6zZ+5+77e+j8cx7PxzmPc73e13W9zzkS5pcNLpEIBEI6
kUBgnl/dNqftuPhATXJ+GT/o8NpoaM8pcWsoSPvBn4y7We++k7i4KxQ9tDEv
XqLDTqWaKPYmT8gzaJxWWaSDs9aZ1VRxP6iiPafzMOiQc+q3y7JlICQSfa/p
ztKBmJY+ttD4BLKDWzP6J+kgmcOQmmcEQ/tmUUb/KB00i5HJjFgoKJeL3dMb
ooNV5b3Hk+ph4Ldv6j3fHzo8+F5ROmYZDrJBf2qgiw6nRlhuz2i8AcOdViY1
Lfj9TvEC042R8M6CVPa5ng6u07qpk9bRUOahEyRSSYf7N+h6E4y34ODyTa/t
Mx0SPHd7jYrFwZ3Y3WOPkumQR2sUoSfHg5Hb6a3eMXSove+aMaz+ASwjBem/
w+gw/iRveMAyCZ4dxORa79HB84F88aQbBju2SOu5uOLPr/LgmdRIhpr7mmru
dnQIOyb5YbwxBTjuVR9pPEqH6KfX58YiUsHmW+bFzQfw8X+Uao5Zp8EnKR6F
/p34+Gesu+iMjxA4+8g4j5cOXecT1w6LZQLikeVt/DoCA1HLF4b6MiFRxIm7
NGMExnuOJg8mZ8Fj8VJTubcjQLGZ0BlQzwEPqqXxFbcRkHJS9vhjmQ+3WsKi
uiRHQKDloOVVgQKIwXw+FnGOgPDNYc4JtwKYbvxeuHl6GCRz1YzHNQqhych4
y/2SYVDc3zU12lgEOzaX7Ks1HYY9v/zCrqh+hrMdn+dpB4dBzWun+mjEZ3D8
osZXu3kYtEq8HtGtiyHVl+EqPjYEp7WlZEYYJSCRNjA45DYEN4/Zmg2KlYNU
q+H3Js9BWPJSFOx4WA4bzmWY658bBPd0Yl3dXDnsOhnfYrF3EO6uf66eVV8B
d8N3vb8/PgABPcVSfj6VUBNBlu8xGYAIV9FhKXoN3IrLdtko2Q+/a/tUd5yr
h/Uv9sS7BfSCpI2+4PvgeliyO+emeLEXLMhpU5KV9ZD/KOLdL5Ve6FO4kyig
8h3aiafnhHp6YOgFvzhhzQ8Quec4dGhvD0xfPECuKW0A2S4tWYe+38A297Lc
Tq4FAqbiJOgGXaDs03zj8PkW4PLtm7DZ1gVW/OtkNwe1gDjG2sLB2gWlO54E
/J5rgTKp3TOluZ1w18b3uFHJT1j7rT10u0wnEFqvtWmZtEFXn5CvrEg7yNuk
BGwKbIM3Qy9fFzS2wTm8Z8hFbVCZr/82+0kb5PHZRuZJt4P0w9obg2xtcFPv
vKXCRDvQoocsDRZ/ws2Ody48Gp3AF5O7tG6uGZ680zjmbtoJrto52SFZzRBv
372F7twJm1e/pvq7NUMLQ+JnZXwnxAk6WrcQm0FZ4NU+X+4ueHT5jgUnbxNM
H31KWv7ZBby277qEtRvAsejOwyGn3xDeEqBhy1sPszxBCT8f/IZR5S3cw7/r
4Pb52OqK6N8wwdo30PmxDh4SvnHHNfwGFU5tLRHjOohV2xB8aU83HDqc2Noa
/w06s4pftRN7IHl4WJzjXC1YsjfnVQn1QISepbSLUi2MnBnuyNnVA/VHI7T0
uWthYZZ/w8tLPfBij32pnXcNCChZvjtV3gPCNobpZcbVcDSVLan2US+EN90O
1ZCthEaSaG1+XC/ISQ8VF/d/BVODnWOJRb1gVTcXQ4r9CnZjRrv8J3uhgDBX
mib1FXy3f/ikffoP7As3NCqXrYD89/oFRWJ9QF0tn2ZhVAaaDPOuZOU+oEtz
L4ltLIPKw86kN8f6YF+bkoz70Bdo6Q8/eMerDwKKH27a7vEFpqXHyvb+6YN7
wVoXRVJKQS766be0xH5YP1elOyhfAnzP5WcKyvthKld5zne5GBgPqoSruvuB
9d1wZXV1MZRdZbHqERoAj5ET7jqXi8Fc/eYSv88A3GZtSPnx6TME/zKXccb7
xpI/+sWLS0Xg1rB81OvGIKRIut3t2lcE5hVh/wUGD8J8qaNI2toikEtpKIz5
OghJQ/oxU+WF+Hvx8OkmpSFwZ+fvylYshAXxnfdUuIdhQbDhzoh0Afziq4nX
kBmGwzbflORYC6Cc1a72mOYwTCOZzIJv+fBs9O16G7dh0HfGdsmeygf5AsGU
F33D0Kuq165mlwcXzhE7GAUjsM84fmIwJwcOH39NYW0dgYyc020293NAXmvv
Vr6ZESiRNDaLOp0DC3LXr8tuo0PEV/HzSjPZ8Gypb9XZUDqUnNq1MVY1G3r0
rYQ7lEfBftTtQHxvJvCV2kne1hiFTlUzm2OFmXBgn6OsiMEoSD4v+3UjLBMi
ZG6oGtuOgonCz636hplgwvrQpPHVKGQvbaOXlWdAXWFSWA1pDHgdfG59rPgE
RJW0aAeuMdjkpmdf8uETyGMZHziFx2B/c85FCPwE/q8Lc3QUxmCHx+op2xOf
4NDN+tYvlmOg4Pj6iGdvOuTtnhEuqByDpB9ynd5C6TD8niF5rnkMxg1vLb4k
pYPwRsK2pZ4xkPtPX5xl8CO48rDtU10eg5dHzBgtOR9h94jQ2Ywd43Bii/Nl
o4sfIT5G7RX2bBye97zJqy5Mg2ZR9bdHosZhhpXYU5yYBqzPtBJGksZB0WXk
AyEsDS7dPZorWz4O4WKJzhrOaSB+3rwtljEO97UEZwfk0yBEyFvkjdkEPs8Z
zb1JqTD9uzpG32ECOrWGNweEp4JhwrqdCzcngHPJ5KpzYCrwojjNUyETcHXf
y20cV1Lh4aXKy5zVEyC5q/qM5O5UGJDjn8/6OQGVrPz+hZtSQXv27F2r/gng
X9rvHLouFWgP6M8/UyZh15gX2zQjBdwx3iLXvZMg8kmfcfhLCrS7GutKa09C
A33k7busFNinHt3w/eQk0E6Y3lNMTIH5HwqD250mAQV8aaAHp8A1xmm+3thJ
kNG2oaRZpoCVZriFwdopkIv70NK9JgVKufpGlzdOQVF68Kdt7CmwqVn+ZsKO
KZjLfJwTTkiBX7ZFgax6U+B1S6hqYTgZTB73ZOR5TUGAj+2F+xXJkGUkp273
eArGAt0qVxUlg6Ckc5Vg+BSsLb6LJWcmQ0M6669rWVOwxVgk0youGY62yqyS
GZuC809Vuq/dT4bEt9eCm5amQE+MIbfKKxk4L+eKeXNMwyvtkOLCm8lQQTyy
u0t6Gnxig1v87ZPhoLTT2RDTacg6GHk6yCAZVJwyksiV05A6+XbHlEQy1C7v
NXVsngYnH84CJ+FksPDP5+jonQbqcd4Q1nXJ8CS21DqLOAPfn/lF3uRIhoH2
7xsdlWbAdZs09/VZDNztTte1H5yBo+yi2fETGKyd/+muazADW/0KGqZGMFDn
/90mbT8DjP5Dq772YBCmMxbSHjkD0elrzlh9x2Bn8zVNXWwGvsnGXUG1GJRZ
zE5m5s5AQJ6YvUwlBpMey8eCm2agYt+X38rFGOhlcHLorp4F2+wjH7Z8xGBJ
cqt7pussiAlHC216gUFQSoKctM8seH1Y6mALwWAr2tEWFDQLuf6BexafYnDS
WHnPlaRZMFaWylkdgEHSY81JqZ5ZmKin32jwxEBTrCIyaHwWrpx5YL/FHYPW
D3rHSIQ5EPdYkvS7hQFrmWFim9AcOFeVsjm4YGC2ZG4VdHQO5FFD/xcHDKYf
9K4lmc7B9zlP1Zt2GDwUtCm5bDsHa/Wj0lVsMMjc7bhBx3sOguXCzBovYfh3
704rMWcO3jfqOzw6i8HnxpdHL0vPg96jk3l1+ng95icmp3bNQ4nUKgGkh4HF
8Ornbmgegt68rUrTwYCd7Nnhd2YedNXvfks9hMFROSuH6AfzIMDLOkNRx2BD
pgSvzPN5eFHb/SduPz6f6j8/JkfPg8GOXO0TCIOQM/qLebnzwPmiejxvHwbt
d3c/bKbPg3PWg7EWZQwwrpHtZgvz8Dbc/TamhIHni5j6XlYGBDdZv3+giMEm
TGj9pAQDjhjmeBnsxsDuJyF+tSEDpl1anovJYzC/o+qLegYDWGoPlEdtxqAy
x9u2opgBuux20WXSGLzWQlzHvjHg3uybwjEpDPafTT1pOsCAmRNd149uwsDX
N7THRXgBEgvy8/dtwMBozXG/5c0LsPhyf5SnBAayrzm2eSssQM1gpNJXcQxq
Uu9ce6q/AIaaKdstxfD92HGJnOi+AKHlN4LKhDHosxaL2e2/AGaHvXdvwZ01
2XQ4O3QBdA29qf7rMTjLrvukLGUBDhvKLJ8VwiBaYafE7+4FUOVLzN8ogP+H
P1xSE9BehDE2ldidfPj+tV64mHByEboiK3TT12CwW3P+/oGLi/CTUZ2hiluR
MN1gd2cR3q8zTTjGi4HqtWGHwo+L4Kd83vMFNwZqxwaDTn5exOffvmUnbpDr
zxqsxZ3f/7CKC4MDfd20tUOL8O21YQ0b7kMmra9tNixB5H9ZrmGcGBxWaSle
3r4EPxzOHtfErbO2aSBo3xIgM/8t4xwY6NfWK+afXoIPRRkRR3AbHvxavSZw
CRLH3ULFV+H9IFE+GRu2BHzxegrN7BicWioVUotfgmIHvltPcRtlFFlYlSwB
7X3VIAduM9mspRzGEmzcU67Py4aBOVuGpAHbMhwYaz7WyIrBhd6Ph/+sXYaJ
TfTsV7gtIpKf8excBmXVmrdyuO344uQsrJYhbuzp4jkWDBzG3hkyri/D9bwf
F7fjvlwdfeOR1zIQJQ1nl2kYOPlGlGa9XoZjNcZ+0bidF0JMuX4sQ3Xd2Yh5
KgYuzcF3o38twxufox/rcN9IfxqvMroMHF/8i9/jVsvQYiRTCei5tE62Ge79
TupareIE9OnDvOMPCgZFZgda3knjdn5ckIb7wJH99o5yBBT6SbojCPdBWXhK
UyUg1xFF11O4tXr3dMifIqC0rQkRPWS8vvrvQz5nCeh1DHtSJe67BQ7z7RcI
aIBRczwNd+GLSH7/KwSkIOJ0/B7uvUfYdfv9COjZlsa6bbiNVKPPoEe4E7P3
CuJ22aJmGfKMgPjuXd5Axf2R7OSpEUVA7J/FTNtJGGzPaM54k0NAGTWF6s9w
67+9WjpbREBJaxqO3MNt94Tz+5FyAtLoaC2+hjvObj998Qden7RBpyHujRJx
m4zoBDRc7vFKEPeB1eq7kqcIKIL3evIq3GaMVsS6QEDeB9OFl4gYvPrBbZLO
SkTyBJmx37jX3Xd5wruBiN4k2Zuk4lZ05o2w3kxEr+15pmJwG178kFAgR0T8
3zY0hOF+rNZZ5rCXiMLXtdj44F41obVcYUhEpppxyedwb+3s4thgTETHbe6Z
ncR9qOqmkOt5ImLL0dPRw30vJklB2oGI3gWSavbiXjZeZ+flQ0T6p/Ss1+MW
1U52bfEnoqBPb76twa2qqOOzI4iI7H5b2HLgduW+E9kRQUR13gFySwQMJop7
m/ZmEdEi+7f637h5U9x7nxQQ0c2G2Zg23PLhQpP9pXjekeroRtz2rvpcz+uJ
iCfnOV8l7j/b0jUmh4honeC5lHTcG27ZX5KZIKJeXduKZNwmlZL3zOeIyNz4
ESkBd63N0+JaKgnFveWujcKdFXNFPUGUhDZMH/n6BPfktPSFbkkS3q5WNQG4
5TQ7PNfLkNBtuc7h+7ijuvWK/JRI6JyeibMX7ocSMvstjpIQef7i++u4S6/8
Mnt1koQIFkqOTrgJBaHu301IqJ/zne5l3NdNWQsOWJOQ1wmlA9a4TV/2qIl5
khDnl3FBU9zPB8JMT/qS0I3h07eNcderGN72DyCh+GyrydO4DzUV5TJekFCd
VdEaQ9w7+CNUm1JJ6P3EyzU6uO0unjLhyiKhuWrXuUO436WudtMsIKGi7Nxh
TdxCBrey0ypJiCuUTFDHTQk02vO4h4RYXL4X7sWt1s5jVDZIQtPRYjx7cLts
K3ddHiOh4X4xO2Xcw1+VMu2XSEjFlPOgAu4GVn7lw+vI6MD9N1e34+Y+XXnK
Q4SMNjr6C8jhPhzj5ZyxkYwUh2dKZXHna4ynS8mTUflmPdiKO9azRoGsTUaO
2vYhm3D/+uZ9Ys8RMnor/MlDEreIhNp1xxNkNLOYeHUj7if5H9I6zpORHOdP
ewncNxf8duXcIKMbdeUfRXBXX7sQdMODjNbKPCkRxi0+rDql7EtGms/etK7H
XdxGT/8YTEZR5fliQrjXnixfdy2MjLoPWeoI4raqjnTZGUVGtQo+twRwc+Sf
2JOEkdEukuPkWuZ6KW1/af+JjGJvtyszjSWxLsjk4fkfr/Lix30iIjs39isZ
qdjNSfPhfu0hsT+yl4x+FHxK4sE9Ojf/xmyYjBImPogwfcDpO0lsEr++tPkR
N3M/m/sUvyRSUIvqNk8u3Ht+mm0yYqWgpMirRKYfHt/jLcBFQfUquXdXM/vj
4LBWsDAFyRt3PuPE7ZlTGnt8IwWJ7LmzienvuyPYeLdS0Ma+9584mOu56fjX
ACUK8tY/0LsKdyEtU9/XgIIaF59Zs+Pmu/MkSfMMBbkZ1vEwbTFjy001o6Cp
qh85bLjZ+0TrPOwpSFO3Q4hpE7PZnegaBSmOZFex4k5s+vZ06QYFuXRzejFt
UH73xE1fClp0KZlkwR293zRdJZCCSvRpyUxPZyqtmw2mIIlOp8tMv4wfaLoW
RUGPLR+M03B3Pzhq4pBHQSfeznMxrUjZmitbQkGnDjb8pOL2dSOLDn6loGh1
8zimt9mnd1g2U9A28kltpt17ApFUJwWNckWvZ7rurPWb7l4KMuS+TKfg/k9f
+ML5SQqyCtd9yXRZ6dRnMQYF9Vsdusq0ENRIthOpKP7ZU12m87Z79hpxUdGo
6giJaRaePmvDrVQUXR5xi8ysx8dEI1yeihy+U88z3btUKz6gSEXy8noaTJcO
ZTbeUaeiMkkrbqbTL8ilVmhTUdpPuRkSs19bIgP4j1LRDpG8dqa9yx5ovDeh
ovxrohjT/wFBYtqcijJ4ukOZtki/toCsqSjpoPFdpjWjz6Y2XKeim2raxkzT
3LdLkAKpqDM0hJvp6emoBd1gKhJvN1kmMvPZCzSFvKSiHNGEEaZLjYmB22Kp
aOuPtmqm0+uu27gkUlGRcno+0++0BzQ+p1GRuxNbMtPeSvULpwupSNOHJ5jp
/xK1mqK+UJGkUr4P0xabclJHqqhI+1LzDaY117y1udtCRYU0TXOmafT/mpIm
qEhANU6B6elLg6nzc1RUQrog8zdf67lADQINzex3lPibr+KQ5k8OGrIsdV/9
N9/+XAmpNTS0dtUt6t98GTsWrwjS0IbSzwsEZr53Qmk0KRpisZUeYvo/kcDA
Y7I0FNkL3UxbBJFtw3bSkAAjtJVpTc8hiZ1AQz5l7NVM00zzAs+epqEyzbhU
pqe/77SNNaWh5UvPE5ju1YnRnLhIQ8gwK4bpUpVHi76OeN59j8KYTscozfXO
NHRh8/4Qpt9Ju6aJ3qYh7nzRJ3/z8Zvbpt2nIb0jRr5/8z1s0Fx+hNf39KPX
33xknQ2HQ2hoo4Dynb/5xnY1d0TR0O2BhP+YplZRtVbl0pAWY68l03ycu9yT
Kmgo/1TKOaYl9cwyjzfREOfj5NNM7/b3H5/poSEpJG/A9MGqLJmwCRoKfbVJ
l2lDzr6LiMiCzJz9NJm+oMf/uns1C7okbbifac+qy9zbtrKgnhmiMtORehWe
1zVYUN5dxnamC6skp3LNWJDu/JotTHfq3bGkubGgVxckNzJNqG5u1g9hQZ5D
7KJMQ3VAXkcVCypr6eNn+na1etQVCitibxzhYjqnetaHuJcVtX7xX8U0ozrB
7okjKwotMmJl+soaOfUmLTY0661JYrrnVKKgqCg7kmzDpxv3misB6hM97Ijy
fstf7/d1sC9LWIXsiKv+2vbz0+x73hyo1Y3018FLGWzq5zhRrB/hr1041d4H
blmNosX+Z2Phz7qtE6sRgeV/3qPvz8tTw4V0if8zR4HM0IYT3EiV8D9nzPde
ySvgRhz/70sKkVNnZHkQ4f89coZTMvfRPzvfdjEQn/rnewNP66ureVesu5Ur
luPFmhX7JygW6J7nW3HF8aiFayr8Ky6ouvxQlrx2xSk2Hqiy7Z9FdUDZIW3d
itWXTbzC3QRWfLEhfzzjhOCK1Tw8P54XF1rxk8tj2Rx//vmX+9ve8Lz1Kx68
lHmxyEd4xaP2vCxV50VWnKj9dcFim+iKe63kFclT/yz0vuWpT5XYir3MnCKr
dMRXPLMg6K+T+c+bs0NCKyQlVqxwoeQIj98/F4TxC1RO/fPmAv77+sYbVqxH
HRKpy/vn0Z/dn8u3blzx5TD/NX6B/7z2kJF38Zd/zpuQmlte/uf/AzKWSTM=

            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P\\), \\(_\\)], \\(n\\)]\
\\)\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None},
         PlotLabel->FormBox["\"dist=\[ScriptCapitalN]\"", TraditionalForm],
         PlotRange->{{0., 9.999999795918367}, {0, 1}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic},
         TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], {193.5, -116.80842387373012`},
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
        GraphicsBox[{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
O+EwoCeMjuvos09JP722tK0qwEQYh6+27qytYMDTT203rjsJ4/4oB1f1bAaM
HuJXeXNLGKPvSe6lXmTAmdCzNorTwnh72ERueQ0D1gyH8EXOCaP23HjP3CrS
rw+FfxxZEMaM3RgxsZIBehuj9V+xiqBb03xNvxwD5n4/WHlASAQp+9dyNwox
4NyhdxPX14lgnvbUoavjdAjV5bw76yKCR8KVAz7cpYNGOq+lk4cINnjo3xKJ
oQNNUJDrg5cIGjmse+xxjQ7wW/L8nRMiWGxR70u9QO7T9LVu6y+IYM+3wXC6
Jx0uCVrquCWJoEpQ7uLHrXSIGLrb0tAggpwuLWb7h2lwpa3/y0KzCL6j3HvL
Oki4ZnP1mu8iyKp6eaSil/i/1M6CS50i6Cn26ZdZJw1CbZRjNg2KYNJMix/t
Cw2CKorMUimi+D6uSpXrOQ1OZ7HjV3ZRPMyS+PdwNg0C4w5snuMSRTX12LWV
ZL4I8JtfZSNAWG2QJSuFBidWGrFxyopiyraPbJRbNPCKbn7jqyuKb+bnv88F
0eDoGeUX9zeLoqpv0TPBQBp4up9+/klfFCXXmK7ROUkDdwPpB0qGovixrNk+
jfhVlwnns98tRdFAnOkv7kIDZ3rRCda9onihqmj3XSfCdexHNfcTlsyzoDrS
wOlJtm2UvSgKe23863CQBvb2f7S3HxXFxtlzfmesaHDI1EjN21sUNcodxo5Y
0MBON04p0VcUr83zLNruosEBAT2h8VOiaOIx0Ou9kwa2C1Fc1DOi2KxyvyVq
Bw32D3Yu7Tonii1bV58tNaLBvuqwkcyLohjSYcm+BWhgk9/c13xZFLUWVf7F
bCecrNy1dFUUN/jurp/YSgProE9f7G6K4i+1U8J9ejSwUBPM5rsviucXQ3t9
dcj+ak9kr00Rxd9OTU5btEl8PJuyd6aJ4soNbw+IaNHgYvrtnItPRLGNXadu
mPj3mziRk5IjipsoWdaj62lwn2bztOK5KD4+dvvIP3UalMiIPZsqIvFd5bd6
xzri38sCnwmXkvNuMOg5r0aDhgPfn2mUi+LoFtxQtZYGnVMbn+9+TeLf7Ccs
RnjwTsJzr3ei+G7W9WrgGhpMb5h9HlEtio9098f2kPmUtfFgbvoHUfyvVErd
ibCgb1nuu1pRjDq5yvHnahrIrZDO6/oqig8NYqihhNfmBOf9bSD5YeMMWEl4
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
HflesZ9j2jr1sWcdKSyyFyXxcT6stKjaq+dFQT/RJW4kkGOrhOO773lT8FOS
azdHG59YHbDFh0J/fAY/JoBjpk8qfQ75U1jwT1fR9E6OgUuZ64M9FB4simx/
54v9HnyD7YjA5z/27i8NnIdOil0WfZEU8rQW9Ju6c8ylQts85jDWR2dBnhPm
ve0T2cb5URSaJdXqonGe+py6pDd8gsLAytj4apzH+7OSlRNSKVhuzLvdgPO6
RVxn0P4shSP71L/k2HNsaWB1k/x5Cv7bQm5EbOTYe8Pe2LSLFL6MRDdo4Lzf
/hiGMrIpzM3boeKA58X6f0daCkooHFfw/W5riueBnXtc/WMKH09ZPvpGMO+X
DvnGNVIwHbE1zuJx7NnceEu7ZgrWXHTxWm2OJXZUjjY/pdBTpMpFauL3DFPw
f/EPhWMq1wUf5nPsc/Z91tVNIWp7X2ixPPaLpNvCvB4KquIhe9bJcSxvd//Y
rl7s35Yws9ez8PwwUi/79JlCepXzhRl4vr58EqYxPEyhPn4i10ecY4YrZCcq
Rij8reB/ZnBayFLOX3sR/hX7cdkpvtZ3Idvo3XpmYoJCt25OzbFxISuo8w+o
nqJQmbAzq2xUyKT0ptZFibD+TUL8uGEh801J07T6QeFmxkk95UHMkyNLJqen
8f06esvZ9gnZ/wG3m25L
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
e//I+4LaggIURRz5mGTAWMqC4TVBzmZrFPFfZ2dn2moWjJwU52O4KWKhQH1D
1mEWuOz57TProYjhBsePTB9hAXNTcdNqL0UsWF57dac38WOzJ5+F+yjiA/cE
jmI/FnhF1BjhRUXUmk/ZHhvMgs600KtvYxRxWcm015k4FljfODDw44EilmrF
bgr8jwWFx7X2Uh4p4vuATP6gBBYkbGhfcTJFER2r0ccvlQX2xXplalmKWFll
+3ZZFgvq2oY446sU8Xu++BeHchbsLKo4Vk1TxMsM6Ty+KrKf1AT2FEMR3a04
DLNqWBB5zCzFrlERxR2+ifYxWWD89ykK/1BE86uVFkKtZH3xQ5dCZxTxYqBv
Ee8AC9ZObfyVNa+It9lTjkZDZD+tgtYdHFTcXvktMGiEBYHJ+dStfFSMvBI0
3zDBAl0tycJxCSpeP33OTm2eBVmmtXNH1lKRQefmMRdiw5pvr09eW0/FMYbD
F07SDz0/HfftyUYqVtzfePe1KOlXH7kVd26h4vt7qf9Nkv4pdvBvmIMxFX/c
9clVWMYG8SsdEwGmVKwR5X18V47079Jlng8sqHjpoZXigjzxAxBl0mhLRVS8
mfWZSvq3u6pLrVyoWHny98qmFcS/rBQMOuFORdZxzyzelcT/FgwPRHpSsX5J
zVUtNeKXfhYwq45TkZ51b/7wKjYMnk+GXh8qRqTV3T21mvS3QuGveU5T0Tog
9cA54o8P6+y5px9AxXeXq5w9NdnQWaPL7XqRikbsNTHWpD90clbwDwmhIudd
s5/riX/ef/3Xvo9XqZgxNf6hZR0bGuQZla3XqbiDwdZ7vJ4NNq9z9KYjqTj4
ifLJ6f+/f24NXqZzl4qFKuerPm1gQ9XJw5F2MWT8gJ6Jy0Y27OIynT31gIoy
DpGF04RL4rRO3Imn4jmpMxoRxJ/vXCPZkZVIxbVJO25QdNjwseifJSOZikk7
Ln2JIrx57/fCP0+oWBcsTeHRZUNuX/k6wXQq8m5Yo+tHWDs4I3lVBhV9g7SM
Gwhnid0RM8mk4k/W151r9dig8ezsFc/XVGyY2KgUQjh9q+N42Fsq7p4L760g
rFqHHql5VFy6yzuGZzMbUg6rfSn+QMXfXp9XbSVMnV5q/P0TFUW3v3hyhPCj
W6N580VUjMt9vCSSsKxKs7pCGRXlvzlapxGOfffp4dZKKiaU/7j8jrC4WarA
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
Lx6fnMQgry0wv/JSRP4Hn3KI+A==
            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
6LzFlcfdiwrvna2DTSPIGPlv2uHTHSr8x6S/fCWKjLxNb2wl7lHhbaSy0+NY
MnJdtPx3nOjPNbeJfM9LIOO5BEnZqz5UePVm6VhTEhnjBic++vpSQe1Eb+Xf
l2TUcUxYvetHhaKh2h1c6WScsYnPtvengsqdrCTFLDK6G278onGfqKfgY0G9
XDLW8m1wXiN4a9o1X9sCMspJ6HnmBFAhff+5GT8aGdt91md0A6mw6RPaJJeQ
kZPD/VsTwS+s5dur6GQMF/FTPvSACuRFbt3e12T0ym0dTSI4LmSqZPUNGYss
3oqNESy+oVNBuoaMV0h2uZuDCD8Uv47eX0fGHytR1CMECx1J5jzTQMazKsOK
5gSH/Qi8deMjGbc+SRc+SzDPVee/zz6R8bt1z/X/CA5iNzUv+kLGUSaDU1IE
s8WrNX1pJ6PftWvlP4j9fHeSNae6CH8yhqeFErxey5zP30PGvIKIjdsI9joz
LKvcS8bmpi37ioh8FseaHxv8IuppWjK8heBrvkWMjgNkTDU9pRtC6DEtFuse
NERGX+OfZt8IvVyz7/1O/0vGv097N5IIHgXbE3XjZNzs+LQMCL0HHXbuY54j
/JCR5XKKqM+EYLqe7SIZazKb85SJ+i2Wy5x5v0xGbY2aJxNEvTl5ub0eMsmi
g/yvEGXCD0IlPo/GWGXRyKulKec2FSQvLCYe55RF08MizKK3qKBUOPBWWEAW
E1fvpL0k/Lf3rHnrNWFZHLw8+F+jB+EX5tb+TjFZbKzZrPaN8KuRWRV7vIws
XhZ5Ffia8PfVpdhjm7bJ4v5bh//csyX0SBa8EKAsi55FzForVlTwP/rAbUhF
FjPnS75bW1IhMuHa0xw1WdRK8LCYO0uF8kNGX/foyiLlpJfl5uNUqBmpG4nU
l8XoBeXodeL8fnx6cGXRQBZ9znfvqiPO9/eBrbIVprL4JZBbRUKL6P+CWW11
Lsric32G7u7dRP67va6n28jiKuOeXOmdRP4904GcDrJYP35gn4ESFeSU+7Ka
XGTxcIIv5domKuh+KZ8085LF9nA/zxlhKjySdPOyi5LF8jby+SbiPousGXxU
HyuLH9+pHmL8WwiJTuefb02URdtgzZXNg4VQUHmkejxFFnmf7f6i1UP0Z1ab
OW5QCX2ONIm0vC8Eyezup4FNspjs+oHFMb4Q3FsTf+W3yOJTM9XHCsR93LBs
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
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P\\), \\(_\\)], \\(n\\)]\
\\)\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None},
         PlotLabel->FormBox["\"dist=\[ScriptCapitalU]\"", TraditionalForm],
         PlotRange->{{0., 9.999999795918367}, {0, 1}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic},
         TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], {580.5, -116.80842387373012`},
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
        GraphicsBox[{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
ntw/vvMm+f//I0AKOxASPZbcPzQD/BE=
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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

            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P\\), \\(_\\)], \\(n\\)]\
\\)\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None},
         PlotLabel->FormBox["\"dist=\[ScriptCapitalA]\"", TraditionalForm],
         PlotRange->{{0., 9.999999795918367}, {0, 1}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic},
         TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], {967.5, -116.80842387373012`},
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
     ContentSelectable->True,
     ImageSize->{879.9999999999826, Automatic},
     PlotRangePadding->{6, 5}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8703692455051355`*^9, 3.8703692496848345`*^9}}],

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"ProbMinusExpectation", "[", 
           RowBox[{"dist", ",", "\[Sigma]", ",", "n", ",", "1", ",", "1", ",", 
            RowBox[{"1", "/", 
             RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
            RowBox[{"1", "/", 
             RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "50", ",", "5"}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"dist", ",", 
           RowBox[{"{", 
            RowBox[{
            "\[ScriptCapitalN]Dist", ",", "\[ScriptCapitalU]Dist", ",", 
             "\[ScriptCapitalA]Dist"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"1", "/", "20"}], ",", "10", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "n", "]"}], "/", "20"}]}], "}"}], ",", 
      RowBox[{"Filling", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Sigma]\>\"", ",", 
         "\"\<\!\(\*OverscriptBox[\(\[CapitalDelta]\), \(_\)]\)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"\"\<n=\>\"", "<>", 
        RowBox[{"ToString", "[", "n", "]"}]}]}], ",", 
      RowBox[{"TicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
         RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Thin", ",", "Thin", ",", "Thin"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868478376776422*^9, 3.8684783783883753`*^9}, {
   3.8684784187974925`*^9, 3.8684784391728086`*^9}, {3.8684784796842813`*^9, 
   3.8684786410205126`*^9}, {3.868478672956452*^9, 3.8684787593460255`*^9}, {
   3.8684787985954266`*^9, 3.8684788420107794`*^9}, {3.868478888610402*^9, 
   3.868478891123629*^9}, {3.8684789687454157`*^9, 3.8684790419443617`*^9}, {
   3.8684790750720444`*^9, 3.8684790814000406`*^9}, {3.8684793172801437`*^9, 
   3.8684793219998136`*^9}, {3.868479388774146*^9, 3.8684795536451187`*^9}, {
   3.868479585183442*^9, 3.8684797530677824`*^9}, {3.868479784183166*^9, 
   3.8684797868833237`*^9}, {3.8684798336371584`*^9, 
   3.8684798438709764`*^9}, {3.8685028490193787`*^9, 3.868502849155239*^9}, 
   3.8686314668786244`*^9, 3.870303927693602*^9, {3.870319064924638*^9, 
   3.8703190652118516`*^9}, {3.870319570056588*^9, 3.8703196040310726`*^9}, {
   3.870367803703134*^9, 3.8703678090296497`*^9}, {3.870370176179254*^9, 
   3.8703701824737773`*^9}, {3.870371139627761*^9, 3.870371170058447*^9}, {
   3.870371202987564*^9, 3.8703712056338367`*^9}, 3.8703713683528156`*^9, {
   3.8703771525405216`*^9, 3.8703771586422415`*^9}, {3.870377504336873*^9, 
   3.870377504536668*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[{{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], Thickness[Tiny]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.0038500000000000006`], Thickness[Tiny]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        0.0038500000000000006`], Thickness[Tiny]}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJxd1HtQlFUcxvEV8IKiclt2YVnYfddbVsqMMwkInCfECAVkUdPUSUWgHG8k
gsYuEVbWOHlBA2+MF0oZRKkR0sEZR1NLEDRHxbEWkOUmpXHJS2qioftefocz
8/5x5j3nc7777rtrTFqdmOKsUqkG9F1VfZdT37Vn98tRwp49OSM8L2xnjnkl
ux1zONBtezub9GqcZ7qCUzfyc6T71ezu9u0XZqS0M9WrcZUl609H1UZK66+z
ozEfdFRq2lnqq3GTHfJM32tvaRP3/86KVyYXLi9uY5drX456lhaZGT9waZvo
NbH7ZmtDp0Zab2cnfl00ru1iq+i3sMmZEbaeta3i/lbmfOjykknGVvG8dlYT
sSup9EqL6HUw7x9aJupyWkTvT1Z0/+C8rj7H4d1lQWPDXYI7m0XvHjt2o2zv
kbJm0etkwoTxa0oymkWvmxXZ827GT5XWd7M5TnGnPtE0i34P83lRU/FHj13c
/w8zfFi4Q3XNLp53n5VP7uhYetIueg9YZOO2tz4+aBe9Byx96S/r8rbaRe8h
m+3zxr2gXMl7xDw8ncdeyJC8f9mxuoqcmhWS95hVR11U16VI3mO2MTr9cPZi
yXvCqrVVmWkLJe8pi5mUsCP1fcn7j0Xf27d/9FzJe8Z+uvFX6qdzJO8ZKxm/
afaM2ZLXyy49dO1ZNUvynrO757PXXUuUvBfMt6t3S3Ki5KkQK4RN0CZK61XI
6Mg/0mKWfBWmlXZ3nzFL+wdgfe+J1mKzdN4A1DtNa9ppljwnVBdUmDebJc8J
9odeqzfKnhNU3Zm9ubLnjJCCpjE5sueMbecOLMiWPRec3bwwzCp7Lvhy1Neb
LLLngmWX8vUW2RuIK8JXtizZG4jlSS3lWbI3CO558wqzZG8QNjzN3ZIle4Pw
sypjY5bsDcaG6Gu5ijcYUQ/ezFG8IdCv/TFb8YbgyVqbVfGGoPRsilXxXDFq
0Wir4rlC/4WTVfGGIu1ml0XxhiKws82ieENhPdVkUbxhSBvUaFG8YVhTVG9R
PDdM+NtGPDdczbMRzw1Tkm3EG47KOBvxhuNkpI14I5ASTr0RuBVKvREoCqHe
SHiEUG8kLgdTzx1lwXS9Ow4EU98de4LpfncUBNPzlLnD80A+53ngW85T7js8
Ze7wlLnD8+znKXOH59nP8+znefbr88JOzvOS7zs85b7DU+YOzwu7OM8buznP
W35eDs8beznPG4Wc5419nKfGfs5T9/s+1Pie89Qo5jw1SjjPB0c5zwfHOc8H
JznPB6c5zwcXOE+DWs7ToI7zNLBzngZdnKfBC87Tyu+nw9NiTAj1tGDc+6vF
ghDqaWEJoZ4vDnCeL2o4zxdPOc8XQdzvxxcrQ6nnh+Oh1PPD81Dq+WHWFOr5
oXwK9fygC6OeDpvDqKeDK/d71mFHOPV0GBtBPR2qIqjnj3RGPX+8Dur5owvU
88eZt6nnjz3c/4seOVOpp8eqKOrpkTKNenokvUM9PVKjqReAFe9SLwDpMdQL
QNZ06gXAOoN6AVgfS71ALIujXiDi46kXCGEm9QLRPJN6gfgmgXoG+JvJel8D
tpqpb0CrmeyPNUCTSM8z4LVE4n1mgDaRnm/AHeqVG7CberUGBJmJ125ABddn
xMQE2mdE6UzaZ8Rk+vlijbjDPQ8jrsfTPiPU3PMx4jfqlRsxjuszImEW7TMi
6z3aJ6BtPu0TcGsx7RPw3Ue0T8DBNbRPQGgO7RPQtIX2CVAX0T4Byyppn4D1
dbRPwKNHtM+E/QH1pM+E6XH1pM+Exs/rSZ8Jc8/Xkz4TqtwaSJ8J85c0kD4T
4s41kD4TeoMaSZ8JDWWNpM8ES/ht0jcKXzQ65v8DKnR8WA==
         "]], {}, {}}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJw91ntYzPkeB/DpssmY0kzTTFNTc2uPdkkd2ZKs73tROC7VSckle4zKJbQr
5bI8OykVrS2XjkUuIWkezmGVxBLFkR62cpmVpEY1SyhsWl3Usfw+fZ/n98c8
v+/39X1/vp/f8/uNShv3z2gLHo9n9v6qeH+Zv7/27vlrFDB746G0nhwT+/i7
hOXWq/n2O0zM+8MoZ3ZOn70u+Z7u32CFd2briqNNjPdhVDPRovOXzk+k+XfY
ElP9T5EyE4v5MAzM4mbNF56mFm59LRv985VDJwpa2K2bf42HTLI/NzlsUQvn
NbKq9HdzfhHRfCN7rS/qyCxu5vwmJikZbvUopJlb38xaL2ye7Pi4idvPxEp7
IjsjljZx3hOWkjc0/MDTx5z3lH1+UFt/L/ox5z1jR5r6bzcbjZz3nAXl7giI
0xo5r4351c4Pin7eyHkvmYa/Qh+W0sjNf8muW881tHo0cv4rtjZrzfT/GRq4
9a+ZEA1rX6xv4Pb7g3l7th6rDmzgvA623eeAtM6ngfM6WISUd8X5/f2P3hsW
yKu2GBRHXifbEzRKPewEeX8ypX9Nx8K35L1lIzbd8tk/jPK9ZVqfY4cTwilf
FztZZRQr0xo5r5sVvf0a0881cl4Pu8073dX1hOrtZeeOxrsyRzqfXuZVI58b
F2DkvHfMYUeQe38cnVcfK4+54BG128h5/cw1MfWy/wUj5/FwXxpS4VRH83n4
/c+1vsc7yech/IfCLd/bUH/MsKL95egQBfXPDAFP1hQVD3/MeeYoLd9zRDvq
MeeZI8tBPb/3/e+Pnjluzbzc+4UHeRZw0s8MbVOSZ4H8Sek9clvyLKFuidnS
1UH5LFGanjxSbKB8luAvaIhY+DPV9wkEffyM8Rl0Hp/gB+GT7sVaqtcKgVmH
dI/8yLNC3OT7DbvtybPCPy69ma19Rec/CLctFWeP3qV+DcJ2XTafXaJ+WMNy
YX7xv/9D/bOGNXumy8qjflujymt/RPVh8gZD4GpafzqPvMGI/dy6YtVJ8vgo
iG4vDCohj48/6jK9UivI48PWr6Rz1gPyhsCq7HaItI28IWjpG9fwdwuqV4BZ
w5I3y2RUrwDlZm4uIZ5UrwDHbVrbVgfQ+dlg2urIKdJ5dH42GLJkeEVtHHm2
kCVGK1Ymk2eLzDvrd+myybMFz01TWppH3lAcuWjn+9sZ8oYiet2Ii2ml5Nkh
E1ZdCRU03w5WOQmHQ34l3w43dXcf1lbTejsUyZrF5VW0nx2S7uZsf1hJnhC+
nfvGdF4hT4gZvqfXuReRJ0S+x35JzlHyhPivcarT9SzyhBh/5nJg5HryRBi6
NVW6UEueCLmeXmHPp5InAn+57KeJo8gT4aG0UJUmJ0+EZxvfpugHk2cPt7P1
42O7qX/26OZtXiJtp37bY1rTqfzK36mf9mgxjyzTNlP/7bFu8cOJ+5rpeREj
paBSOOQJeWKMEplhSht5YuwqbV1a30meGDWGQP8FZpRPDL/edX2LbCifA66O
6dqa6UT1OiAhbYNogzvV64CUkS8uNPlQvQ5QGBKWrQsgzwFPY1YceR1KngSi
2MoK4cD5SWA76013zsD7SQK+90rDzA3kSeBjtVzflkaeBGV93/44dQd5Uii9
j1cI9pEnReuMRdbSw+RJ4RqbdNUhnzwpAs9XLr5XQJ4UKw9NO+uiJ88RY+/Y
7jyfT54jspL08zIGPEekPhNuTtlLniPa3cfHnsskzxEXDxyUf7OJPBmq7UtC
ZfHkyRCb+LdrMwa+XzI8+tfqOmMweTKkn0lPPc3Ik6Fu13eSHE/ynOA/TbUs
TEWeE7RPvx0T70CeE4Ku6wXBAvKcMMl+WZLAijwn3BjcY7XHnDxnrL3Dn1Jj
Rp4zvtoZLk+xIM8Z3YYOeegg8pxRNqPPsltAnjNMh750GCEmT45lrjfu75GT
J8flMW4B/Z+SJ8fefWfuy7zIk+NVT/y+grHkyeFvEbVpYwB5LggdYbMpIpg8
F7yY2zHfbh55LjBkJ7otjybPBcErzv42OY48F0y5V8ti1pLnii0vgyce1pHn
ilvJs2KvpZHnioS9pZOObSPPFV2bgnYP3kGeK6SG9vZru8hTQFLme0ufTZ4C
w8OmembsIk+BVyf0RydtJ0+BVTHJHlUZ5CmwceP3E+Qp5CmhzxVdW7yemy9T
orA/7kHnSvKVyA7UNI3RcuunK3Fq94qL12bRfkrkKmVREyZznk6Jev8555aO
pf2V8J2UnntjJOedUWJs39HeVjfKo4TWXOwnceE8kxIzx2u610gpnwoRggVJ
YjHlU8GjOGjVbRHlU6G/s/hKKn0/p6vg5b7qzbuB51MFi5j7yl4Z5VNBvS1q
9kQF5VOhwbGw9uCnlE+FOWf9k2pGUD4Vzg0/6Z0/mvKpEPxgaWLHOMqnxrMH
9zyT6P+PTI2dFTPEI2dSPjXCqsv7fg2nfGr0GuKtx31N+dRQdKyumLKY8qkR
5WzbfHcl5VMjtMrjbmEC5VPjlHP+L5XfUT41UHRya7OO8qnx2Zdh8fUD/dVg
W5K74cc0yqfB3NrCUWXplE+D+KvHxmnTKZ8GcdqsixNSKZ8Gdd+EC+fS+0Wn
gS4tzy1v4H2pgbfC78jogXwa7O7NnofllE+Dk/WR5S70/jFpEJU4NsN/NuVz
g+09dmDYdCP7P5nAbgk=
         "]], {}, {}}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
12C/Isg9LA2vS8Z+zaHXKmp/2sz/0/8FfgKBRw==
         "]], {}, {}}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesLabel->{
       FormBox["\"\[Sigma]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*OverscriptBox[\\(\[CapitalDelta]\\), \\(_\\)]\\)\"", 
        TraditionalForm]},
     AxesOrigin->{0.05, 0.4281761461601155},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     Method->{
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]},
     PlotLabel->FormBox["\"n=1\"", TraditionalForm],
     PlotRange->{{0.05, 10.}, {0.4281761461601155, 0.7066684925531511}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}},
     Ticks->{Automatic, Automatic},
     TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], ",", 
    GraphicsBox[{{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], Thickness[Tiny]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.0038500000000000006`], Thickness[Tiny]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        0.0038500000000000006`], Thickness[Tiny]}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
Oofx/wMU1uvS
         "]], {}, {}}, 
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
         "]], {}, {}}, 
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
cRFc+DcB7S7m
         "]], {}, {}}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesLabel->{
       FormBox["\"\[Sigma]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*OverscriptBox[\\(\[CapitalDelta]\\), \\(_\\)]\\)\"", 
        TraditionalForm]},
     AxesOrigin->{0.05, 0.25727553028593597`},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->{{10.979592, 15.368421}, {10.574441, 18.894737}},
     Method->{
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]},
     PlotLabel->FormBox["\"n=2\"", TraditionalForm],
     PlotRange->{{-0.1562394778460764, 10.155734414457742`}, {
      0.2478699999787378, 0.7181465153386466}},
     PlotRangePadding->Automatic,
     Ticks->{Automatic, Automatic},
     TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]}], "}"}], "]"}]],\
 "Input",
 CellChangeTimes->{
  3.8703791707594943`*^9, {3.8703794867939653`*^9, 3.8703794884762325`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<DeltaDists.svg\>\"", ",", 
    GraphicsBox[{{}, {InsetBox[
        GraphicsBox[{{
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.0038500000000000006`], Thickness[Tiny]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            0.0038500000000000006`], Thickness[Tiny]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
            0.0038500000000000006`], Thickness[Tiny]}}, {
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJxd1HtQlFUcxvEV8IKiclt2YVnYfddbVsqMMwkInCfECAVkUdPUSUWgHG8k
gsYuEVbWOHlBA2+MF0oZRKkR0sEZR1NLEDRHxbEWkOUmpXHJS2qioftefocz
8/5x5j3nc7777rtrTFqdmOKsUqkG9F1VfZdT37Vn98tRwp49OSM8L2xnjnkl
ux1zONBtezub9GqcZ7qCUzfyc6T71ezu9u0XZqS0M9WrcZUl609H1UZK66+z
ozEfdFRq2lnqq3GTHfJM32tvaRP3/86KVyYXLi9uY5drX456lhaZGT9waZvo
NbH7ZmtDp0Zab2cnfl00ru1iq+i3sMmZEbaeta3i/lbmfOjykknGVvG8dlYT
sSup9EqL6HUw7x9aJupyWkTvT1Z0/+C8rj7H4d1lQWPDXYI7m0XvHjt2o2zv
kbJm0etkwoTxa0oymkWvmxXZ827GT5XWd7M5TnGnPtE0i34P83lRU/FHj13c
/w8zfFi4Q3XNLp53n5VP7uhYetIueg9YZOO2tz4+aBe9Byx96S/r8rbaRe8h
m+3zxr2gXMl7xDw8ncdeyJC8f9mxuoqcmhWS95hVR11U16VI3mO2MTr9cPZi
yXvCqrVVmWkLJe8pi5mUsCP1fcn7j0Xf27d/9FzJe8Z+uvFX6qdzJO8ZKxm/
afaM2ZLXyy49dO1ZNUvynrO757PXXUuUvBfMt6t3S3Ki5KkQK4RN0CZK61XI
6Mg/0mKWfBWmlXZ3nzFL+wdgfe+J1mKzdN4A1DtNa9ppljwnVBdUmDebJc8J
9odeqzfKnhNU3Zm9ubLnjJCCpjE5sueMbecOLMiWPRec3bwwzCp7Lvhy1Neb
LLLngmWX8vUW2RuIK8JXtizZG4jlSS3lWbI3CO558wqzZG8QNjzN3ZIle4Pw
sypjY5bsDcaG6Gu5ijcYUQ/ezFG8IdCv/TFb8YbgyVqbVfGGoPRsilXxXDFq
0Wir4rlC/4WTVfGGIu1ml0XxhiKws82ieENhPdVkUbxhSBvUaFG8YVhTVG9R
PDdM+NtGPDdczbMRzw1Tkm3EG47KOBvxhuNkpI14I5ASTr0RuBVKvREoCqHe
SHiEUG8kLgdTzx1lwXS9Ow4EU98de4LpfncUBNPzlLnD80A+53ngW85T7js8
Ze7wlLnD8+znKXOH59nP8+znefbr88JOzvOS7zs85b7DU+YOzwu7OM8buznP
W35eDs8beznPG4Wc5419nKfGfs5T9/s+1Pie89Qo5jw1SjjPB0c5zwfHOc8H
JznPB6c5zwcXOE+DWs7ToI7zNLBzngZdnKfBC87Tyu+nw9NiTAj1tGDc+6vF
ghDqaWEJoZ4vDnCeL2o4zxdPOc8XQdzvxxcrQ6nnh+Oh1PPD81Dq+WHWFOr5
oXwK9fygC6OeDpvDqKeDK/d71mFHOPV0GBtBPR2qIqjnj3RGPX+8Dur5owvU
88eZt6nnjz3c/4seOVOpp8eqKOrpkTKNenokvUM9PVKjqReAFe9SLwDpMdQL
QNZ06gXAOoN6AVgfS71ALIujXiDi46kXCGEm9QLRPJN6gfgmgXoG+JvJel8D
tpqpb0CrmeyPNUCTSM8z4LVE4n1mgDaRnm/AHeqVG7CberUGBJmJ125ABddn
xMQE2mdE6UzaZ8Rk+vlijbjDPQ8jrsfTPiPU3PMx4jfqlRsxjuszImEW7TMi
6z3aJ6BtPu0TcGsx7RPw3Ue0T8DBNbRPQGgO7RPQtIX2CVAX0T4Byyppn4D1
dbRPwKNHtM+E/QH1pM+E6XH1pM+Exs/rSZ8Jc8/Xkz4TqtwaSJ8J85c0kD4T
4s41kD4TeoMaSZ8JDWWNpM8ES/ht0jcKXzQ65v8DKnR8WA==
             "]], {}, {}}, 
           {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJw91ntYzPkeB/DpssmY0kzTTFNTc2uPdkkd2ZKs73tROC7VSckle4zKJbQr
5bI8OykVrS2XjkUuIWkezmGVxBLFkR62cpmVpEY1SyhsWl3Usfw+fZ/n98c8
v+/39X1/vp/f8/uNShv3z2gLHo9n9v6qeH+Zv7/27vlrFDB746G0nhwT+/i7
hOXWq/n2O0zM+8MoZ3ZOn70u+Z7u32CFd2briqNNjPdhVDPRovOXzk+k+XfY
ElP9T5EyE4v5MAzM4mbNF56mFm59LRv985VDJwpa2K2bf42HTLI/NzlsUQvn
NbKq9HdzfhHRfCN7rS/qyCxu5vwmJikZbvUopJlb38xaL2ye7Pi4idvPxEp7
IjsjljZx3hOWkjc0/MDTx5z3lH1+UFt/L/ox5z1jR5r6bzcbjZz3nAXl7giI
0xo5r4351c4Pin7eyHkvmYa/Qh+W0sjNf8muW881tHo0cv4rtjZrzfT/GRq4
9a+ZEA1rX6xv4Pb7g3l7th6rDmzgvA623eeAtM6ngfM6WISUd8X5/f2P3hsW
yKu2GBRHXifbEzRKPewEeX8ypX9Nx8K35L1lIzbd8tk/jPK9ZVqfY4cTwilf
FztZZRQr0xo5r5sVvf0a0881cl4Pu8073dX1hOrtZeeOxrsyRzqfXuZVI58b
F2DkvHfMYUeQe38cnVcfK4+54BG128h5/cw1MfWy/wUj5/FwXxpS4VRH83n4
/c+1vsc7yech/IfCLd/bUH/MsKL95egQBfXPDAFP1hQVD3/MeeYoLd9zRDvq
MeeZI8tBPb/3/e+Pnjluzbzc+4UHeRZw0s8MbVOSZ4H8Sek9clvyLKFuidnS
1UH5LFGanjxSbKB8luAvaIhY+DPV9wkEffyM8Rl0Hp/gB+GT7sVaqtcKgVmH
dI/8yLNC3OT7DbvtybPCPy69ma19Rec/CLctFWeP3qV+DcJ2XTafXaJ+WMNy
YX7xv/9D/bOGNXumy8qjflujymt/RPVh8gZD4GpafzqPvMGI/dy6YtVJ8vgo
iG4vDCohj48/6jK9UivI48PWr6Rz1gPyhsCq7HaItI28IWjpG9fwdwuqV4BZ
w5I3y2RUrwDlZm4uIZ5UrwDHbVrbVgfQ+dlg2urIKdJ5dH42GLJkeEVtHHm2
kCVGK1Ymk2eLzDvrd+myybMFz01TWppH3lAcuWjn+9sZ8oYiet2Ii2ml5Nkh
E1ZdCRU03w5WOQmHQ34l3w43dXcf1lbTejsUyZrF5VW0nx2S7uZsf1hJnhC+
nfvGdF4hT4gZvqfXuReRJ0S+x35JzlHyhPivcarT9SzyhBh/5nJg5HryRBi6
NVW6UEueCLmeXmHPp5InAn+57KeJo8gT4aG0UJUmJ0+EZxvfpugHk2cPt7P1
42O7qX/26OZtXiJtp37bY1rTqfzK36mf9mgxjyzTNlP/7bFu8cOJ+5rpeREj
paBSOOQJeWKMEplhSht5YuwqbV1a30meGDWGQP8FZpRPDL/edX2LbCifA66O
6dqa6UT1OiAhbYNogzvV64CUkS8uNPlQvQ5QGBKWrQsgzwFPY1YceR1KngSi
2MoK4cD5SWA76013zsD7SQK+90rDzA3kSeBjtVzflkaeBGV93/44dQd5Uii9
j1cI9pEnReuMRdbSw+RJ4RqbdNUhnzwpAs9XLr5XQJ4UKw9NO+uiJ88RY+/Y
7jyfT54jspL08zIGPEekPhNuTtlLniPa3cfHnsskzxEXDxyUf7OJPBmq7UtC
ZfHkyRCb+LdrMwa+XzI8+tfqOmMweTKkn0lPPc3Ik6Fu13eSHE/ynOA/TbUs
TEWeE7RPvx0T70CeE4Ku6wXBAvKcMMl+WZLAijwn3BjcY7XHnDxnrL3Dn1Jj
Rp4zvtoZLk+xIM8Z3YYOeegg8pxRNqPPsltAnjNMh750GCEmT45lrjfu75GT
J8flMW4B/Z+SJ8fefWfuy7zIk+NVT/y+grHkyeFvEbVpYwB5LggdYbMpIpg8
F7yY2zHfbh55LjBkJ7otjybPBcErzv42OY48F0y5V8ti1pLnii0vgyce1pHn
ilvJs2KvpZHnioS9pZOObSPPFV2bgnYP3kGeK6SG9vZru8hTQFLme0ufTZ4C
w8OmembsIk+BVyf0RydtJ0+BVTHJHlUZ5CmwceP3E+Qp5CmhzxVdW7yemy9T
orA/7kHnSvKVyA7UNI3RcuunK3Fq94qL12bRfkrkKmVREyZznk6Jev8555aO
pf2V8J2UnntjJOedUWJs39HeVjfKo4TWXOwnceE8kxIzx2u610gpnwoRggVJ
YjHlU8GjOGjVbRHlU6G/s/hKKn0/p6vg5b7qzbuB51MFi5j7yl4Z5VNBvS1q
9kQF5VOhwbGw9uCnlE+FOWf9k2pGUD4Vzg0/6Z0/mvKpEPxgaWLHOMqnxrMH
9zyT6P+PTI2dFTPEI2dSPjXCqsv7fg2nfGr0GuKtx31N+dRQdKyumLKY8qkR
5WzbfHcl5VMjtMrjbmEC5VPjlHP+L5XfUT41UHRya7OO8qnx2Zdh8fUD/dVg
W5K74cc0yqfB3NrCUWXplE+D+KvHxmnTKZ8GcdqsixNSKZ8Gdd+EC+fS+0Wn
gS4tzy1v4H2pgbfC78jogXwa7O7NnofllE+Dk/WR5S70/jFpEJU4NsN/NuVz
g+09dmDYdCP7P5nAbgk=
             "]], {}, {}}, 
           {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
            0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
12C/Isg9LA2vS8Z+zaHXKmp/2sz/0/8FfgKBRw==
             "]], {}, {}}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesLabel->{
           FormBox["\"\[Sigma]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*OverscriptBox[\\(\[CapitalDelta]\\), \\(_\\)]\\)\"", 
            TraditionalForm]},
         AxesOrigin->{0.05, 0.4281761461601155},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05]},
         PlotLabel->FormBox["\"n=1\"", TraditionalForm],
         PlotRange->{{0.05, 10.}, {0.4281761461601155, 0.7066684925531511}},
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}},
         Ticks->{Automatic, Automatic},
         TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], {192., -116.80842387373012`},
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
        GraphicsBox[{{
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.0038500000000000006`], Thickness[Tiny]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            0.0038500000000000006`], Thickness[Tiny]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
            0.0038500000000000006`], Thickness[Tiny]}}, {
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
Oofx/wMU1uvS
             "]], {}, {}}, 
           {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
             "]], {}, {}}, 
           {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
            0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1: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
cRFc+DcB7S7m
             "]], {}, {}}}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->True,
         AxesLabel->{
           FormBox["\"\[Sigma]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*OverscriptBox[\\(\[CapitalDelta]\\), \\(_\\)]\\)\"", 
            TraditionalForm]},
         AxesOrigin->{0.05, 0.25727553028593597`},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{10.979592, 15.368421}, {10.574441, 18.894737}},
         Method->{
          "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05]},
         PlotLabel->FormBox["\"n=2\"", TraditionalForm],
         PlotRange->{{-0.1562394778460764, 10.155734414457742`}, {
          0.2478699999787378, 0.7181465153386466}},
         PlotRangePadding->Automatic,
         Ticks->{Automatic, Automatic},
         TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]], {576., -116.80842387373012`},
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
     ContentSelectable->True,
     ImageSize->{793.7499999999839, Automatic},
     PlotRangePadding->{6, 5}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8703794984469724`*^9, 3.870379527887557*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"ProbMinusExpectation", "[", 
         RowBox[{
         "\[ScriptCapitalN]Dist", ",", "\[Sigma]", ",", "n", ",", "1", ",", 
          "1", ",", 
          RowBox[{"1", "/", 
           RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
          RowBox[{"1", "/", 
           RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "50", ",", "5"}], "]"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]}], "]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"k", "/", "40"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "120"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"3", "+", 
            RowBox[{"k", "/", "10"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "20"}], "}"}]}], "]"}]}], "}"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"Filling", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "5"}], ",", 
       RowBox[{"3", "/", "4"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Sigma]\>\"", ",", 
       "\"\<\!\(\*OverscriptBox[\(\[CapitalDelta]\), \(_\)]\)\>\""}], "}"}]}],
     ",", 
    RowBox[{"TicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thin", ",", "Thin", ",", "Thin"}], "}"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.868631647573373*^9, 3.868631650004881*^9}, {
   3.868631695069795*^9, 3.868631705461542*^9}, 3.870303935573493*^9, 
   3.870318956165249*^9, {3.870319215697564*^9, 3.870319226162546*^9}, {
   3.8703192630832057`*^9, 3.870319339986067*^9}, {3.8703194458807926`*^9, 
   3.870319467984788*^9}, {3.870319775015557*^9, 3.8703198153601046`*^9}, {
   3.870319858021599*^9, 3.870319859845704*^9}, {3.8703200007239327`*^9, 
   3.8703200350522847`*^9}, {3.8703201894030614`*^9, 
   3.8703201971710677`*^9}, {3.8703701920339394`*^9, 3.87037019345148*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], Thickness[Tiny]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], Thickness[Tiny]}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJxdzXtMk2cUBvCPFgo6Nguo2DGm4m0jimQkWp1wzlBjDJNZLgpKlAHtNDgR
uTjbIuIFxA0FFAQkMsmEAcoWQVGn4gVxCN7R4LiM3hgKQisgyHWGfu/7dTvJ
+8eT9zy/MzMkwkfKZxjG7P376f3jvX852eMDA/kdORfz2sCYi2D4XaXTaG4b
uI1PGXxxYefNyCzyfxn+Xl0w3Tq9DZjxuQGXPr6mvpNM9m+DQ+aV+oz4NpCN
TzUENb+eFRlF+jXQkZ5e5SVtg/t14wO+KRpG5E+8RxDmeG1FnSfZfwyypgcu
G1yI/xTOrt7Uftme9OvhoYfXhbZRHXvvOZyxjTqp0uhYrwGqL4sM56t1rPcC
Cr8Pyw0v1LFeI4gHg5/NSdSxXhPs8Iz1tgglXgvMPKC8vsiDeK3QI1E2d9mT
/VZQee/v3aLXsr4KLlZv/kx3V8v21RDYNKew4JSWvaeBxbEejYZoLetp4Wp2
/fWJXlrW0wL/zP1v3WYSTwcigfxscb+G9dqg1iMrpOSBhvX+gcf5QdLwAg3r
tcPk3zQLHeI1rNcOiakHk3QBGtZ7Cfk9pwO63Yj3ChwWbb60Xki8DnCd524u
7lKzXiekeVmLfrmvZr1OOFdferK4VM16r6E2VePtn6ZmvS5wcnHeWRSjZr1u
SHc9NPfXjcTTQ74q7bn3crKvB9ei7LwT84mvB3/emiu77UnfAMo6P9VLPrln
gKljteV/GVSs9wa2l6WK3FUq1nsDM77LPcY8UbHeG7C9Wp5jV6VivR4oW9ze
HlqhYr0eyGS23WopIV4veLakLoo8TbxecC8uCLTKIl4vRIXe2ZV2lHh9MCRN
w8Ek4vWB39T5na4JxHsLgc05gbMVxHsLNrb8eVUxxHsLaivnKiaSeP1w7ll5
fO024vVDSnTJ0albiTcANSvuTnkmJd4ApIZPmTEUQrwBSFwVVRAXTLx3cNxR
dtBnE/HeQc20P2N3BBFvEGocrlo93EC8QVjttvaYLJB4g5Aya/4C1wDiDcGq
zlN5c9YTbwgmJflu+God8YbhQv0r2R5/4g3DvobSoAY/4g1DkfNhPy8/4o3A
QqGs+akv8UbgXt8Ew3Zf4o1C9ILUlyJf4o1Cx+24XU98iDcKdVaJWZk+xBsD
UffIkTAf4o1B1fmxF0t9iMfg107LXKbRfQZLFdERQxLiMxjTnlGskZA+g03u
24WPJOQegytL9PpKCfHMUBnKVJyXEM8Mfxi5qC2knhkuX/qJMI96ZtjEW9l6
gnpmuKXy4cR06vGwJrNckkI9Hm4uDk5Iph4PVX12EYnU42HlNHn/furxkNHH
jiRQj4/rkmds3Us9Pi7JbJ0bTz0+Jn96ae4e6vEx9dbPG+Oox8dNYZZ/KKln
jjdSgpYpqWeOnwdVNCioZ44HZx86rKCeOYYEB6xRUM8ct97LcFRQzwK/aZIN
yKlngQ+ckhrl1LPAMHvnO3LqWWB4iKZMTj0L/DTjWIGcegIUpgXkcp4ADT17
j3OeAPcNJhzhPAEWS7uTOU+AN5mYRM6zxG27H+/nPEvct+pJAudZ4o8Ra/dy
niWu6F0Qz3mWWP/Udw/nWaFj9O9x3L8VltyQKrn+BHQ8wFNy/kSc3qVTcPc/
wB2CFgXnWaPL60YF51njl2HGbPQ+xApPYzZ6H2HD0kYTbxLaLGk08YRYKjbd
F2KO2NQXYqbYtG+Dx8Wm92wwQ2zq2dJs9Lhs9Gz/59nRbPTs8MR/vMmYzeZ/
AaNw974=
      "]], {}, {}}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJxF0nlUlFUUAPBhmI1FZFFJEYhSzMQkF46UdK+gkiJ6UPCkCMXaQURQ6JRS
FIiFiIhiqYgo5oIYamKSLAq5sgybBDjDMjALiKA47MMIcei95z3n/fGdd+/v
3u+da+MfvilIl8Ph6EycpInDnThppyYDqofjiyszVPD/9xVwTnZe73NKBUsm
Ixc+HtWAcwq9vwMNacnaiP0q4ExGMeQX23o27qH59+H0pcKFAb4qCJ6MR/D6
cm7kyGpaXwrtdwJDY+erQFwxGRCRPi25TUS9apjBK+vjKpQkvwb+uSdfX5ev
JP5TuOWw09X9sJLU10Hfg+sz9ngrSb96kL7nmLtlrpJ4jTBVfMrH5oWCeM8g
z37XuEGOgnhSsLrmaR8YqiBeE8jDqyUHbRXEawHLgR3Xu1vkxJNBZd2KPNGv
cpIvg5u9+sH+a+XEb4PnCWEH47TtpL4dOhceD1Bfayf95HB0ZuCC5X7txFPA
uROa6XVm7cRTQPlqL43T4zbiKWHU/HyKPLqNeCqQqGUu8xa3Ea8Dkjz+PPBl
l4x4nWB4/lJK/QUZ8TrBx+6H+DI/GfGeQ0nWqidhNjLidUGKvAarHrcS7wX0
iOtrrmxqJV43+B2IFR+VtxCvG75O/9stfV8L8Xoge0NGXqV5C/FeQoy77Oi7
Bc3EewVLAkLm/RDYTLxe8PTY6/DQrJnk94KVvUNM9ZMm4veCqMjNIXx/E6l/
DdygT8NCXZpIv9cgSri9PlHURDw1rII6l8O1UuKpwb5opfmSTCnx1JBxurhh
eZSUeH1wfmjnvW1uUuL1gVV30KCnrZR4/bBgzTFQ8KjXD8mW3smPVBLi9cOa
qC0/F5RLiDcASgetMj5XQrwByIvOaFadkRBvEH6bO7I5K1FCvEGwyr8/M3Uv
9QZhmlPJlKgd1BuC5SfrFlv4UG8IvnC6cMfbg3rDkB3kNW7gSr1h2K5tieN/
Rr1hKIwLrp3jQL0RGJYI9qxdRL0RsLi7rshrPvU0sOLkoQcfzaGeBkq/Wzev
0Jp6GkhK+L67w4J6ozCr9PLWjHeoNwqRoSml4unU00Kjt8X+YDPqacHLrjdl
mwn1tJCV7ZZ2Zir13oBNmE/RHCPqvYH6K9+EqgypNwbxjctcJQbUG4OAESVv
RJ96Y5DYouO+Qp964xAewc/M0KPeOKhjopwt9KjHwVm2prOviWg+B3OHl+Zs
FlGfg2FS6yGRiNZzMPq4y85yIe3HQbuAdW0nhdTTQY8N4h/DhdTTQe6MY/nu
QurpYMkNe5fFQurp4L6qcc5s5umggfoDPX3mcVEz/vDEqIB6XDQWduv1CqjH
RYszCY0qAfW4qLd1JLVVQD0uLpCskT0TUE8XI+pf7v6Xebqof/ZDg1rm6WJI
eObeKubpouOlb4+LmaeLU/JyPqlgHg+tl973KGceDwvupj4oYx4PQ7SBcWXM
46Frs2VMGfN4mH7kXE4Z8/hovmul3luPjy8MthwqZx4fjzg1LqpgHh8V52b2
VzCPj2l/xdeLmSfAaJOQ+krmCTD7YnVfFfMEeDVg+6Ia5gnQv9k2sZZ5Aiwp
uMqvY54Q+yxzf3/7fkLsssbgBuYJ0agnduMz5gmxof2Rn5R5QvT/avfZZuaJ
MGagR1/G7kV4y44f28Hq9fCqhZ/vIPP1seTxqlZdtl8GqL5t1mzM9sUQi7o2
Ji9j+2SI0sg3PRvZvk1BU8cTvpFsH43wpq9p1mnmTUXjpJawTOYZY4brYOof
LN8YLzy9YfcT842xDjWOvew9TLAwsfPzPja/ycR83bwx9r+maPdLR7cB80xR
cOzVShvmmWKa2ul9RzaPGY5ba4s3sfnNMMBIsTWUzTcNeRdnz4+f+P4POGjm
mQ==
      "]], {}, {}}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0038500000000000006`], Thickness[Tiny], LineBox[CompressedData["
1:eJw91Hs01HkUAPAZw1De0amll9SeOtTuKK9K92rTa3cjZU9pKytTWUwOmw09
pG1t6bk0Qootr6xdLZWS1q5QmmE05DF5jlEiIc8S27Hf657z/eN3vvd+7v2e
3/f3M/Pc7yrkcTgc7sd1+uNS+7jiYscD+kMKigYut8H/z+kgzFTl6v/aBkvG
Ixvky/QW9h+l/btgsvS7jhfCNuCMRwFc9veru7+a8gthefbtiIumbbBnPIoh
SuHtYPdKxeofw5HJuiWpWSqQSsYDlBtnn/pNpGKeDLZF3jAznUf5FZBn2RAy
LGtlvhyU0y31RAdaWX0lqOZYJD80bGX9nsG+UHn1zhQl82rASHznc92lSubV
gkN+wrXYvBbmKeD7EmPLYYcW5j2HDt80k4D7zcxrgNt+GaMK22bmNYGP2COh
+GYTy2+CkYawEGOLJuY3Q0uQRH/mukZW3wLDwR0Bb1c2sH5K2DIrb4uFfT3z
WiHpfJpK3f4581pBe5XOCwtUME8F1i5O/c7Odcxrgyr7Ugf53lrmvYBX0bnz
tkfWMO8leHgczRq8W828l/DVyJM5vLfPmNcOHtKCHrHtM+a9ArdW01zviCrm
dUD3Kv1LWS2VzOsEP7N7Ntx1lczrhLiUO51Vd+TMew0ztfN1gwVy5nWBofmL
JP1bT5n3Bry3uNdprHrKvG64p7UmZri6guV3gywoQ9cjqIL53bA+desvYtMK
Vt8DlZEbv9ArlbF+PRCiM7DmkzAZ83pBcEvpGe0gY14vYEF+0FyejHm9UD7D
aOzg1XLmvYWVR8/Mc1pdzry34GWd6BraUca8PvBzOpuTkVDGvD6IsjUIjltb
xrw+eMMZsOLyypjXDyV/y0/nlUuZ1w8Bge9F3ZelzBuAVGH8N2d8pcwbAJlf
sL6to5R5A2BQaDwj2ETKvEG4UBpq2DkoYd4grMl5KLCulTBvCFra9Ko0HkiY
NwTQsrI5J1LCvCEQPrIKXfyjhHnDwOsq3VwpJG8Y2sbCpXO2k/cOOHKRUuZC
3juYpOKdSF9G3jvY/eQnwY795L2HdkyuSTtE3nvoEe8ZvRlN3ggU+tSHm1wk
bwQSQs4NbhCRNwJ3LaHjs0DyPsCCFDObQRF5H2Cap+TftULyRqG20Thx0XLy
RkFbcrw+1I68UfBNDp0dZ0PeGMz3bYwpWkreGNz2v3DPcwl5HDS+LpzrY0X5
HDw+NS+mVkA+B1O6zralC6ieg8nczNwaAfXjoM3Jx8nzBeRxscamU5klII+L
ZeYdlUVW5HGxkN/0u2BiHi7y+0S7zi0hj4snzjs7OlqTp4a1Oree29uSp4bb
nKD2sCt5aujotanYzo08NZwen+P1ZCt5alglsy8unni/POzuth5Q7iSPhxHx
q0TrdpHHw15u435FGnk8rDaxuNGeTh4Pd/2ZoXX9BnnqiO2Ob3QzyFPHonK7
tU7hdL/VcfuO1akWh+l7UEeurCvL34vuuzpu+GtIkbiIvjcNvCay2jDtJd1/
DWy5EnMs/UvyNNA9KVMjW0SeBmrqB+ysi6b5NHDyWN8KqZjm42P8/Z/zd6fR
fHxMqmowmXGAzsvH0kdufZrBdF4+hkdtdn99iDw+Lv5Uq3x/NnmaaJ7iHb8n
gTxNvNJ4vSZ1K82niSp/vQuzXGg+TQw8UsUdOEDn1cTME+oH6/vof6CFJw4P
95U00b4WXg2KTbg4neon4T8qm5DIKJp3MvIXRz1aONFfG6duSjyUGkHz6eCl
Ge4/iF1pfh08cCxEyzqEzqeLGaFu+Qoj8vRwzMf65Okj5OljfqB5qXg3eQZY
7rX3lMCZ8g2weoF7vWI9+QY4c1aYb6wz1RuiJ6d2L3/iPhpijbeLve+35E1B
C+f2Lp8A8qbgtRXiq2Fh5E1B0FJEJ0SSZ4SpK//AyBjyjPBUinDYduL9GqOb
5j7nB19L4D9kYfIk
      "]], {}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Sigma]\"", TraditionalForm], 
    FormBox["\"\[CapitalDelta]\"", TraditionalForm]},
  AxesOrigin->NCache[{0, 
     Rational[1, 5]}, {0, 0.2}],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->NCache[{{0, 5.}, {
      Rational[1, 5], 
      Rational[3, 4]}}, {{0, 5.}, {0.2, 0.75}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[FontOpacity -> 1, FontSize -> 8]]], "Output",
 CellChangeTimes->{{3.8686316929286385`*^9, 3.8686317016698236`*^9}, 
   3.868633105964615*^9, 3.870319461413578*^9, 3.870319520842926*^9, 
   3.8703197995921445`*^9, 3.870320089717817*^9, 3.870321623115032*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ProbPlusExpectation", "[", 
        RowBox[{
        "\[ScriptCapitalU]Dist", ",", "\[Sigma]", ",", "n", ",", "1", ",", 
         "1", ",", 
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "50", ",", "5"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"1", "/", "10"}], ",", "24", ",", 
      RowBox[{"1", "/", "10"}]}], "}"}], ",", 
    RowBox[{"Filling", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Sigma]\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(n\)]\)\>\""}],
       "}"}]}], ",", 
    RowBox[{"TicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thin", ",", "Thin", ",", "Thin"}], "}"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.87030393967727*^9}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dist", "[", 
            RowBox[{"10", ",", "1", ",", "\[ScriptCapitalE]"}], "]"}], "^", 
           "n"}], ",", 
          RowBox[{"{", 
           RowBox[{"dist", ",", 
            RowBox[{"{", 
             RowBox[{
             "ProbAllZero\[ScriptCapitalN]", ",", 
              "ProbAllZero\[ScriptCapitalU]", ",", 
              "ProbAllZero\[ScriptCapitalA]"}], "}"}]}], "}"}]}], "]"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[ScriptCapitalE]", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thin", ",", "Thin", ",", "Thin"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[ScriptCapitalE]\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[OverscriptBox[\(P\), \(_\)], \
\(n\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<n=\>\"", "<>", 
         RowBox[{"ToString", "[", "n", "]"}]}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8703670370277324`*^9, 3.8703671972168875`*^9}, {
   3.870367251739781*^9, 3.870367274889145*^9}, {3.870367308642416*^9, 
   3.870367308784265*^9}, 3.870368844797676*^9, {3.870368981097184*^9, 
   3.870368983482728*^9}, {3.8703690146287017`*^9, 3.870369026587393*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<PeakDists.svg\>\"", ",", 
    GraphicsBox[{{}, {InsetBox[
        GraphicsBox[{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1:eJxF2nk8Vd/3MHAyS0hEInOkkiiRWIYUkiRJlESDqUJCokxpIMkUyUxJSoYG
TRolKRIyu5NrvvdyZ8Kzj8/35+kPvd6vy9nn7nPOXnudtVQ8zzmeXMLDw+OC
fmD/68DK0fn5+TqehX84YBQZl+sf+/9+LXz87On3c4u+8rNj7OPx2UWPlKyS
3abwb9HaA9YiEn3Tiy5eUcToiuEu+rNb46064CxaIU9BORPPWvQeS7eLf24w
F600cypqnQ1j0Ruf5kQFTUwtGhdcoNNROrlon/t3iu770hbtcvmwWrkqZdFa
Y+vcnHLHFu1n73CVQBxetOv5fSYGBuRFp9YNO9S9IC4alnQ66/DiF+3b+Smg
hN676B1Z0XKvw/4u2rtvsuewbOui9+E2PGlQb1y0QV3239G494s2oh316vcq
XvT6WKrohwtF8H+u+EZ5dMWlbtGNHThBk5dfgO9/fmfTaLj903eA//u8WSje
z6gZfgr+57GyQh97l1aovv+fd5Z7x6gItYOx5tIF5zzRyWY8/wsNYWULVi6+
KKrg3Ane40a8C9fz3peLlqxOuHl3x5KF+bwjMeKb0QWfQ0X5MZdfc3VJMeiG
BDVjIcyUJTySD+K7odC/SASz7uWSb7Ud3fBO5LcY5t/GYUWf57ohWumLOOYg
ru2Vn2t7wCWeZznmFS8V3f7a94Da/eQVmGuCaQb4kB4IXBu1EnPcny518s0e
qGlVksN8UO+z1FhuD8xH9a7CvPZOOQ+tqgd+qr9ajZlFTacw6nug93eNIuZ6
+yu93O4eUH/fpoT57hPvxjlKD9At5VUxG/oZPxCW7YUsa2VNzMKN6mnL1vfC
+V3kdZi7tMRjpKAX/uF6N2Auu8Y+J3ugF+zthHQxh5NxRxVO98Jemrc+Zlur
xj0ql3rho5/ANsyri6uN1t7uhQd3cdsxvz0eL6P7shddHy/LheNL9v0ZbOqF
jPOR1gvnX6efkk3oBYcC1t6F+Tl302E/pxf4O9oPLMzvGry4kHgfPNqi6op5
789tP9+q9YG7K9Fj4X6NSEoIMuqDjadUvDEXdRsL95/og4LT28Iwf7iRUp8a
jn4/UDUac6/hSJxNch943392EzN3CCznS/qgb+VEGuaVdzN4n7/pA55GYh5m
/V0Tdb6/+6DlZMFjzA5My8vKQ31gd0b/FeabByanE6T6AW8o0Yb54RLrWnOt
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
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
vrpjfbwYFQ2ZiUpkkEiek5HDQqgEyetkDPzLIVGpRQw9G5UgOY8378Lysd6N
Z1faxZSgD27ib1KxfpluH3UrUvqFXMYjIxj+YD936ZaF4Llf6Epka6NUE4mC
89mPuof+QkVMdx4otZEo13A3v1jTL9Swwq/ATmD/9ezr6rXlX2h4up+7uZtE
RLfeQJ1UKUqv3WYc1o/3f9Ppe4BPKVLQLht8M0ai1PLZ5JbEUmR8s8GEfYpE
hzffjdxbXopalGJkrOjYH6Yl21MEyhAr30nLtCUS/W4lWQ5/KUMidflJDCw0
5CjpOfmEKENNgknWMWw0tOi23jHKWo4+F+orMHPQkOxGsaxEy3Lk4Sn5NoaH
hopPZcXRg8vR7lvyMembacgyUTPY6EM5YsipVEjlo6F7KtZmK4vl6PSgj8ZR
IRoSCxrWPCNZgRjZt3GTwjT0+fcN6UyDChTwK+b8eREaOim4iXeDdwW6O3F7
uGgbDfU7PF+0flGBks7yuq+J0lBglkzPp9IKdP9edeZ2MRoSWPxcyzFagSwd
y66IitNQprbu5wv8lWgYvfZdwqwd05L0Q7MS+f+ITvgiQUNd//6L4LtYiYRF
HVLNdtCQtwzdyzWyEmXbhHnUY2b3vm1TWlCJcv6K1stI0tDboi2626iVSMiV
/vI8Zg32t4reLFXo16O4omuY/5orba1RqEL8SUZ8LpgvvSlmkrKoQsNju25r
YmYYMxm9GVSFhm6vLozi9z9XI1oa31chtdNBF25hVrzjDnINVaiZc2/BAN5f
xZ/VtNCFKvTumWOvEma7bZGxnRLVKITt3IgVjmfOSdRfWb8aBRxWrDqP44/K
y7h4/2o1+s7S4398Ow1Jr2mYdMdXI4keW56NOF8/9X+rafyqRk4mXhEpOL/j
B/aXzoxVo0fnj7IybMX1kHxlnLX1N+LbLZmkgutzkput3UnnN1ITVnVDAjjf
S1cdJa7+RsUrHI+lcD2z+/+NdiT+RhLbXh8keWmIaNTxfVz1Gz25Z33vGjcN
aWVsfcgiUYMq6phn5TbRkOez24LFhjXoz5amMEPcX29uj72+4VuDNiqFZ+gw
0xCTTUnBaH0Ncv38rKFyBfsbzstEY0Atsuk5lcY5TiL6QuPlhx9qkS+69Ztp
GPvtPk26TkstUuOSNmnpw/PLT95N3+TrkL9Nk8FmCon03L8qJ/2rQ1VzR/Om
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
//9JKHT2dPIj3v9/u/lw+w==
            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
JMTEbek5TcH/f68CUdEBB0v8Kfg/iPaDrA==
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[ScriptCapitalE]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P\\), \\(_\\)], \\(n\\)]\
\\)\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None},
         PlotLabel->FormBox["\"n=1\"", TraditionalForm],
         PlotRange->{{-1.999999918367347, 1.999999918367347}, {0, 1}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], {193.5, -116.80842387373012`}, 
        ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
        GraphicsBox[{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1:eJxF2nk8Vc//OHBLlmRLRGVfsiYhRLwqW1FaqCzZ04JKCSVKSEIiKZFkKWuU
kiRLKiTqWrOvl2u99+KulvrN8f58/fzB4/k4zpk5M+fMzOu8Rsbt0jEPNhYW
lgvoF/ZXHTZO/vv3r4pl5QcHlEyDAi3n/+9P3K4Xz1b+XfWtpo6pL67Lq554
uUlUV3xp1SoD+9cK9C2sOmtDJqUrlLnqrw4N96uAsWrxNHHppCHaqi2NHa63
3qOuWmrxTIjyAcqqtxWmhlyZmVv14NV09Y6c2VWffxaf+cyTvGrbm3ZyBbLE
VStNKTvYPJ9atZfVkTvDI+Ortvc9bKijM7bqhKrxI1UfRlYNbJ0n1FmHVu3Z
WePzcr531buf3hb7dO3Pqs/1zfbYibas+vCg2ut6+YZV61Sl/JkMr1z1LrKj
e7971qpVw0g81X6Z8H8uqiPm3rKtWnVDxyCnYek34PyfKw406OnX/ICb/3f8
N1eE167fkMz3n6fyMs5b2bbAmV2sKzYpOBcqw9UO/lYbV5z6Wj2FUvIH4mZt
WDFLZ13nET/RCbhOX7aV/kz+dt2Y1gnC26+vwTwm4rnjpFkXvBPj4Fxp33iB
Cc/HXXCXJMy90j68JS9ujnUBjdTCg7ngrr3tQ51u2GTuz4/5kOk27WdO3VCT
+U4QM5GNRfBVRDdYdJltwPygumWqqLAblix2b8SscfNlXVlHN4RvyNiEmaUv
tqRyEh3nDN+CudngWubXv90gCJESmDOSXePrhXqgWuStFOYrTItbTVt7oIaX
VRbzPlvtCy36PcCFC5THvKFUwuGPVQ846ckoYn5/lawz5N8DbIdYtmEOb+2S
H4vqgZiXoIH5uOZXoannPaDEVqaFeWt8AQu5uAcaDvjoYqaREomU2h4gZZ43
wFxrdauX2d0Dd4NyAfOT1+ca/hJ7YHuktglmPS+DV9yivfAwfo8VZu4G+Ud8
qr1gc7/RGnOXEn+oEPSCf02ZHea8u/RLota9oPaU3wVz4Nigo/jZXoCh5jOY
LUwbLGVuIHfyXMS8Jevdrq0PekFB44sf5s+uESIapb0Qql8XsXJ9wb7W0cZe
uDq+ELdS/yqthynDvSBuMpOy0j6Xoo4cZfRC1ev87JX+kBzi5+LvAysvk/cr
/dmk2/RZrg+4Smu/rPR/UGz0lV19wPJ7Hw5zZrcBd//pPvjRcpGMufrew9qE
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
SST9XfXBkE+B/Af/rfp/+9dW/f8AGPSFrg==
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
z6TJy8amUawZs5miU4vGqzfM87jTeN2y5fjnjbWgHpv9y1o4jT16XVdlltTi
k+wkK0FiBlr9q25VDtXgv7jOtYvlZ3Ar8YEK+UUNbp1xevNuwwx+Ssu++JJQ
g3Czn1pHNs+A/kXjhFJEDc5J1JnFac3gesB4hqZ7DcxCi4IXmM3Az1XBL1ql
BvudtOZkH5nBaP6yXMGqGujszb13yG4GBfkHg3rm10Bl8mXGbbcZ2Be+iJMf
p0G+ed0ONc8ZKJ3Yqe7XT8Pyj4++VJ+eQds6AXNvGw1i5+41S16aQTV5sNKw
ioapQ9Jub67O4ISublbUFxrGVG8Mm0TOYEx9o9mBfBr6582+1B8zg0v7ck+G
vqXhX+8VsZi7M+B58l7veUnDDwr3rkriDCrVDD4GpNBQm+a/ujJ5BvM8BUu2
36eh1Nlz+9z0Gex+2/ZZNYaGj7qdpemZMxA76NPiHUFD1monE8N3M7AMtOxS
vUpDGq+F0Z0/A720HsWzl2hI/mHlcr1kBgpSUpQdF2m4l1c7uOH7DALdDwxd
8aMhOsEksKxiBqmvqt4YnaHhml/Z7BM1M8gXSxRN9KEhwAJ3RBtnUNp6YeCE
Fw2ntxStTGuZweoWuQMFp2g4IaX10qBtBsUrdvbcOkmDY3/Oto7OGfxwv/ig
w4MGy4rNJWH9MzgbnLqwmGCTly+NFJgzCPD6wF1KjNePWNf4lUOMF7b0Mwne
6frIyYU/g3cm9/wOehL9xP//PxX4pEIpZW8a/g/Ud2CG
            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
qX2w7q/HussM5ztqU+D60Bbwm/7E+Xvk4z17p+BYktYnnvsTSz656rzSm0JR
aX+0+MEG6IvmLttkN4X99vIlvisaUfrF5MPGe1PoKrtsIvC5CZ833R6S/TWF
g6fKq1IaW5ErkHh1898pTF2K2yA534q8/rx5BdoUYsJ67kkptIGUMbpsB3MK
C0+vUv/g24bCXfa79/OzcaXX7OzLDRQUrvYpObCEjcR5ksGMPgVF7Fh9PTE2
Dpg0NxZcoKC4qO64sSQbLzbq7HIuoODrIW2/E8psVKlOyY0YtqN0s62g/U42
GJtDuiTdCbzYO8JRnY0+TvrnsEftIH/PfOmqw4YC9biLbh2B39ds9dBjw0Z4
j+nt4XaUR/R+unSYjciAYM9J4Q5UWElXXTvKxlMdatA9vQ5Uqmma+diysVz7
+r5Exw5USRxt97Nn49KR0oou3w5Ud4bS77qycV+xfJKW3UHsJ45YjC8bJ4Ri
7T+KUfFdTyIhLpCNqVsKNyY2UfFDfpfs03ts/Nw47WemSUXd0PldLyPZkHqk
5W1uT0V93b3i1Fg2DGy45WOXCJyVopf+lI2uLMXCtAAqGq5QbbJS2ZDU2JKi
l0TgY1PdH9+y4bF1aY/yeyoaNVacz/vARrjKsNvGQiqapLZNFHxi48ehO0qb
qwjMMfItyWdDWyx/3+5GKpp/uwiUlbBRR8qpM+2kouVrYHgFmQ31rNFdV3sJ
/PK5RE01G7Y7jna/Gqai9U5B8vcfxHziNZx/T1DR5tKq+LORDf8Qx8syswQ2
GPvY1MbGWZpwqwePCoriUq22TjYc05sDyYs60S6iWNnRzYZMyKdg2cUEHtE1
/d3HxoPkXrGHSzrR8fM0pZvOhuFM9fk54U5Qc3xP9zLY+LCyQuCmCIFjEgb7
WWzM+K135yNwp/dnr6EZIv/+N90YIv+XTQNnlEvsj9X77FSJ+r/2DN8dXzQN
z0LF2C5i/d/rhMSmhKZRv8KKnUDw65rfFD+zdBoiD9VTnQj+XX8gM79iGjbR
3zu1WFT8KbN7yyc5jcNuqhyFESq6X11X5V8/DcP7Dr4KfVSwOj4wrmychvme
qxWexPyExGmZPfLTmNr6pje9gQpp/fXnrVSm0W+Qta2hgortvkfly1Wn8XFy
QIpOouLgx9BeVU2ivlj2wZm3VFgPkF+maE8jyeCjG18iFf5Hd0oHGU5jYcCV
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
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[ScriptCapitalE]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P\\), \\(_\\)], \\(n\\)]\
\\)\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None},
         PlotLabel->FormBox["\"n=2\"", TraditionalForm],
         PlotRange->{{-1.999999918367347, 1.999999918367347}, {0, 1}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], {580.5, -116.80842387373012`}, 
        ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
        GraphicsBox[{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1:eJxF2nk8VGHbB3BCJJUkWpSQJZWERMVPIqU9hEpIG21SEVkjKdEipVBCqajG
lpQQWRLZIrux7zODWUnec3qe1+MPPl8zc2/nnHuZ65I7en7/8Wl8fHy3iV/k
XzVI9U9OTubw/fuhgBm3MUnT9n/+JGJ/7mT23yn7lNUOfLWfmHLfi4XS62X+
TFm1dduMOc1jU46fF8esv8abcv6hkpAccKcs80xmWUQbe8o7thxyr77JmrLs
+AnfFduZU179LtrXZWhkytRLz9VqXw1P2THqXlyUE2PKVt7WCknytCmrDKw4
ZP50YMqnd++93t7RO+WDF/foaWt3Tzksp3dvzoeOKWNa3QE1/rYpO9XlOb8Y
bZrypsd+Cz5d+T3lU83DjdbSVVPeQ131tnh5yZS1cyJ/9wdkT1mXYePQ4hA/
5ZX+dNHcy3H4f78vor32scqZckktdbpexjeI/ddftpfobMj7jj///3q5cOBp
3XJoLf6PB97EOu62qkKpy7R/Nko6dU1OuAaDUav+OfqtWiQz/TeWdbyeRnpZ
vLuozIE6xCT3CP67nk++uW9h12HFkRER0t3zndZabq3HqbWiYv/G996cPqeH
9ZBoXSH+b3zE0mO8u+sx2vpiPumkGwet7ms3AKGDMqR3Ga/WijrSgHCTk3Kk
adP4xF8GNiAxJUSJ9J3cqoH37xog/fDKKtLq3i+KMmsbsFbZSJM0X3NoenZ/
A5Rni6wnXbnxSlz+3wZYeotvJB37xP5esUQjclYeBWkXnqlPmVIjShdOMyJt
aKV1tmpDI+xjWNtIz8tYcuj37kbIXDDcTTrtEkO7zbUR/k/4DpIOqK5f3n2r
Ea93+NiRttDIlxh42giOoMtJ0kr3kvgYKY0wf0A9R5pND6cxCxvxeVu1K+nC
3T5NvIZGzBzb70P60dtTJX9pjfCb6xhEWuf0xpci0k2IW+4XRVqkZPmDWSub
YCvzOIF0vcrsaxJoQkfgxVTSb25wzkubNeGx1pJc0h7dVBuZk02YVxBXRtrU
uGSH3NUmXEyd30R6cXyqrtKdJrx1uDZAOss+cL56BvG6e+gsfrJ88ebqrtIm
iNay5EizczTvR7Y3QSW0YT3peedv7d3HbcKho5Z7SKsvbZstPLsZwS1Bp0jv
KltflqXQDF23EH/STp6hwS66zXj06noM6biGjSItx5rxPrWZSjr35v3CMI9m
dDXfFJxGuEmnL2D73WaUheSpkub1YMvki2YMX00zIy316CF/+udmXNx1x4e0
5tahHKfKZpzIu/6O9F7WFu9lPc3o7C6jkr5lNjwWLNGCY4p6ewUIJ0zblrlZ
pQXM9PYQ0t+Sn7px9FoQfPB3Oek2O9a6t2Yt0Og8JiVI+O+cncyjji24+bve
nvTinNiUBT4t0E2/mUJa5xzP+eeDFthsLRMRInyh9OWQbm4LusdCi0iHXp1I
pNe04KBIk/p08nqpmju9GGiB0YFDz0kX1b9ROcTfinz16wuFCXcG8feIS7di
rnX9Y9L8OlYvCle1gv9yq7wI4aU97xw8DVthEKCcTtrK+DC152wrYlX7OTMI
X2amPI32b4X135TXooTvx82wMXvciiyrQydnkvPHfrvFM963Irwgfq0Y4VL+
jPrsb61Iu3p4xixyPqfMirjU0Iq3QofppKfbHTugymiF3+jNztnkfNAa1Fcy
i4r03L18cwm/004rfrGAiprovyoShPVCWxN8FahQujb9+Dyy/C7RG4fUqBD7
FZkuSc6vetontHWp+DkmICNFuPeBvfFcIyqSDz56LE3YdfD28sHdVATY5K1Z
SM6/kR3tz49R4RAznihDWH50dp7neSqiGvaGLyVMMd3w3NKDCifZn9HLCOvH
HvfVuE6F2UGLInmyft5d21l3qbBv7JinSNa/L0u/9wkVCd/DriuT/X3VsyT/
BRWOCdFLVcn+Wuk3XflMxZunhhVrCD947/jZrJBonyZrSIOwgnD4E7VKKuZt
1tLTJpxyJNd9RhMVa9z6cnUJG3wYsOrspqIgWtlTj/DPWdI6OcNUNCSuctlM
2Oa4ofSTP1Qocx1eGpPPq+Tjmj0SbWg4LFy3m1yPBA60XpBpQ/eVk9fNCB8e
kegLU2pD7xprVyty/am4/ef3hjZEswPWOpDPX8726WNGbTjr5SXgSI7Pu+ni
Mnva8PdXkMp5woK3fRXsHNrQH3bdy5Mwy0Nv9bWzbTimUP/Bn5y/Hce0493a
IFwnciCY8HeTS6a9wW3IumDTGEmu/9przUUftmHVg7rSeHL+VqTZrIppwzaN
9g3vyPtb4NQF57Q23Mg4+TKPsM/I8qv3s9tgWx2cXEbYua0tIK24Df4vws3r
CZvlHIrgNrUhssTSb4Rcf94tiF3U04Z1gW6L+fiJ9TC6JnHTcBvyKWbnZhNe
cHVPjq9QOw4uP+mwmrCok9j32DntOJ64ZaE+4XGr71XfFrbjgL76+z2EW7S3
dIuotWNF4LOEy4TLFfkYqjrt4At5JHeLcK7kF95Ow3ZEf3vw5hnhuBHtWfcO
tOOE8o2lPwk/aBuVSrVrR8+Yo2IP4cAKyrIap3bMPah7kX8asZ6/U9Va6NMO
fXjIbyB8MLpHb+PNdsg/lXhhRXjH7XgTm7B21PFGKFcIqzktPfQ8oR03x6e9
/0JY1rrxWH5yO3Y2nStuJyy+LeJc1+d2ZFS9yZwhQMGoosS1FRXtEHALvGpD
uFOyPHhHQzuqNVw8bhGuFbgdfrazHZJ1v99mEv7YJvQ6mdsOD9fYhbKCFLyu
yEupntaB1jk+QRaEn+T4ZLHEOsCtqosIJewVzSvXlSPsHyU9Q4iCc7c/1B9a
2YHrbX0FpoTtrl7s8FrXgd3f7oXfIWxoPcT+ur0Dk/tMlBWmE/Pttjd8nWYd
OLtFTMuF8PL1J0WnH+nAWtdUzjfCwvPblpi6dGCHRNF2V2EKuAJPlc94duBL
+b41NYT7Rw6uDQ3sgOFdaQ8dEeL5rPhlVPWkA1cexvDNmkHBh8MHdb7Gd6Cx
XMnKk/Dz3taVlHcdaN6U94ZB2JVvQCI0rwOxD3Qk+0SJ9t52nu5V2oGsm2cf
n51JjP8CNu90bQeuzgpmcwgvU+dv297fAXX1jpWys4j7Jyvwlw6zA1KeO/yz
CLNMxIqV/3bg0fJFyXazif2SrfR7IYlOmIpRE7LnEPPpndVeX3U7IeeTql0v
QdS3ONWZsqUTGgmDx9PnEetrgs6xZ7s6sURZvfWJJFFfzpYdXvadMLyuKusv
RdS347v+mdOdiE/Y/yJQmqivdrfGocudeNP+gPlgAVEfzXqh7s1O/O51vle9
iNhveLSKqYR1QtwXmYIyFDybfpxPOroT4cL5RwyXUHBpqXMPk9IJsZCXk52y
xHqwOzCdUteJRe9OeNcoEvuFhpmvn7V3wviblN0VZeJ+On4vKnSwE68LvNtX
rqCg2CvK/wxfF36kZ60uWkVB6gx5t0OiXbj++rkWRY2Cp+EJTqaSXRD1jrRK
Uqfg4tuUfSoqXZjNNyeRqkXBEV0dY2mNLqwstTJYtJ6CbQVfdKZv6kJIXWSu
oy7RnuZi2c49XWj/+Pj2Ln2iPrHWoWduXVgstapHfzsxX0Ycawv160KUVbKh
/k5iv7m8/5dXcBdWPz646eAeYn+2ifX50LMu6LbyWgYsiPmv2OO96esulGUJ
BjhYU2Bizhenm9qFWlZqzvhh4vxwZuYt6aIubC2+anT/GDF/c+96Ta/swie1
9IL7pygY9pe6wGrogn6Gxu6PZ4j9V6ScVTWN6G9VsL7bZWK9/rFe6Y5UN95+
VRHoDaLg2uSo3wG5bvCnp3u+DiXWT01K85JV3ShwLBKNe0Bcn0iV8KTN3VBo
fDNt63MKCso7GRd3duOIhYHtaAL5fD7fudGyG4nfIj9Q3xH3/+mFgiVnuvEs
UIzq/4WCGTE1tvfcumF0N3+pfgEFi37d+2x1rRvdnfs0NpdRsHGT6MWeR92Y
nOd/cmULBd5i422C+d2I0Bb9XSuQjDsGGXqlZd0ocxuXWjo7GTGXLj4Oq+tG
bpW9Yv6CZHxtGtgrT+uGRklFtMaaZFSJv0rq43Yj08JlncDGZLQbHRNJFuhB
Rn89R88kGYJvm3KwsAe/SzP3TNolY35bxGLh5T24fY/6/fa5ZCjNt3D7qdYD
WvsZ3fueyTDxKlOzMerBeo3GX/OeJOPWruxoj/M92F9b3mzbmIxIPw/eZo8e
7Aj+tn7RUDKS0rUtZlzvwfT7PbPOTiajbMl7sYgnPXhV5fOSppiCln2nT9m+
6EHxqDNbaUMKaNeVvylRehBVYtYquicF4rRnV9MLevAt8sncfo8UyMkf/u1Z
0YNZs4r4GPdSoHFggaZRYw8mitxrP7xOgXn23f4qRg8WdW5WftqYgkehftaM
xb2IW7Ca32t7Kl7l6aVnKPVCe1t7tsbJVHxk88R91vbi4Eu7J43XU9FwxKV4
lkkvlj1KWq1QmIqB+2rLa/b14oXpjBcVPan4U9jvE3W4F7dPi2eFiqZh6RqH
9StdenFuTP3eYbM0rHGQDRvx7MU9h6QcT/c0GDxqpGXe6IX6+sgLP2PSYD9p
9nJbdC/mNEn8WDGahvhyo/knintxrXh8SWFCOhZE3o+8VNWLsGd7q5Vr0hF8
girn39SL4Fb/HbUCH+AycVUthtGLsit75ukd/4DNK1NNGhb0Qfz03fj1uhlI
Y/P97JXvA9XPI0LAJQMqebvNOav60Kjt6+WYlAFx6347yc192PhEzkFN6SNa
AuU8djsSrw/rRDaoZWL//vN8Nhf7IJU7a1/K5UwULPkSeNqrDxcFVrzyy85E
UppVWNC9PiiZPL+x8cAnXG2/k5SX2UeMd4BV5LPPoL1t1qjM70OH3LUDbzmf
cdR9ZWZrWR8KBmUTlfdnwVS8qOBPWx82Nc+tCpv9BQv0/7Zoi/ZDWbl+vURC
Nm7P2HncWLIflodls1dJ5mDy1+MBs6X9ePQ9yGpdQA66T6/jOmv0w5A+Pu+t
di7SH5+Zm3iwH888Oz0ENL9C5finR5nH+sFlzNLd7/oVUeoiS4vP9UPyxtbS
45+/IqAoTrXrWj92utX7CO3Iw35WwxbZxH64u5ZpHvDLR2GuSsnq9H58FWJd
51XnQ/e2695NOf3odaxMzVT5hmUKEjbW1f1wfOy5OafuG+h7t7uGjffjRO7S
+JXmhTgq8+jPc6EBRKVdtuXPLERtT+c1ypwBtCU5l5gtK0K2t++dMoUBqNgn
jT1jF+F2UsYr4Z0D0LbIkFTP/w6lZZse0Q4MYKvktsDXJiXIDcu9XmM/gAt7
7p0IKC/BqMf3o3FuAwgLLNgV1fcDB7c3yiBuAJt8JuX/bPsJZpbtTKV3A9Dz
cBxV6f+JUPVOnljmAFxEcWH1nXLkSQ/VNvwcwKfKdht3lwqs6P5713VsADHN
b08co1Yiz9rfx0ZoEHUntWqEN1fhcJnwOSPxQSRLmXoXxFXhbpr4DgmlQeR8
UnGOOV8N7jV5oXf7BtF1oZ6tIVeDQtmt7l2vBpEQ6USZNlQHu7CSk6Wpgxie
T/++wbkeY9P3HEjNHkTFD4Pae6x6qNEsNf1+DeJGquWr69MbEZ7lOCTDNwRL
t/Wzkg2accw6xN7ccggD+8Pb1Ka3gT/s1/Z8IRrqZqj42ep34290/9HhOTQs
Xek+6RTSjbFXfJ6yi2j4ojFNHE3dYGavendVjYao01X3Bd170N0fIKFlScOp
4pVb9r3tRQfrycqj9jRQsew+ndsLKl+y0d3TNFQVuC2q29KHeqlm10EfGrRv
jDw2/t2HUsN1jfGvaND5rS+TM9KP77t2MKtSaBCxWfqnSXsAhVb2s/i/0HBg
6/LcHPcB5JwLgU0lDYVbKmfeHx9AlnucVXAjDbY1dly7DYP4GJB5IbOLhsFC
yvNUt0GkPOmKmz9Gg7OkxZIXQ4N4/2I8a4sgHcL2vmKKSkNIosytvTCbDlXN
Vr6Bw0N4Uagn8lOeDj6jyZjZBUOIrTST+7OKjsq7IrP2sofwtMlxg+p6Oua0
0MWeKdIQMRJ+JnAHHZHhRfS13jSETyReT7Ogo+aAkbRNAg33RfKettvScV7b
59SxnzSEzqvLEHeiY8voSNWmURqCl9Iq9C8R9WstrG2cT0fQCsH+M950HNvC
C1yvTUeA1iKByCA6TjifD99qTocf1GW+36ej67fKPj5nOrxNt67jRNGx/+ae
d4dv0uFhcXi3YgIdGRs7tpvH0OFm53LSLJmOXwKfz1LT6Lh0OsjX7zPR/txV
kuOFdDi7Pn38voCOOm3Lgae1dJz1S0tpLic+v1rMqqiDDqfbJT9mNhDvm2V1
xZlGtOMRtVO3k45HnHjFR2w6HGLZEyeJ/1cGuLF1/tBh91ZM+iGXjtKMfJhP
0qF2eO6Co/wMKAnXz+8lnGQftdx9OgO7PnbuZE7QsfKk8tq7MxmQWCrq7s6j
482ZFL0EcQauvRSnXRmhQ8VFzzR7PgOJfxKymb10vHQrPlCziIHVTYaf6U10
LPcycxiUZWD+7ZvOZ3/SEXut5byAIgMbdh9XdPlCh1yQo+ciVQY+HXtZN+0N
HTEhzKC1axjwjt+qr/iAjqVhPuHbtBh42Gia1XqVjqgI0VhbXQZqnhuf1LWn
Y9HT8Heu+gzcdPX+q2tEh/TrxKL4bQyc0qxW3S9Ah8TEou2xuxhYSudPX0el
QWzfrZJn+xn4ddxPdfwTDdN4p8qeHGbAIDFihoUTDRM763ZH2DOwYHv+zkl9
GrgxJhXhJxgYvntaIWMuDbRtStV3nRmQ1Wsy8U0eQl9UuHnoZQYM2eyxN95D
6GQI1gZ7MGAkVzs533QIDREddYEBDPTqfizqaBxEYW9Mi2cEA6PCi47RBgfw
dZO4nUc0A4sF/yx6/ZZ4Xu76tLnFMrDEqD5mwdkBpOgc6XRJYiB6e724eW8/
ngYt7j+Vy0CRhuyq0co+uKo8ZJn3EvVRPIxDfXpwwVPIbf8QA3vEla/3aPTg
TMUl7p4RBsKVVH8PdnXj6BWzcdM/DLxlnFBet6Mbu4vF+TeLD6PKNuSSAbEP
VjoVLLZaZxgBI113TyW2Qy5rLERVbxh+IZy7CbbtkBF3mqNiOAzrgQUvLCTb
IfFxm4TCzmGU34p5qOBDnMOFpy9YaDeMLEUD+QuHqKhN8FUQChpGDt1EqtKx
CZ17ZtafCxnGYa79Ga2mRoxwwkPr7g8j7I+S4529jZi9LZGXGD0MymCo3y40
YGtvTfn+1GF4rqdTnq+rg/ldu+tZH4dxSCvT0vfjbxzVGdiglD2MO3oty/z1
fsM7iO8lr3gYCkvWvfuzqxYZKis9Y1qG0RgaVFIe9AuFFelrRTuH0XboUFmn
zC/8umLQc7FvGFK00QKZ1Gowii32mzCHsUVGwbO/qwoqjr4qtBkjuO39wPfh
sUpoz53ZYjlnBAOjmZZ2MyphlBke9lVyBDkn4nVWUSpgNyPx7wPZEazmk5VO
FahAxOuaXxvXjaDRm9UQ5V+Gl/vsbr3YMALBRz9+cAZKkcbrxxyDEdi8ddWm
W5aiYjtfYrvpCHp9Kza5b/iBGf2qfjftRrDY7NxXS5XvWHA/XXv0+Ahe7dJQ
YycWQ2mDweDh0yNgeebe+6hRDMNbFpbqriNw+TPqdnp7ETxUfVf/Dh6BxdJF
NxseFyCoSrTD4N4Itl1e/bFPqwAPPcIj3jwcQdxZ5oXYqm9IKXkj4P18BBI0
lmDN/G/od6qpX54xArnHG7xeZuaBK2F3JzRrBFdaOQKOp/Iw/XO/EffrCC5l
uRgeXZgH+Zl8lB+lIzBafYQv3+8rDiWqBrq0j+BzRcSCCqdcLJL9W+HTM4KG
HfqLl6nlouF+5eKQwRH8ULozINqdg4MeV5IT2CNwjRpa9GtaDqy2FzY1iY5i
8++5Cpq2xP7py2Pl/jmjGKmxKFKYyMJv9bMuHMlR/Az3evY+OgsHFkiKSMiO
wr5Eusiy+zPMe+w1TTRHceTzhUGtB58geWidt7nOKNr/6Hw0Mf6E6p8i3+31
iPJ6bip4con94If3RzxNRrHjs8+Gecczsff6xM3kQ6P4NtK3NcTiI8R5Fb+y
7UYRLa6UpCf1EeVn4mVLj48iKu+q6Zu6DOw235HefX4UlBtbubeOZmCnwmPq
4oBRjMsuct508wPEHp1ZueLmKKoTa8afHviAH6IGrtqho1DaLzzPSfEDTEe6
Z+6LGIVXyL4syaJ0bPuqtT4waRQ8Qz+/bwvTIbJO5FpY8iji4oI3uwynoehV
Y2nMh1H0aq0a2VKShq13rx39nDuKSsM7eVo+aTCyrQhh/BpFenJDqx8rFYLV
cXUT9UT5J/Z7+9ekIn+rm8LM1lGUVVVNOn9IhaHa0kzFvlF0eu9rZXukYlrs
sIAmbRQSiw9s8D+Siq/zC3YbjI6i2/Wyc4dhKgwmTncenCD6mzghPGN2Kvgu
YM2paUxs0ZS7m89MQU6nhMdlYSZMlwljU1MK9Esz59ydy4ToV/Vas7cp2BQp
vLFAkYnHlMPbwy1TMNuBnam/kgkpi+cy0oYpaFPt0vmozoTcl8UCO1enIPBT
nnbiRiYE/PxkPgmlwPpacvryzUzcPeKq2TeSjFWmMVpPtzJxrPSLQgY1GZX1
Xhr39jEx85JBlUx2MuKfn0kWtWRiuUnytcS3yXB1PKQecJgJRwl5emF0MmR4
OmpuJ5nQPGGkGeaTjBMLmCtsvIjPK5esldieDB1q+6vaa0yoBAymPNyUjJmv
KpX3BhHtldfSuKmeDMr694pbwpjIf5/58c3CZPhPRsdnRTDhXhS9uZo4vx4o
uq2g/ZQJJbGsksOCyRg/4CS34jUTgz8X/w5kUPBzqXVM7DsmsiQVbsv1UBDT
bSIrk8ZEcnlD3FzifLzVVXHJnBwm+k4VbOoppeBuOHUB6xcTwx+bJ5YR5++j
NuWPzjUw4WUxpCBLnM/XKWZL9bYy8XJl6EzbGAoa0iIlG/uZSHJoC4sMo+Ct
560wcwYTIR5f5z8IocDXyF3iJ4sJ6uLCRYU3KFD8dUD8Kx8Lm+78nlfuSZzv
I43vbJjOwvOL/TaxbhSUOGjNTpvJQrCEe22CCwXOo3PFEqRY8Ay9ft/QkYJP
EmXCIatY8Ja5SrllRcHths+B0zVYMKrUv5VnToFt7Bsh3/UsHP8ysmvZPgoE
NYIELhqyYD3vx7ZtphTU8lyvDZqwoHI9mjnHhILXX4/zn9jFgvojzYvcLRTs
3rdl0sqKhRVDy/WV9SlYtlDDu8qGBZ8/ATtPb6RglLpsYocDC3Tddck/dCiI
cP47pn+Ohb7pRUebNSnouJPJXh7AQvGzk1dWrKRA4+Xt/oCbRHmmc8f1VlBw
Lcu2pTOUhSdtYpQTykT5fUKF8Y9Z2LBuT/qwAtHfybpMwWcsfNl84NF+eQpy
5ie9PRbPgt3yup/fllFwxHB/+PL3LNi8/BDbsIQYbyvFmwFpLKQEa016ylDw
5xzXszOThQwv2bVqiymIjHx6LP4bC7tenCz/tICC/uQLVoIlLFxV3qwYLk3B
hmKjncfKWTjRpq3gKUVBHbNfc3kDC4teMpack6RAeWa2ckArC+YRTJUr8yhw
lbu3uLOTaE/UPu5tCQrm714vEE9nYbaCgVqNOAXHjolyBFjEeNm8yBcWJ7+P
a+53GGNBQ/enx5Y5FOxP8K9SEGLj7Y7Tv37NouD5lwOF/qJsaNy7kreCMKN6
xaeOOWx0Oxk5BopRcIev4nncIjbqLlVGWsykoEUqLlxgGRvuDK/bRaIUqK12
vemgyEZlYcgkCJday1xQUGdj1+xGiy0zKFjsTD/mv46N1HCdtDIRCpwC86w6
NrARUCMWbEN4RuopgzhjNnydIlNvC1Ng9X2jlsAONvZubQ5bSfhV62wVh71s
tOR5ziifTjwvYulzFA6xsYg/tk+ecLh8kIC/HRuOf8NGq4Qo6NQ5xGk/zsYl
w4jKQML+x/lbY53ZuGW7w4YnSEHV1V9V01zZUH8zKzODsPz9hMKjV9mw39ln
5E44N3vXO/lANrSKOw8KEZ5Tsyz2WjAbPZ++PisXIK7/wGh4+102PotL3Yoi
PCH9xCs2kg3JfdxqPcI71c5emPacDWs1Vd5cwlFGBsePvmTjZ9C0Pb3TiOt9
oXunfDIbpm8XKUYSvnkj0+DaBzauqlpdciNcF31bq/0zG0mlcvctCLuVaMjE
FrLhyhfRLkW4kCokPq2UjRm5GOTxUyDFqRM4Wkm0V9DSpYVwmoLPgFwTG/07
jiYmEk4Xiryk2EZ8PnhpQTjhDz0fJlS62TD4q0n3JZyRSJujzmBDtnbdloOE
P4aIPtZksTF4ptpiG+nzSvLrx9goOC9vup7wJ80jWvqCHNj0e72TJj3f48vm
GRxcFRoTnUH4Myd8q/FsDgR5E3LjZHz2c5nVzgUcvFL9c7iNjO9H97XtWcJB
7JuHzjWEs32ETpvJc+BdN7ykhHDOFj2vg6s4YKyZUEkn46uK1tOPrOUgS1XA
PZG08OU79toczK46ZxJLOO9H0vNTBhywbtia3CP9tlj1jDEHLg+un71JOP9O
Z+p5Uw4239s17kfGS81kCl3NOYDUV91LhAvW6ezxsOZAQ2mCepaMb0ub13kd
Idq3i9N0koxvNgb3B5zioLovLO8w4eIvCReDznLgUXIy3pL0s/w/wS4c/Dlp
9WM/ma/gMD47zJODghZqw3bCP4ylIx76cRBdIPyFjJeVKmvKPQnkgMM4/puM
p5UNOGk+v8vBj2D/1xvIeFtZYFZ8OAe7rNmH1pN+H2v86gkHQksFN2kRrrjY
YPk+nugP7/1VNdIWbGrKaw5i5rJqV5L5A+slnD6848AgbJnlCsJV49s9v3zk
YK/9o+zlhKubjwt9/cKBl7x5LBlf/JXjF/otj4MXM+viyPhjjX9mzI9SYvw/
CY2R8cra4zUryis5MEks3rGYtMlwSlUtB0XG/ulkfLNu5oqCeioHesK1P8h4
aN2Q0e7mLg5qGua6zifj8eV2v6n9xPVYGaxJxk8bwiL6epgcWBrKdpLx18bL
aS4DPA5m5u2pESfj55YV47S/HDwY6KmZQ7h5schstggXTRcm+cn4bcuEwiPe
LC6qVUZWkvHdllYsm5DgokZN4ygZD6bGuWkILuFi9P4Qg4wfM+vf0S/Kc5Fy
xGEDaRHx7qQOZS56DPfeIePNMluXOJmt5uLqSQE6GY9e42munK/BxcIltVak
DVOCOzV0uKDvWVlKxrMP9OY9j9Xjwpv//DbS3uZrZa5t46LscJQ1GQ+/f+tU
/fAuLswW3xgi4+cvc589tDfjYizWPoj0J3atWaUVF6xT2StIl62aPXfzES4m
LLUryXg89ajxT4oD0b+Lp7xJMyM8g5c5chHnx1MnLSM0IMR3iSjPrjuejPer
b5TPP+/OxeZ3L46TNrpg7dvqzcUS81uqpK0S7urtCeCCabFvlMwnON1cNJZ9
k4tN3z7nkPaeN5mhdoeLZN/QO6Tvb9e+/PQBF8NC94+S/pQeT/d6xoW75JG5
pH8ONCYNxXPh/KVokMx/aJeb52TzhhifufEl//ItLE2Vy95zERpT8oa0aKhf
56Z0LoLc54eQXvrt4/OkT1y8FLG/QFpjjH5EJpd4/3CwJWnrE0fqx0uI9r0V
XEH6TFT4w9MVXJzMWChJ2req1KyxhouEPVF8pB+ICM7d0cjFqoOXaGQ+yCv9
jT8/UblINQxu/pcfcsklWLWbC2rnj3/5JBVvXm97MsDFl8vyOaS5Ugvy3dlc
WLkXx5MW27XHt2+cizM27Ih/+UP+gXrW/DxcoLFDSGtlfhkrns6D2/hnf9Im
dGaGjhgP7tDx+Jd/pbjq8qu5PETvt71A+twhB40F0jzYRik6kn5YVJnEkePh
ytrj//Jx3kyIOJ1U5iGop8SMdLamgfLvVTy4hL3aRbrK0a1zqwZRPotlQrrr
2bvnH9bzoHAw0fBf+2u6jijp8aB976vev/aLLZF5aMjDrq61uv/aeyX44eVd
PNhtFVlL+nAnT9zCiih/B78qaf+9p4K1HHjEvoCl8K89WbVCkud4eKaZv/Rf
/SrGvqNXeKjZvnMR6Z41xiUGITzkznk4j/QfbWPJ0Oc82GuGzCYtrm98pDGd
h2v1xaKkFY2NX6mU8LBClidMereZ8ab8ER6+OZv9y8e6Ym9cYbN4DL7j+//l
a5V6GXPvnxmDQe7L/+TPPTFeVvxlDLm0/+R3HYwtF+O3GccDcYF/fvjGmqf7
ZxyCav/JD9Nat9uR9+oPivn/4+ocw/qPFhMQ/28+WcOamU55Byem8s2oz6rH
ftj+z4M+x2RaHScg8l9PNwi0FfL+n3Vzv3ftezkBwf/6We7ekX72xFQ+2+mv
R2Yuifg75Z2+nzxm75yc8n/zFaf8f2/TTtc=
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1: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
4Suw27U7HMf27yBJjlFw47BJvTaNANb4GTbFKQpCBQXVt7QQ8EWoyliLQsF2
7ntqIdkEeD0nhBstUiBP+23+PogArRXnQcsVCi56yYjtdyWA5TYOOLFSwRXt
wlCwIODzoKDHXS4q5mU+no1h6snH5sNfffioYHVbb+MoT4BmPYk/eAMV0woa
Co8kCFhFoGX0Zub8iS2kts0ElBXYJqVvo+Jgdnia03oCHkkrTRfvpMJLZvOT
vUw9fCSS63CVJBVCufFuQkw9vP7SPElzL3O97kfx5kw93Cc7pFZykIr4S7I9
R9YRQJz9WSyvQkWLllYZSYipXz9UqGQcpoLfkavkmzgBFj55hbuPUlEixiJm
y4xPziBW6b0eFU5H72/w1GHGt+FVgbAhFWR72TtbLhDQ3Omp8Po0FVLXF0cO
MvVwYpxL3trzVJSWRpZ/DmHq5asXDj61omJyp/NSRQEB+vIGOSt2VMRKiamo
dRAgSlPbf/8KFX00QtJ2lnBMlUtnTbtQ8fVZKp/r3nB88d8sd82Vihrrxnwl
y3A4ilD3XPSkgjBncIi9Ihxqvf2p7T5UZp2jpjYshYM3tVn6lD8VaxWN775S
jUCuao6k9hsqvof0vfn7IQK+jOjEjwQqkpSTsgvXROLct5e7VN5TMfzFKYjV
MBJL566J70ljxn/KhcIzEYkfOyxi47OpeDkh416LKMQOHxcTJVKREKmQx0OI
gt49ye38n6lwTGPr3szUx8GhvSJzrVSMbAlYyqC8h/3Fxnc3uqjoOudzr+Ry
DJQlP20e/UvF49/az807Y9BFjNzUPU7FA8Gy15mOsZBsPSfwhWUO/rGnP6re
isNipO6rQ5xz4Jdq6N5cHIe6S0rribxzuPvBbXs5Iw63KBv4UjbPYY8Im4FL
WDw+CDZwBcrNQUvgovxCRwJedpX6cSrMQds94fjcvkTYxKdzeKnOoeeQJjH9
aSLYFfzZ3I7NwWmG30NWNQnGp7UZ5uZziAtYqJvIScbAK9L87qdzkJHfpX1o
PA0KyS/Hnz6fw3vjFLeEs+nw+WjTMxg0h65C7j3qFenYOcZRnRg+h5Gr6TGk
9xmwPnYmdHfOHP7s8/OMvpSFDuq44u6uOWyucPb6/V8upHk/ST/9O4fDnieU
QytzcU/89bbBwTmM6nJzOTJyIWSsypZInsN07ZUymft5OJPi27KLYx6l4RzP
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
            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Thickness[Tiny], Opacity[
           1.], LineBox[CompressedData["
1:eJwUWXc81f8XRkjKKJWGJEWKRAOJjkoUWYUSFeqrZUUlmclqkGSTca+9N9c6
9iZ775U9r71+9/fXfT2v91nvc87n83me1z2ha3TvPxoqKqpqeiqq//8KwsHx
7e1tHKWKySl/Gg6qr087r65to5K49eXIK+HwyVOMd2FxGz+0n9utuT8cyiYe
6Y5MbOPkecUzEtVhoO0T1FHduo1cFrziC7fCwLEo8WNpwza+oOWkes8bBrHT
BQfza7ax+flqadXOMFiRHrqXUrSN2i691ivVofBrjq/KN2EbMT3smqJOKGRy
iL/6Hb2NZikSk2a3Q6FHVn6nS9g2Brg6K38QCoWzgQY3bf238Z+aUtEsTSgo
V1j3m3tt4508Tlf9KSJ8IP+0Mf21je/Cxb7mtBGhUC45W89pG29Nyr1vSyLC
6PsiDW27bdx53OJgaBARmEOaljWstjHlw6U7N12JoLm8dFHBdBuZFMUL1w2I
YMfN0CBjuI2vnX6S9j8lQqTCYWOpV9uYNyUYRqVCBDLxauzFp9u4/O91hbIo
EY78vSt37tE2rha35aXyE0Fq7fEor9o2Ft8o5J7gIoIej5EjlzLF/+yP9oWD
RHBRtj11RH4bLQ6YVNYyESHV4lchm8w28pzGXgs6InSEE7SZrm/j/Feaneub
BKBqSNmil9hG/hAQvrtMAN7N4gAq0W0Mmzl832iOAHf5WsTXhLdxM3bj+fNJ
Apjc/9e2ILCNWnTXnvGPEsDHeuXD1OltfLQtqVg8RIC8qF0H/nFvYxDt57Pn
Bwgw1HQkpe/YNv7aVUql30cARioBlY5DlPzKh3o+9RJAiF9yppGN0s/yrkZN
Cn6gruhSw7yNRmsdy8wUe+vPT/nLdm3jhuf15x79BAiNNa7Ip93GXPtw0clB
AlS2fn6Rtb2Fn91pPA/+I8AszW+61LUttAiJJLJNEOCgYCgxbnELRV6L/Ryc
IYCERtr1iNktXCv54eS4SABd+9Le4IktdLYLy99YJ4BzQquV38gWjub+MJHZ
QYT4jtGjHv1bCJWi7c92E6GJbo3k0rWFBT7PLqntJ8Ka0O6HTq1buB2jX3aE
kwgntDiWbBu2kNWduz2Vjwi3nc55fKrZwuIRr5STl4hgmHztwrvyLXTr/Ud8
IUWELAYdwxd5W3gvwozBWJMINb3qbeTMLZyS41m0fEOEvvS7N+xStjA7eHvQ
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
O460lm5WEuA7i6N/lsMy7u7iOKVC0Q/hIYe0Kz4tY+5Vj04eZiKkjOsUKr9f
RssVnaxIXiLkX4w51Wa0jPsTfi9JUPh4Z4nk2MjzZWQs+/En4ANF3zE7yRs+
Xca+gBD3V7+JsPSgLm5RYxkjz7KuyFH0H+u4rgmt0jKe57Hcp0h5nmSYnddP
XFnGQc9A+1cWoaD6oP5x1MVlHK7uoZsODgWd4CP5QoLLuOfIi+c/ykLB8kKc
PZxcxrd/dzccOhQGSeoNTI+ZlvEBiU7esjQM8oKOGg/tXMYTUkcaO8lhUD36
vOENzTI+v1G/9OBUOIx8Wvb6tLyEduKq3OGOFL4cxMHl07+El04FW3s+jIA4
389MV7qW8OxH0Kl3jYBrHiNr7S1LKE79Te1YaQQ8/ZrYfLR6CT+l9WgPiEYC
wVT6e1D6Enq5RoTT8kUB3239pfDvS2g2u2vn/SsxQLpRPyjruIQtkuqxkzYx
ICcpUj9qu4THWLvyzMti4M0FqtizH5ZQ7VvqRR2NWIjn8NCJ117C4c29UdtO
cXBpLrs67fIScndXcCjTJ0LJBFeWutASaj0/TScllAjqIw4Ry2eX8LnGcPKX
R4lg1qlkd4VrCR+WkxlWExIhq2RQNJdxCUtpOQdFnySBlN9uYnHvItJnPdD/
WpwM8jc1zRu/LmLSWiWR2TsNzpqY1dfZL2J9duKZnflpwBjy+0ytzSKKKm0G
5I+mQflWVXv5+0UMyV1+oHslHWSyJMTzdBYxYJys1dSSDjxjD92ztRYxZTi2
SHYzHWgPvR/PfLCIB2VSq++fzICi93F+KQqLuEPN48cJwwyQEuZcj7yyiP4i
e5fptzLguLb4/fBLizgjxklM5sqELVf1GOL5RVQyo96ovZEJuZOumoE8i+i0
Q1VJxiETxCO3s3/vXcTTsTafo2lIcKT16P5fexZR0Xq/hjoXCVbpxPRddy4i
UYb3s4IkCTKfGXN83SRjvubMoz3vSXD5eL+l9RgZfzIfOPOgkwT7FTebLIbI
WFFwZekfhf+RLQ+fM+8l47ydQSBxVxYkd6h0mzaTcftP2kWXS1ngvsvw8ts6
Mvr0Z0un3s6Ct2LfXAyryBj9yPfTimYWCHkVSr4qIOPWv96lKpssYCnp8dTL
IWN8tomOmlsWTC+sTT3LIKMzb6v4bFAW1HKzy+gkk/Hy1bkJ3/gsiFO5GPgk
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
            "]]}},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[ScriptCapitalE]\"", TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(P\\), \\(_\\)], \\(n\\)]\
\\)\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         Method->{
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None},
         PlotLabel->FormBox["\"n=4\"", TraditionalForm],
         PlotRange->{{-1.999999918367347, 1.999999918367347}, {0, 1}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Ticks->{Automatic, Automatic}], {967.5, -116.80842387373012`}, 
        ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
     ContentSelectable->True,
     ImageSize->{893.7499999999908, Automatic},
     PlotRangePadding->{6, 5}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.870369315136752*^9, 3.8703693170747585`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Quiet", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ProbPlusExpectation", "[", 
     RowBox[{
     "\[ScriptCapitalN]Dist", ",", "10", ",", "k", ",", "1", ",", "1", ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "50", ",", "5"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ProbPlusExpectation", "[", 
     RowBox[{
     "\[ScriptCapitalU]Dist", ",", "10", ",", "k", ",", "1", ",", "1", ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "50", ",", "5"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ProbPlusExpectation", "[", 
     RowBox[{
     "\[ScriptCapitalA]Dist", ",", "10", ",", "k", ",", "1", ",", "1", ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "50", ",", "5"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8675978473345213`*^9, 3.8675978754299045`*^9}, {
   3.8675987063054113`*^9, 3.867598717544859*^9}, {3.86759905675024*^9, 
   3.86759905688011*^9}, {3.867841313479923*^9, 3.8678413284715157`*^9}, {
   3.8678416252865252`*^9, 3.867841636053687*^9}, 3.8678663050790987`*^9, 
   3.868364919192127*^9, {3.8684385010921326`*^9, 3.8684385036925783`*^9}, {
   3.8684385387320666`*^9, 3.8684385505798607`*^9}, {3.8684387945186996`*^9, 
   3.868438804754171*^9}, {3.868438942560828*^9, 3.8684389452572546`*^9}, {
   3.8684389863368397`*^9, 3.8684389942638474`*^9}, {3.8684408833632374`*^9, 
   3.868440888978464*^9}, {3.8684478363521442`*^9, 3.868447839175722*^9}, {
   3.868449653667592*^9, 3.8684496552032766`*^9}, 3.868502855956321*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7071068216902476`", ",", "0.834626383419624`", ",", 
   "0.9091701911815363`", ",", "0.9496954156116623`", ",", 
   "0.9907598256410094`"}], "}"}]], "Output",
 CellChangeTimes->{3.8675978773330183`*^9, 3.8675987411894083`*^9, 
  3.867599275204277*^9, 3.8678663574277644`*^9, 3.868438586131529*^9, 
  3.8684389956028304`*^9, 3.868439034427491*^9, 3.8684483828403006`*^9, 
  3.868449673226247*^9, 3.8684501867732735`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7078139130195256`", ",", "0.6328049672425904`", ",", 
   "0.5955318795273938`", ",", "0.5381111150343509`", ",", 
   "0.47200135822889855`"}], "}"}]], "Output",
 CellChangeTimes->{3.8675978773330183`*^9, 3.8675987411894083`*^9, 
  3.867599275204277*^9, 3.8678663574277644`*^9, 3.868438586131529*^9, 
  3.8684389956028304`*^9, 3.868439034427491*^9, 3.8684483828403006`*^9, 
  3.868449673226247*^9, 3.8684507529864836`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"2", "^", 
       RowBox[{"(", 
        RowBox[{"-", "k"}], ")"}]}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"1", "/", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "+", 
         RowBox[{
          RowBox[{"2", "^", 
           RowBox[{"(", 
            RowBox[{"-", "k"}], ")"}]}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}]}]}], ")"}]}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"4", "^", 
       RowBox[{"(", 
        RowBox[{"-", "k"}], ")"}]}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"1", "/", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "+", 
         RowBox[{
          RowBox[{"4", "^", 
           RowBox[{"(", 
            RowBox[{"-", "k"}], ")"}]}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}]}]}], ")"}]}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8675980682687435`*^9, 3.8675982202514696`*^9}, {
   3.867598583298383*^9, 3.867598602633031*^9}, 3.8675986579447603`*^9, 
   3.8675987253838015`*^9, {3.86759931065336*^9, 3.8675993437083397`*^9}, {
   3.8677417506859417`*^9, 3.867741754924766*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6666666666666666`", ",", "0.8`", ",", "0.8888888888888888`", ",", 
   "0.9411764705882353`", ",", "0.9696969696969697`"}], "}"}]], "Output",
 CellChangeTimes->{{3.86759813541284*^9, 3.867598220671698*^9}, {
   3.8675985850927935`*^9, 3.867598607715602*^9}, 3.8675986606404753`*^9, 
   3.8675987412513437`*^9, {3.8675993127957225`*^9, 3.8675993442709556`*^9}, 
   3.8677417557558947`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8`", ",", "0.9411764705882353`", ",", "0.9846153846153847`", ",", 
   "0.9961089494163424`", ",", "0.9990243902439024`"}], "}"}]], "Output",
 CellChangeTimes->{{3.86759813541284*^9, 3.867598220671698*^9}, {
   3.8675985850927935`*^9, 3.867598607715602*^9}, 3.8675986606404753`*^9, 
   3.8675987412513437`*^9, {3.8675993127957225`*^9, 3.8675993442709556`*^9}, 
   3.8677417557608905`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<Rubi`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[ScriptCapitalF]\[ScriptCapitalS]", "[", 
  RowBox[{"Int", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]Dist", "[", "\[Sigma]", "]"}], ",", "t"}], 
      "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Beta]", "/", "\[Alpha]"}], ")"}], "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", 
             RowBox[{"(", 
              RowBox[{"\[ScriptCapitalE]", "+", "\[Omega]"}], ")"}]}], 
            "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", 
             RowBox[{"(", 
              RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], 
            "]"}]}], ")"}]}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptCapitalF]\[ScriptCapitalS]", "[", 
  RowBox[{"Int", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]Dist", "[", "\[Sigma]", "]"}], ",", "t"}], 
      "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Beta]", "/", "\[Alpha]"}], ")"}], "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", 
             RowBox[{"(", 
              RowBox[{"\[Omega]", "+", "\[Omega]"}], ")"}]}], "]"}]}], ")"}], 
         "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", 
             RowBox[{"(", 
              RowBox[{"\[Omega]", "-", "\[Omega]"}], ")"}]}], "]"}]}], 
          ")"}]}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptCapitalF]\[ScriptCapitalS]", "[", 
  RowBox[{"Int", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]Dist", "[", "\[Sigma]", "]"}], ",", "t"}], 
      "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Beta]", "/", "\[Alpha]"}], ")"}], "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Omega]"}], "+", "\[Omega]"}], ")"}]}], "]"}]}],
           ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"t", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Omega]"}], "-", "\[Omega]"}], ")"}]}], "]"}]}],
           ")"}]}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8678757768641224`*^9, 3.867875808210912*^9}, {
   3.8678763428293934`*^9, 3.8678764523001184`*^9}, {3.867876882713166*^9, 
   3.867876959737033*^9}, 3.8678773710948663`*^9, {3.8678774021597*^9, 
   3.867877455053358*^9}, {3.867878116161369*^9, 3.867878132617463*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Int", "[", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["t", "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]], 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"t", " ", 
                RowBox[{"(", 
                 RowBox[{"\[ScriptCapitalE]", "+", "\[Omega]"}], ")"}]}], 
               "]"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[Alpha]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"t", " ", 
                RowBox[{"(", 
                 RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], 
               "]"}]}], ")"}]}]]}]], ",", "t"}], "]"}], 
      RowBox[{
       SqrtBox[
        RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], ",", 
     RowBox[{"t", "\[Rule]", 
      RowBox[{"-", "\[Infinity]"}]}]}], "]"}]}], "+", 
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"Int", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["t", "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               RowBox[{"(", 
                RowBox[{"\[ScriptCapitalE]", "+", "\[Omega]"}], ")"}]}], 
              "]"}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["\[Alpha]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"t", " ", 
               RowBox[{"(", 
                RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], 
              "]"}]}], ")"}]}]]}]], ",", "t"}], "]"}], 
     RowBox[{
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], ",", 
    RowBox[{"t", "\[Rule]", "\[Infinity]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.867875865547989*^9, {3.867876354026887*^9, 3.867876453351037*^9}, 
   3.867876680876458*^9, 3.867876739013715*^9, {3.8678769038454514`*^9, 
   3.8678769174334865`*^9}, {3.8678769486334443`*^9, 
   3.8678769673707137`*^9}, {3.867877147538818*^9, 3.8678771768906546`*^9}, {
   3.867877411044569*^9, 3.867877423994275*^9}, 3.8678774576367025`*^9, 
   3.867878138695217*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Int", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["t", "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
          SuperscriptBox["\[Alpha]", "2"]}], 
         RowBox[{"2", "+", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "t", " ", "\[Omega]"}], "]"}]}], ")"}]}]}]], 
        ",", "t"}], "]"}], 
      RowBox[{
       SqrtBox[
        RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], ",", 
     RowBox[{"t", "\[Rule]", 
      RowBox[{"-", "\[Infinity]"}]}]}], "]"}]}], "+", 
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"Int", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["t", "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
         SuperscriptBox["\[Alpha]", "2"]}], 
        RowBox[{"2", "+", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "t", " ", "\[Omega]"}], "]"}]}], ")"}]}]}]], 
       ",", "t"}], "]"}], 
     RowBox[{
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], ",", 
    RowBox[{"t", "\[Rule]", "\[Infinity]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.867875865547989*^9, {3.867876354026887*^9, 3.867876453351037*^9}, 
   3.867876680876458*^9, 3.867876739013715*^9, {3.8678769038454514`*^9, 
   3.8678769174334865`*^9}, {3.8678769486334443`*^9, 
   3.8678769673707137`*^9}, {3.867877147538818*^9, 3.8678771768906546`*^9}, {
   3.867877411044569*^9, 3.867877423994275*^9}, 3.8678774576367025`*^9, 
   3.8678781398979807`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Erf", "[", 
        FractionBox["t", 
         RowBox[{
          SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], "+", 
      FractionBox[
       RowBox[{
        SqrtBox[
         FractionBox["2", "\[Pi]"]], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        RowBox[{"Int", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["t", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]]}]], 
            RowBox[{"1", "+", 
             SuperscriptBox["\[Beta]", "2"], "+", 
             RowBox[{
              SuperscriptBox["\[Alpha]", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "t", " ", "\[Omega]"}], "]"}]}]}]]}], ",", 
          "t"}], "]"}]}], "\[Sigma]"]}], ",", 
     RowBox[{"t", "\[Rule]", 
      RowBox[{"-", "\[Infinity]"}]}]}], "]"}]}], "+", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Erf", "[", 
       FractionBox["t", 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], "+", 
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox["2", "\[Pi]"]], " ", 
       SuperscriptBox["\[Beta]", "2"], " ", 
       RowBox[{"Int", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox["t", "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]}]], 
           RowBox[{"1", "+", 
            SuperscriptBox["\[Beta]", "2"], "+", 
            RowBox[{
             SuperscriptBox["\[Alpha]", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "t", " ", "\[Omega]"}], "]"}]}]}]]}], ",", 
         "t"}], "]"}]}], "\[Sigma]"]}], ",", 
    RowBox[{"t", "\[Rule]", "\[Infinity]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.867875865547989*^9, {3.867876354026887*^9, 3.867876453351037*^9}, 
   3.867876680876458*^9, 3.867876739013715*^9, {3.8678769038454514`*^9, 
   3.8678769174334865`*^9}, {3.8678769486334443`*^9, 
   3.8678769673707137`*^9}, {3.867877147538818*^9, 3.8678771768906546`*^9}, {
   3.867877411044569*^9, 3.867877423994275*^9}, 3.8678774576367025`*^9, 
   3.867878170761265*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalF]\[ScriptCapitalS]", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"dist", "[", "\[Sigma]", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"dist", ",", 
      RowBox[{"{", 
       RowBox[{
       "\[ScriptCapitalN]Dist", ",", "\[ScriptCapitalU]Dist", ",", 
        "\[ScriptCapitalA]Dist"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.86836997333556*^9, 3.8683700054958906`*^9}, {
  3.868477420836519*^9, 3.868477461555331*^9}, {3.8685028657469234`*^9, 
  3.8685028658827834`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Sigma]", ",", "\[Sigma]", ",", "\[Sigma]"}], "}"}]], "Output",
 CellChangeTimes->{{3.868369988743162*^9, 3.8683700062906885`*^9}, 
   3.868477462702424*^9, 3.868502868800172*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[ScriptCapitalF]\[ScriptCapitalS]", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]Dist", "[", "\[Sigma]", "]"}], ",", "t"}], 
      "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"t", 
          RowBox[{"(", 
           RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], "]"}]}], 
       ")"}], "/", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptCapitalF]\[ScriptCapitalS]", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalU]Dist", "[", "\[Sigma]", "]"}], ",", "t"}], 
      "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"t", 
          RowBox[{"(", 
           RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], "]"}]}], 
       ")"}], "/", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptCapitalF]\[ScriptCapitalS]", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalA]Dist", "[", "\[Sigma]", "]"}], ",", "t"}], 
      "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"t", 
          RowBox[{"(", 
           RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], "]"}]}], 
       ")"}], "/", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.868368212589676*^9, 3.8683682596357594`*^9}, {
   3.8683683166755233`*^9, 3.8683683183471937`*^9}, {3.868368587792644*^9, 
   3.86836860785566*^9}, 3.868369333723634*^9, {3.868370035455409*^9, 
   3.8683700423918266`*^9}, 3.869681618394801*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SuperscriptBox["\[Sigma]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}], "2"]}]]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.8683682805037208`*^9, 3.868368325618083*^9, 
  3.868368422552647*^9, 3.868369343088011*^9, 3.868370066526868*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", 
    FractionBox[
     RowBox[{
      SqrtBox["3"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["3"], " ", "\[Sigma]", " ", 
        RowBox[{"(", 
         RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}], "]"}]}], 
     RowBox[{
      RowBox[{"\[ScriptCapitalE]", " ", "\[Sigma]"}], "-", 
      RowBox[{"\[Sigma]", " ", "\[Omega]"}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8683682805037208`*^9, 3.868368325618083*^9, 
  3.868368422552647*^9, 3.868369343088011*^9, 3.868370068093877*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       SqrtBox["2"], " ", "\[Sigma]", " ", 
       RowBox[{"(", 
        RowBox[{"\[ScriptCapitalE]", "-", "\[Omega]"}], ")"}]}]}], "]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.8683682805037208`*^9, 3.868368325618083*^9, 
  3.868368422552647*^9, 3.868369343088011*^9, 3.8683701635046816`*^9}]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
WindowStatusArea->"",
Magnification:>1.6 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 9903, 239, 658, "Input"],
Cell[CellGroupData[{
Cell[10486, 263, 102, 2, 47, "Input"],
Cell[10591, 267, 24343, 656, 47, "Output"]
}, Open  ]],
Cell[34949, 926, 24928, 590, 1606, "Input"],
Cell[59880, 1518, 6780, 171, 106, "Input"],
Cell[66663, 1691, 18201, 366, 317, "Input"],
Cell[CellGroupData[{
Cell[84889, 2061, 1391, 32, 106, "Input"],
Cell[86283, 2095, 3004, 60, 392, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89324, 2160, 571, 18, 47, "Input"],
Cell[89898, 2180, 316, 10, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90251, 2195, 16855, 395, 193, "Input"],
Cell[107109, 2592, 13651, 239, 581, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120797, 2836, 12171, 305, 209, "Input"],
Cell[132971, 3143, 12272, 234, 552, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145280, 3382, 11504, 281, 164, "Input"],
Cell[156787, 3665, 40580, 802, 228, "Output"],
Cell[197370, 4469, 35492, 721, 405, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232899, 5195, 1995, 39, 106, "Input"],
Cell[234897, 5236, 15411, 283, 417, "Output"],
Cell[250311, 5521, 17956, 325, 417, "Output"],
Cell[268270, 5848, 18132, 328, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286439, 6181, 1562, 33, 106, "Input"],
Cell[288004, 6216, 15368, 284, 417, "Output"],
Cell[303375, 6502, 18031, 327, 417, "Output"],
Cell[321409, 6831, 18165, 329, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339611, 7165, 1889, 43, 129, "Input"],
Cell[341503, 7210, 57350, 957, 395, "Output"]
}, Open  ]],
Cell[398868, 8170, 2526, 59, 166, "Input"],
Cell[401397, 8231, 177071, 2938, 329, "Input"],
Cell[578471, 11171, 3217, 68, 203, "Input"],
Cell[581691, 11241, 23622, 448, 158, "Input"],
Cell[605316, 11691, 24648, 452, 443, "Input"],
Cell[CellGroupData[{
Cell[629989, 12147, 2637, 68, 121, "Input"],
Cell[632629, 12217, 9145, 182, 406, "Output"]
}, Open  ]],
Cell[641789, 12402, 1504, 41, 106, "Input"],
Cell[643296, 12445, 1859, 48, 129, "Input"],
Cell[645158, 12495, 248067, 4099, 334, "Input"],
Cell[CellGroupData[{
Cell[893250, 16598, 2181, 48, 106, "Input"],
Cell[895434, 16648, 464, 9, 47, "Output"],
Cell[895901, 16659, 466, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896404, 16673, 1708, 52, 77, "Input"],
Cell[898115, 16727, 432, 8, 47, "Output"],
Cell[898550, 16737, 432, 8, 47, "Output"]
}, Open  ]],
Cell[898997, 16748, 68, 1, 47, "Input"],
Cell[CellGroupData[{
Cell[899090, 16753, 3533, 105, 132, "Input"],
Cell[902626, 16860, 2907, 82, 149, "Output"],
Cell[905536, 16944, 2236, 64, 129, "Output"],
Cell[907775, 17010, 2595, 74, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910407, 17089, 595, 14, 47, "Input"],
Cell[911005, 17105, 220, 4, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[911262, 17114, 2179, 64, 106, "Input"],
Cell[913444, 17180, 524, 15, 75, "Output"],
Cell[913971, 17197, 614, 17, 113, "Output"],
Cell[914588, 17216, 462, 13, 75, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
